import { flipRows, scalePixels } from "./pixel-data-utils.js";
export function copyTextureToImage(source, options) {
  const dataUrl = copyTextureToDataUrl(source, options);
  const targetImage = (options === null || options === void 0 ? void 0 : options.targetImage) || new Image();
  targetImage.src = dataUrl;
  return targetImage;
}
export function copyTextureToDataUrl(source) {
  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const {
    sourceAttachment = 36064,
    targetMaxHeight = Number.MAX_SAFE_INTEGER
  } = options;
  let data = source.device.readPixelsToArrayWebGL(source, {
    sourceAttachment
  });
  let {
    width,
    height
  } = source;
  while (height > targetMaxHeight) {
    ({
      data,
      width,
      height
    } = scalePixels({
      data,
      width,
      height
    }));
  }
  flipRows({
    data,
    width,
    height
  });
  const canvas = document.createElement('canvas');
  canvas.width = width;
  canvas.height = height;
  const context = canvas.getContext('2d');
  const imageData = context.createImageData(width, height);
  imageData.data.set(data);
  context.putImageData(imageData, 0, 0);
  return canvas.toDataURL('image/png');
}
//# sourceMappingURL=copy-texture-to-image.js.map