{"version":3,"file":"texture-transform.js","names":["Model","getPassthroughFS","FS_OUTPUT_VARIABLE","TextureTransform","constructor","device","props","model","sampler","currentIndex","samplerTextureMap","bindings","resources","createSampler","addressModeU","addressModeV","minFilter","magFilter","mipmapFilter","id","fs","version","input","targetTextureVarying","inputChannels","targetTextureChannels","output","vertexCount","_initialize","Object","seal","destroy","delete","run","options","framebuffer","renderPass","beginRenderPass","draw","end","update","console","warn","getData","packed","arguments","length","undefined","Error","getTargetTexture","targetTexture","getFramebuffer","currentResources","_updateBindings","_updateBinding","binding","_ref","sourceBuffers","sourceTextures","assign","width","height","createFramebuffer","colorAttachments","resize","_setSourceTextureParameters","index","name"],"sources":["../../src/transform/texture-transform.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport { Buffer, Device, Framebuffer, RenderPassProps, Sampler, Texture } from '@luma.gl/core';\nimport { Model, ModelProps } from '../model/model';\nimport { getPassthroughFS } from '@luma.gl/shadertools';\n\n/**\n * Properties for creating a {@link TextureTransform}\n * @deprecated\n */\nexport type TextureTransformProps = Omit<ModelProps, 'fs'> & {\n  fs?: ModelProps['fs']; // override as optional\n  /** @deprecated TODO(donmccurdy): Needed? */\n  inject?: Record<string, string>;\n  /** @deprecated TODO(donmccurdy): Needed? */\n  framebuffer?: Framebuffer;\n  /** @deprecated TODO(donmccurdy): Model already handles this? */\n  sourceBuffers?: Record<string, Buffer>;\n  /** @deprecated TODO(donmccurdy): Model already handles this? */\n  sourceTextures?: Record<string, Texture>;\n  targetTexture: Texture;\n  targetTextureChannels: 1 | 2 | 3 | 4;\n  targetTextureVarying: string;\n};\n\n\ntype TextureBinding = {\n  sourceBuffers: Record<string, Buffer>;\n  sourceTextures: Record<string, Texture>;\n  targetTexture: Texture;\n  framebuffer?: Framebuffer;\n};\n\nconst FS_OUTPUT_VARIABLE = 'transform_output';\n\n/**\n * Creates a pipeline for textureâ†’texture transforms.\n * @deprecated\n */\nexport class TextureTransform {\n  readonly device: Device;\n  readonly model: Model;\n  readonly sampler: Sampler;\n  \n  currentIndex = 0;\n  samplerTextureMap: Record<string, any> | null = null;\n  bindings: TextureBinding[] = []; // each element is an object : {sourceTextures, targetTexture, framebuffer}\n  resources: Record<string, any> = {}; // resources to be deleted\n\n  constructor(device: Device, props: TextureTransformProps) {\n    this.device = device;\n\n    // For precise picking of element IDs.\n    this.sampler = device.createSampler({\n      addressModeU: 'clamp-to-edge',\n      addressModeV: 'clamp-to-edge',\n      minFilter: 'nearest',\n      magFilter: 'nearest',\n      mipmapFilter: 'nearest',\n    });\n\n    this.model = new Model(this.device, {\n      id: props.id || 'texture-transform-model',\n      fs: props.fs || getPassthroughFS({\n        version: 300,\n        input: props.targetTextureVarying,\n        inputChannels: props.targetTextureChannels,\n        output: FS_OUTPUT_VARIABLE\n      }),\n      vertexCount: props.vertexCount, // TODO(donmccurdy): Naming?\n      ...props\n    });\n\n    this._initialize(props);\n    Object.seal(this);\n  }\n\n  // Delete owned resources.\n  destroy(): void {}\n\n  /** @deprecated Use {@link destroy}. */\n  delete(): void {\n    this.destroy();\n  }\n\n  run(options?: RenderPassProps): void {\n    const {framebuffer} = this.bindings[this.currentIndex];\n    const renderPass = this.device.beginRenderPass({framebuffer, ...options});\n    this.model.draw(renderPass);\n    renderPass.end();\n  }\n\n  /** @deprecated */\n  update(...args: any[]): void {\n    // TODO(v9): Method should likely be removed for v9. Keeping a method stub\n    // to assist with migrating DeckGL usage.\n    // eslint-disable-next-line no-console\n    console.warn('TextureTransform#update() not implemented');\n  }\n\n\n  getData({packed = false} = {}) {\n    // TODO(v9): Method should likely be removed for v9. Keeping a method stub\n    // to assist with migrating DeckGL usage.\n    throw new Error('getData() not implemented');\n  }\n\n  getTargetTexture(): Texture {\n    const {targetTexture} = this.bindings[this.currentIndex];\n    return targetTexture;\n  }\n\n\n  getFramebuffer(): Framebuffer {\n    const currentResources = this.bindings[this.currentIndex];\n    return currentResources.framebuffer;\n  }\n\n  // Private\n\n  _initialize(props: TextureTransformProps): void {\n    this._updateBindings(props);\n  }\n\n  _updateBindings(props: TextureTransformProps) {\n    this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], props);\n  }\n\n  _updateBinding(\n    binding: TextureBinding,\n    {sourceBuffers, sourceTextures, targetTexture}: TextureTransformProps\n  ): TextureBinding {\n    if (!binding) {\n      binding = {\n        sourceBuffers: {},\n        sourceTextures: {},\n        targetTexture: null\n      };\n    }\n    Object.assign(binding.sourceTextures, sourceTextures);\n    Object.assign(binding.sourceBuffers, sourceBuffers);\n    if (targetTexture) {\n      binding.targetTexture = targetTexture;\n      const {width, height} = targetTexture;\n      // TODO(donmccurdy): When is this called, and is this expected?\n      if (binding.framebuffer) {\n        binding.framebuffer.destroy();\n      }\n      binding.framebuffer = this.device.createFramebuffer({\n        id: 'transform-framebuffer',\n        width,\n        height,\n        colorAttachments: [targetTexture]\n      });\n      binding.framebuffer.resize({width, height});\n    }\n    return binding;\n  }\n\n  // set texture filtering parameters on source textures.\n  _setSourceTextureParameters(): void {\n    const index = this.currentIndex;\n    const {sourceTextures} = this.bindings[index];\n    for (const name in sourceTextures) {\n      sourceTextures[name].sampler = this.sampler;\n    }\n  }\n}\n"],"mappings":"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"}