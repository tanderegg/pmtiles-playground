import { luma } from '@luma.gl/core';
import { AnimationLoop } from "./animation-loop.js";
export function makeAnimationLoop(AnimationLoopTemplateCtor, props) {
  let renderLoop = null;
  const device = (props === null || props === void 0 ? void 0 : props.device) || luma.createDevice();
  const animationLoop = new AnimationLoop({
    ...props,
    device,
    async onInitialize(animationProps) {
      var _renderLoop;
      renderLoop = new AnimationLoopTemplateCtor(animationProps);
      return await ((_renderLoop = renderLoop) === null || _renderLoop === void 0 ? void 0 : _renderLoop.onInitialize(animationProps));
    },
    onRender: animationProps => {
      var _renderLoop2;
      return (_renderLoop2 = renderLoop) === null || _renderLoop2 === void 0 ? void 0 : _renderLoop2.onRender(animationProps);
    },
    onFinalize: animationProps => {
      var _renderLoop3;
      return (_renderLoop3 = renderLoop) === null || _renderLoop3 === void 0 ? void 0 : _renderLoop3.onFinalize(animationProps);
    }
  });
  animationLoop.getInfo = () => {
    return this.AnimationLoopTemplateCtor.info;
  };
  return animationLoop;
}
//# sourceMappingURL=make-animation-loop.js.map