{"version":3,"file":"sphere-geometry.js","names":["uid","Geometry","SphereGeometry","constructor","props","arguments","length","undefined","id","indices","attributes","tesselateSphere","topology","nlat","nlong","startLat","endLat","Math","PI","latRange","startLong","endLong","longRange","numVertices","radius","n1","n2","n3","u","v","positions","Float32Array","normals","texCoords","IndexType","Uint32Array","Uint16Array","y","x","index","i2","i3","theta","phi","sinTheta","sin","cosTheta","cos","sinPhi","cosPhi","ux","uy","uz","r","numVertsAround","size","value","POSITION","NORMAL","TEXCOORD_0"],"sources":["../../src/geometries/sphere-geometry.ts"],"sourcesContent":["import {uid} from '@luma.gl/core';\nimport {Geometry} from '../geometry/geometry';\n\nexport type SphereGeometryProps = {\n  id?: string;\n  radius?: number;\n  nlat?: number;\n  nlong?: number;\n  attributes?: any\n};\n\n// Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n// copyright 2011 Google Inc. new BSD License\n// (http://www.opensource.org/licenses/bsd-license.php).\nexport class SphereGeometry extends Geometry {\n  constructor(props: SphereGeometryProps = {}) {\n    const {id = uid('sphere-geometry')} = props;\n    const {indices, attributes} = tesselateSphere(props);\n    super({\n      ...props,\n      id,\n      topology: 'triangle-list',\n      indices,\n      attributes: {...attributes, ...props.attributes}\n    });\n  }\n}\n\n/* eslint-disable max-statements, complexity */\nfunction tesselateSphere(props: SphereGeometryProps) {\n  const {nlat = 10, nlong = 10} = props;\n\n  const startLat = 0;\n  const endLat = Math.PI;\n  const latRange = endLat - startLat;\n  const startLong = 0;\n  const endLong = 2 * Math.PI;\n  const longRange = endLong - startLong;\n  const numVertices = (nlat + 1) * (nlong + 1);\n\n  const radius = (n1: number, n2: number, n3: number, u: number, v: number) => props.radius || 1;\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n\n  const IndexType = numVertices > 0xffff ? Uint32Array : Uint16Array;\n  const indices = new IndexType(nlat * nlong * 6);\n\n  // Create positions, normals and texCoords\n  for (let y = 0; y <= nlat; y++) {\n    for (let x = 0; x <= nlong; x++) {\n      const u = x / nlong;\n      const v = y / nlat;\n\n      const index = x + y * (nlong + 1);\n      const i2 = index * 2;\n      const i3 = index * 3;\n\n      const theta = longRange * u;\n      const phi = latRange * v;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n\n      const r = radius(ux, uy, uz, u, v);\n\n      positions[i3 + 0] = r * ux;\n      positions[i3 + 1] = r * uy;\n      positions[i3 + 2] = r * uz;\n\n      normals[i3 + 0] = ux;\n      normals[i3 + 1] = uy;\n      normals[i3 + 2] = uz;\n\n      texCoords[i2 + 0] = u;\n      texCoords[i2 + 1] = 1 - v;\n    }\n  }\n\n  // Create indices\n  const numVertsAround = nlong + 1;\n  for (let x = 0; x < nlong; x++) {\n    for (let y = 0; y < nlat; y++) {\n      const index = (x * nlat + y) * 6;\n\n      indices[index + 0] = y * numVertsAround + x;\n      indices[index + 1] = y * numVertsAround + x + 1;\n      indices[index + 2] = (y + 1) * numVertsAround + x;\n\n      indices[index + 3] = (y + 1) * numVertsAround + x;\n      indices[index + 4] = y * numVertsAround + x + 1;\n      indices[index + 5] = (y + 1) * numVertsAround + x + 1;\n    }\n  }\n\n  return {\n    indices: {size: 1, value: indices},\n    attributes: {\n      POSITION: {size: 3, value: positions},\n      NORMAL: {size: 3, value: normals},\n      TEXCOORD_0: {size: 2, value: texCoords}\n    }\n  };\n}\n"],"mappings":"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"}