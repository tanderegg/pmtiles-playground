{"version":3,"file":"truncated-cone-geometry.js","names":["uid","Geometry","INDEX_OFFSETS","x","y","z","TruncatedConeGeometry","constructor","props","arguments","length","undefined","id","indices","attributes","tesselateTruncatedCone","topology","POSITION","size","value","NORMAL","TEXCOORD_0","bottomRadius","topRadius","height","nradial","nvertical","verticalAxis","topCap","bottomCap","extra","numVertices","slant","Math","atan2","msin","sin","mcos","cos","mpi","PI","cosSlant","sinSlant","start","end","vertsAroundEdge","Uint16Array","indexOffset","positions","Float32Array","normals","texCoords","i3","i2","i","v","ringRadius","j","index"],"sources":["../../src/geometries/truncated-cone-geometry.ts"],"sourcesContent":["import {uid} from '@luma.gl/core';\nimport {Geometry} from '../geometry/geometry';\n\nconst INDEX_OFFSETS = {\n  x: [2, 0, 1],\n  y: [0, 1, 2],\n  z: [1, 2, 0]\n};\n\nexport type TruncatedConeGeometryProps = {\n  topRadius?: number;\n  bottomRadius?: number;\n  topCap?: boolean;\n  bottomCap?: boolean;\n  height?: number;\n  nradial?: number;\n  nvertical?: number;\n  verticalAxis?: 'x' | 'y' | 'z';\n};\n\n/**\n * Primitives inspired by TDL http://code.google.com/p/webglsamples/,\n * copyright 2011 Google Inc. new BSD License\n * (http://www.opensource.org/licenses/bsd-license.php).\n */\nexport class TruncatedConeGeometry extends Geometry {\n  constructor(props: TruncatedConeGeometryProps & {id?: string; attributes?: any} = {}) {\n    const {id = uid('truncated-code-geometry')} = props;\n    const {indices, attributes} = tesselateTruncatedCone(props);\n    super({\n      ...props,\n      id,\n      topology: 'triangle-list',\n      indices,\n      attributes: {\n        POSITION: {size: 3, value: attributes.POSITION},\n        NORMAL: {size: 3, value: attributes.NORMAL},\n        TEXCOORD_0: {size: 2, value: attributes.TEXCOORD_0},\n        ...props.attributes}\n    });\n  }\n}\n\n/* eslint-disable max-statements, complexity */\nfunction tesselateTruncatedCone(props: TruncatedConeGeometryProps = {}) {\n  const {\n    bottomRadius = 0,\n    topRadius = 0,\n    height = 1,\n    nradial = 10,\n    nvertical = 10,\n    verticalAxis = 'y',\n    topCap = false,\n    bottomCap = false\n  } = props;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n  const numVertices = (nradial + 1) * (nvertical + 1 + extra);\n\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const msin = Math.sin;\n  const mcos = Math.cos;\n  const mpi = Math.PI;\n  const cosSlant = mcos(slant);\n  const sinSlant = msin(slant);\n  const start = topCap ? -2 : 0;\n  const end = nvertical + (bottomCap ? 2 : 0);\n  const vertsAroundEdge = nradial + 1;\n\n  const indices = new Uint16Array(nradial * (nvertical + extra) * 6);\n  const indexOffset = INDEX_OFFSETS[verticalAxis];\n\n  const positions = new Float32Array(numVertices * 3);\n  const normals = new Float32Array(numVertices * 3);\n  const texCoords = new Float32Array(numVertices * 2);\n\n  let i3 = 0;\n  let i2 = 0;\n  for (let i = start; i <= end; i++) {\n    let v = i / nvertical;\n    let y = height * v;\n    let ringRadius;\n\n    if (i < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (i > nvertical) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius + (topRadius - bottomRadius) * (i / nvertical);\n    }\n    if (i === -2 || i === nvertical + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let j = 0; j < vertsAroundEdge; j++) {\n      const sin = msin((j * mpi * 2) / nradial);\n      const cos = mcos((j * mpi * 2) / nradial);\n\n      positions[i3 + indexOffset[0]] = sin * ringRadius;\n      positions[i3 + indexOffset[1]] = y;\n      positions[i3 + indexOffset[2]] = cos * ringRadius;\n\n      normals[i3 + indexOffset[0]] = i < 0 || i > nvertical ? 0 : sin * cosSlant;\n      normals[i3 + indexOffset[1]] = i < 0 ? -1 : i > nvertical ? 1 : sinSlant;\n      normals[i3 + indexOffset[2]] = i < 0 || i > nvertical ? 0 : cos * cosSlant;\n\n      texCoords[i2 + 0] = j / nradial;\n      texCoords[i2 + 1] = v;\n\n      i2 += 2;\n      i3 += 3;\n    }\n  }\n\n  for (let i = 0; i < nvertical + extra; i++) {\n    for (let j = 0; j < nradial; j++) {\n      const index = (i * nradial + j) * 6;\n      indices[index + 0] = vertsAroundEdge * (i + 0) + 0 + j;\n      indices[index + 1] = vertsAroundEdge * (i + 0) + 1 + j;\n      indices[index + 2] = vertsAroundEdge * (i + 1) + 1 + j;\n      indices[index + 3] = vertsAroundEdge * (i + 0) + 0 + j;\n      indices[index + 4] = vertsAroundEdge * (i + 1) + 1 + j;\n      indices[index + 5] = vertsAroundEdge * (i + 1) + 0 + j;\n    }\n  }\n\n  return {\n    indices,\n    attributes: {\n      POSITION: positions,\n      NORMAL: normals,\n      TEXCOORD_0: texCoords\n    }\n  };\n}\n"],"mappings":"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"}