{"version":3,"file":"pipeline-factory.js","names":["RenderPipeline","PipelineFactory","getDefaultPipelineFactory","device","_lumaData","defaultPipelineFactory","constructor","_hashCounter","_hashes","_useCounts","_pipelineCache","createRenderPipeline","options","props","defaultProps","hash","_hashRenderPipeline","pipeline","vs","createShader","stage","source","fs","release","destroy","vsHash","_getHash","fsHash","varyingHash","info","type","parameterHash","JSON","stringify","parameters","bufferLayoutHash","bufferLayout","topology","key","undefined"],"sources":["../../src/lib/pipeline-factory.ts"],"sourcesContent":["// luma.gl, MIT license\nimport type {RenderPipelineProps} from '@luma.gl/core';\nimport {Device, RenderPipeline} from '@luma.gl/core';\n\n/** Todo - should be same as RenderPipelineProps */\nexport type PipelineFactoryProps = Omit<RenderPipelineProps, 'vs' | 'fs'> & {\n  // Only accepts string shaders\n  vs: string;\n  fs: string;\n};\n\n/**\n * Efficiently creates / caches pipelines\n */\nexport class PipelineFactory {\n  static defaultProps: Required<PipelineFactoryProps> = {\n    ...RenderPipeline.defaultProps,\n    vs: undefined!,\n    fs: undefined!\n  };\n\n  readonly device: Device;\n\n  private _hashCounter: number = 0;\n  private readonly _hashes: Record<string, number> = {};\n  private readonly _useCounts: Record<string, number> = {};\n  private readonly _pipelineCache: Record<string, RenderPipeline> = {};\n\n  static getDefaultPipelineFactory(device: Device): PipelineFactory {\n    device._lumaData.defaultPipelineFactory =\n      device._lumaData.defaultPipelineFactory || new PipelineFactory(device);\n    return device._lumaData.defaultPipelineFactory as PipelineFactory;\n  }\n\n  constructor(device: Device) {\n    this.device = device;\n  }\n\n  createRenderPipeline(options: PipelineFactoryProps): RenderPipeline {\n    const props: Required<PipelineFactoryProps> = {...PipelineFactory.defaultProps, ...options};\n\n    const hash = this._hashRenderPipeline({...props});\n\n    if (!this._pipelineCache[hash]) {\n      const pipeline = this.device.createRenderPipeline({\n        ...props,\n        vs: this.device.createShader({stage: 'vertex', source: props.vs}),\n        fs: props.fs ? this.device.createShader({stage: 'fragment', source: props.fs}) : null\n      });\n\n      pipeline.hash = hash;\n      this._pipelineCache[hash] = pipeline;\n      this._useCounts[hash] = 0;\n    }\n\n    this._useCounts[hash]++;\n\n    return this._pipelineCache[hash];\n  }\n\n  release(pipeline: RenderPipeline): void {\n    const hash = pipeline.hash;\n    this._useCounts[hash]--;\n    if (this._useCounts[hash] === 0) {\n      this._pipelineCache[hash].destroy();\n      delete this._pipelineCache[hash];\n      delete this._useCounts[hash];\n    }\n  }\n\n  // PRIVATE\n\n  /** Calculate a hash based on all the inputs for a render pipeline */\n  private _hashRenderPipeline(props: PipelineFactoryProps): string {\n    const vsHash = this._getHash(props.vs);\n    const fsHash = props.fs ? this._getHash(props.fs) : 0;\n\n    // WebGL specific\n    // const {varyings = [], bufferMode = {}} = props;\n    // const varyingHashes = varyings.map((v) => this._getHash(v));\n    const varyingHash = '-'; // `${varyingHashes.join('/')}B${bufferMode}`\n\n    switch (this.device.info.type) {\n      case 'webgpu':\n        // On WebGPU we need to rebuild the pipeline if topology, parameters or bufferLayout change\n        const parameterHash = this._getHash(JSON.stringify(props.parameters));\n        const bufferLayoutHash = this._getHash(JSON.stringify(props.bufferLayout));\n        // TODO - Can json.stringify() generate different strings for equivalent objects if order of params is different?\n        // create a deepHash() to deduplicate?\n        return `${vsHash}/${fsHash}V${varyingHash}T${props.topology}P${parameterHash}BL${bufferLayoutHash}}`;\n      default:\n        // WebGL is more dynamic\n        return `${vsHash}/${fsHash}V${varyingHash}`;\n    }\n  }\n\n  private _getHash(key: string): number {\n    if (this._hashes[key] === undefined) {\n      this._hashes[key] = this._hashCounter++;\n    }\n    return this._hashes[key];\n  }\n}\n"],"mappings":"AAEA,SAAgBA,cAAc,QAAO,eAAe;AAYpD,OAAO,MAAMC,eAAe,CAAC;EAc3B,OAAOC,yBAAyBA,CAACC,MAAc,EAAmB;IAChEA,MAAM,CAACC,SAAS,CAACC,sBAAsB,GACrCF,MAAM,CAACC,SAAS,CAACC,sBAAsB,IAAI,IAAIJ,eAAe,CAACE,MAAM,CAAC;IACxE,OAAOA,MAAM,CAACC,SAAS,CAACC,sBAAsB;EAChD;EAEAC,WAAWA,CAACH,MAAc,EAAE;IAAA,KAbnBA,MAAM;IAAA,KAEPI,YAAY,GAAW,CAAC;IAAA,KACfC,OAAO,GAA2B,CAAC,CAAC;IAAA,KACpCC,UAAU,GAA2B,CAAC,CAAC;IAAA,KACvCC,cAAc,GAAmC,CAAC,CAAC;IASlE,IAAI,CAACP,MAAM,GAAGA,MAAM;EACtB;EAEAQ,oBAAoBA,CAACC,OAA6B,EAAkB;IAClE,MAAMC,KAAqC,GAAG;MAAC,GAAGZ,eAAe,CAACa,YAAY;MAAE,GAAGF;IAAO,CAAC;IAE3F,MAAMG,IAAI,GAAG,IAAI,CAACC,mBAAmB,CAAC;MAAC,GAAGH;IAAK,CAAC,CAAC;IAEjD,IAAI,CAAC,IAAI,CAACH,cAAc,CAACK,IAAI,CAAC,EAAE;MAC9B,MAAME,QAAQ,GAAG,IAAI,CAACd,MAAM,CAACQ,oBAAoB,CAAC;QAChD,GAAGE,KAAK;QACRK,EAAE,EAAE,IAAI,CAACf,MAAM,CAACgB,YAAY,CAAC;UAACC,KAAK,EAAE,QAAQ;UAAEC,MAAM,EAAER,KAAK,CAACK;QAAE,CAAC,CAAC;QACjEI,EAAE,EAAET,KAAK,CAACS,EAAE,GAAG,IAAI,CAACnB,MAAM,CAACgB,YAAY,CAAC;UAACC,KAAK,EAAE,UAAU;UAAEC,MAAM,EAAER,KAAK,CAACS;QAAE,CAAC,CAAC,GAAG;MACnF,CAAC,CAAC;MAEFL,QAAQ,CAACF,IAAI,GAAGA,IAAI;MACpB,IAAI,CAACL,cAAc,CAACK,IAAI,CAAC,GAAGE,QAAQ;MACpC,IAAI,CAACR,UAAU,CAACM,IAAI,CAAC,GAAG,CAAC;IAC3B;IAEA,IAAI,CAACN,UAAU,CAACM,IAAI,CAAC,EAAE;IAEvB,OAAO,IAAI,CAACL,cAAc,CAACK,IAAI,CAAC;EAClC;EAEAQ,OAAOA,CAACN,QAAwB,EAAQ;IACtC,MAAMF,IAAI,GAAGE,QAAQ,CAACF,IAAI;IAC1B,IAAI,CAACN,UAAU,CAACM,IAAI,CAAC,EAAE;IACvB,IAAI,IAAI,CAACN,UAAU,CAACM,IAAI,CAAC,KAAK,CAAC,EAAE;MAC/B,IAAI,CAACL,cAAc,CAACK,IAAI,CAAC,CAACS,OAAO,CAAC,CAAC;MACnC,OAAO,IAAI,CAACd,cAAc,CAACK,IAAI,CAAC;MAChC,OAAO,IAAI,CAACN,UAAU,CAACM,IAAI,CAAC;IAC9B;EACF;EAKQC,mBAAmBA,CAACH,KAA2B,EAAU;IAC/D,MAAMY,MAAM,GAAG,IAAI,CAACC,QAAQ,CAACb,KAAK,CAACK,EAAE,CAAC;IACtC,MAAMS,MAAM,GAAGd,KAAK,CAACS,EAAE,GAAG,IAAI,CAACI,QAAQ,CAACb,KAAK,CAACS,EAAE,CAAC,GAAG,CAAC;IAKrD,MAAMM,WAAW,GAAG,GAAG;IAEvB,QAAQ,IAAI,CAACzB,MAAM,CAAC0B,IAAI,CAACC,IAAI;MAC3B,KAAK,QAAQ;QAEX,MAAMC,aAAa,GAAG,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACC,SAAS,CAACpB,KAAK,CAACqB,UAAU,CAAC,CAAC;QACrE,MAAMC,gBAAgB,GAAG,IAAI,CAACT,QAAQ,CAACM,IAAI,CAACC,SAAS,CAACpB,KAAK,CAACuB,YAAY,CAAC,CAAC;QAG1E,OAAQ,GAAEX,MAAO,IAAGE,MAAO,IAAGC,WAAY,IAAGf,KAAK,CAACwB,QAAS,IAAGN,aAAc,KAAII,gBAAiB,GAAE;MACtG;QAEE,OAAQ,GAAEV,MAAO,IAAGE,MAAO,IAAGC,WAAY,EAAC;IAC/C;EACF;EAEQF,QAAQA,CAACY,GAAW,EAAU;IACpC,IAAI,IAAI,CAAC9B,OAAO,CAAC8B,GAAG,CAAC,KAAKC,SAAS,EAAE;MACnC,IAAI,CAAC/B,OAAO,CAAC8B,GAAG,CAAC,GAAG,IAAI,CAAC/B,YAAY,EAAE;IACzC;IACA,OAAO,IAAI,CAACC,OAAO,CAAC8B,GAAG,CAAC;EAC1B;AACF;AAxFarC,eAAe,CACnBa,YAAY,GAAmC;EACpD,GAAGd,cAAc,CAACc,YAAY;EAC9BI,EAAE,EAAEqB,SAAU;EACdjB,EAAE,EAAEiB;AACN,CAAC"}