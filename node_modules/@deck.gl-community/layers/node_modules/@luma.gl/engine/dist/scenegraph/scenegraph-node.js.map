{"version":3,"file":"scenegraph-node.js","names":["assert","uid","Vector3","Matrix4","ScenegraphNode","constructor","props","arguments","length","undefined","id","matrix","display","position","rotation","scale","userData","name","_setScenegraphNodeProps","getBounds","destroy","delete","setProps","toString","setPosition","setRotation","setScale","setMatrix","copyMatrix","copy","setMatrixComponents","components","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","options","getCoordinateUniforms","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","Object","assign"],"sources":["../../src/scenegraph/scenegraph-node.ts"],"sourcesContent":["import {assert, uid, NumberArray} from '@luma.gl/core';\nimport {Vector3, Matrix4} from '@math.gl/core';\n\n/** Properties for creating a new Scenegraph */\nexport type ScenegraphNodeProps = {\n  id?: string;\n  /** whether to display the object at all */\n  display?: boolean;\n  matrix?: NumberArray;\n  position?: NumberArray;\n  rotation?: NumberArray;\n  scale?: NumberArray;\n  update?: boolean\n};\n\nexport class ScenegraphNode {\n  readonly id: string;\n  matrix: Matrix4 = new Matrix4();\n\n  display = true; \n  position = new Vector3();\n  rotation = new Vector3();\n  scale = new Vector3(1, 1, 1);\n  userData: Record<string, unknown> = {};\n\n  props: ScenegraphNodeProps = {};\n\n  constructor(props: ScenegraphNodeProps = {}) {\n    const {id} = props;\n\n    this.id = id || uid(this.constructor.name);\n\n    this._setScenegraphNodeProps(props);\n  }\n\n  getBounds(): [number[], number[]] | null {\n    return null;\n  }\n\n  destroy(): void {}\n\n  /** @deprecated use .destroy() */\n  delete(): void {\n    this.destroy();\n  }\n  setProps(props: ScenegraphNodeProps): this {\n    this._setScenegraphNodeProps(props);\n    return this;\n  }\n\n  toString(): string {\n    return `{type: ScenegraphNode, id: ${this.id})}`;\n  }\n\n  setPosition(position: any): this {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation: any): this {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale: any): this {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrix(matrix: any, copyMatrix: boolean = true): void {\n    if (copyMatrix) {\n      this.matrix.copy(matrix);\n    } else {\n      this.matrix = matrix;\n    }\n  }\n\n  setMatrixComponents(components: {\n    position?: any;\n    rotation?: any;\n    scale?: any;\n    update?: boolean;\n  }): this {\n    const {position, rotation, scale, update = true} = components;\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix(): this {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update(options: {position?: any; rotation?: any; scale?: any} = {}): this {\n    const {position, rotation, scale} = options;\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(\n    viewMatrix: any,\n    modelMatrix?: any\n  ): {\n    viewMatrix: any;\n    modelMatrix: any;\n    objectMatrix: any;\n    worldMatrix: any;\n    worldInverseMatrix: any;\n    worldInverseTransposeMatrix: any;\n  } {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  /*\n  transform() {\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n  */\n\n  _setScenegraphNodeProps(props: ScenegraphNodeProps): void {\n    if ('display' in props) {\n      this.display = props.display;\n    }\n\n    if ('position' in props) {\n      this.setPosition(props.position);\n    }\n    if ('rotation' in props) {\n      this.setRotation(props.rotation);\n    }\n    if ('scale' in props) {\n      this.setScale(props.scale);\n    }\n\n    // Matrix overwrites other props\n    if ('matrix' in props) {\n      this.setMatrix(props.matrix);\n    }\n\n    Object.assign(this.props, props);\n  }\n}\n"],"mappings":"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"}