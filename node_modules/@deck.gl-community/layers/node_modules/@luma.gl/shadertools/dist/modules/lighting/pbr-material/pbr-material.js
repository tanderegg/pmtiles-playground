import { lighting } from "../lights/lighting-uniforms.js";
import { vs } from "./pbr-vertex.glsl.js";
import { fs } from "./pbr-fragment.glsl.js";
export const pbrMaterial = {
  name: 'pbr',
  vs,
  fs,
  defines: {
    LIGHTING_FRAGMENT: 1,
    HAS_NORMALMAP: 0,
    HAS_EMISSIVEMAP: 0,
    HAS_OCCLUSIONMAP: 0,
    HAS_BASECOLORMAP: 0,
    HAS_METALROUGHNESSMAP: 0,
    ALPHA_CUTOFF: 0,
    USE_IBL: 0,
    PBR_DEBUG: 0
  },
  uniformTypes: {
    unlit: 'i32',
    baseColorMapEnabled: 'i32',
    baseColorFactor: 'vec4<f32>',
    normalMapEnabled: 'i32',
    normalScale: 'f32',
    emissiveMapEnabled: 'i32',
    emissiveFactor: 'vec3<f32>',
    metallicRoughnessValues: 'vec2<f32>',
    metallicRoughnessMapEnabled: 'i32',
    occlusionMapEnabled: 'i32',
    occlusionStrength: 'f32',
    alphaCutoffEnabled: 'i32',
    alphaCutoff: 'f32',
    IBLenabled: 'i32',
    scaleIBLAmbient: 'vec2<f32>',
    scaleDiffBaseMR: 'vec4<f32>',
    scaleFGDSpec: 'vec4<f32>'
  },
  bindings: {
    baseColorSampler: {
      type: 'texture',
      location: 8
    },
    normalSampler: {
      type: 'texture',
      location: 9
    },
    emissiveSampler: {
      type: 'texture',
      location: 10
    },
    metallicRoughnessSampler: {
      type: 'texture',
      location: 11
    },
    occlusionSampler: {
      type: 'texture',
      location: 12
    },
    diffuseEnvSampler: {
      type: 'texture',
      location: 13
    },
    specularEnvSampler: {
      type: 'texture',
      location: 14
    },
    brdfLUT: {
      type: 'texture',
      location: 15
    }
  },
  dependencies: [lighting]
};
//# sourceMappingURL=pbr-material.js.map