{"version":3,"file":"noise.js","names":["glsl","fs","noise","name","uniformTypes","amount","uniformPropTypes","value","min","max","passes","filter"],"sources":["../../../../src/modules/postprocessing/image-adjust-filters/noise.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {ShaderPass} from '../../../lib/shader-module/shader-pass';\nimport {glsl} from '../../../lib/glsl-utils/highlight';\n\nconst fs = glsl`\\\nuniform noiseUniforms {\n  float amount;\n} noise;\n\nfloat rand(vec2 co) {\n  return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texCoord) {\n  float diff = (rand(texCoord) - 0.5) * noise.amount;\n  color.r += diff;\n  color.g += diff;\n  color.b += diff;\n  return color;\n}\n\nvec4 noise_filterColor(vec4 color, vec2 texSize, vec2 texCoord) {\n  return noise_filterColor(color, texCoord);\n}\n`;\n\n/**\n * Noise - Adds black and white noise to the image.\n */\nexport type NoiseProps = {\n  /**  0 to 1 (0 for no effect, 1 for maximum noise) */\n  amount?: number;\n};\n\n/**\n * Noise\n * Adds black and white noise to the image.\n */\nexport const noise: ShaderPass<NoiseProps, NoiseProps> = {\n  name: 'noise',\n  uniformTypes: {\n    amount: 'f32'\n  },\n  uniformPropTypes: {\n    amount: {value: 0.5, min: 0, max: 1}\n  },\n  fs,\n  passes: [{filter: true}]\n};\n"],"mappings":"SAIQA,IAAI;AAEZ,MAAMC,EAAE,GAAGD,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAcD,OAAO,MAAME,KAAyC,GAAG;EACvDC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,MAAM,EAAE;EACV,CAAC;EACDC,gBAAgB,EAAE;IAChBD,MAAM,EAAE;MAACE,KAAK,EAAE,GAAG;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC;EACrC,CAAC;EACDR,EAAE;EACFS,MAAM,EAAE,CAAC;IAACC,MAAM,EAAE;EAAI,CAAC;AACzB,CAAC"}