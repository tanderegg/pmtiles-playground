{"version":3,"file":"denoise.js","names":["glsl","fs","denoise","name","uniformTypes","strength","uniformPropTypes","format","value","min","max","passes","sampler"],"sources":["../../../../src/modules/postprocessing/image-adjust-filters/denoise.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {ShaderPass} from '../../../lib/shader-module/shader-pass';\nimport {glsl} from '../../../lib/glsl-utils/highlight';\n\n// Do a 9x9 bilateral box filter\nconst fs = glsl`\\\nuniform denoiseUniforms {\n  float strength;\n} noise;\n\nvec4 denoise_sampleColor(sampler2D source, vec2 texSize, vec2 texCoord) {\n  float adjustedExponent = 3. + 200. * pow(1. - noise.strength, 4.);\n\n  vec4 center = texture(source, texCoord);\n  vec4 color = vec4(0.0);\n  float total = 0.0;\n  for (float x = -4.0; x <= 4.0; x += 1.0) {\n    for (float y = -4.0; y <= 4.0; y += 1.0) {\n      vec4 offsetColor = texture(source, texCoord + vec2(x, y) / texSize);\n      float weight = 1.0 - abs(dot(offsetColor.rgb - center.rgb, vec3(0.25)));\n      weight = pow(weight, adjustedExponent);\n      color += offsetColor * weight;\n      total += weight;\n    }\n  }\n\n  return color / total;\n}\n`;\n\n/**\n * Denoise -\n * Smooths over grainy noise in dark images using an 9x9 box filter\n * weighted by color intensity, similar to a bilateral filter.\n */\nexport type DenoiseProps = {\n  /** \n   * The exponent of the color intensity difference, should be greater\n   * than zero. A value of zero just gives an 9x9 box blur and high values\n   * give the original image, but ideal values are usually around 10-20. \n   */\n  strength?: number;\n};\n\n/**\n * Denoise -\n * Smooths over grainy noise in dark images using an 9x9 box filter\n * weighted by color intensity, similar to a bilateral filter.\n */\nexport const denoise: ShaderPass<DenoiseProps> = {\n  name: 'denoise',\n  uniformTypes: {\n    strength: 'f32'\n  },\n  uniformPropTypes: {\n    strength: {format: 'f32', value: 0.5, min: 0, max: 1}\n    // strength: {..., adjust: (strength: number): number => 0.53 + 200 * Math.pow(1 - strength, 4) // TODO - JS preprocessing\n  },\n  fs,\n  passes: [{sampler: true}, {sampler: true}]\n};\n"],"mappings":"SAIQA,IAAI;AAGZ,MAAMC,EAAE,GAAGD,IAAK;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAqBD,OAAO,MAAME,OAAiC,GAAG;EAC/CC,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,gBAAgB,EAAE;IAChBD,QAAQ,EAAE;MAACE,MAAM,EAAE,KAAK;MAAEC,KAAK,EAAE,GAAG;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAC;EAEtD,CAAC;EACDT,EAAE;EACFU,MAAM,EAAE,CAAC;IAACC,OAAO,EAAE;EAAI,CAAC,EAAE;IAACA,OAAO,EAAE;EAAI,CAAC;AAC3C,CAAC"}