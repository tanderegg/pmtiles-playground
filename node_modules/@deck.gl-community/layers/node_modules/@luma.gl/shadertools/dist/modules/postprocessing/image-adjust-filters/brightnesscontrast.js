import { glsl } from "../../../lib/glsl-utils/highlight.js";
const fs = glsl`\

uniform brightnessContrastUniforms {
  float brightness;
  float contrast;
} brightnessContrast;

vec4 brightnessContrast_filterColor(vec4 color) {
  color.rgb += brightnessContrast.brightness;
  if (brightnessContrast.contrast > 0.0) {
    color.rgb = (color.rgb - 0.5) / (1.0 - brightnessContrast.contrast) + 0.5;
  } else {
    color.rgb = (color.rgb - 0.5) * (1.0 + brightnessContrast.contrast) + 0.5;
  }
  return color;
}

vec4 brightnessContrast_filterColor(vec4 color, vec2 texSize, vec2 texCoords) {
  return brightnessContrast_filterColor(color);
}
`;
export const brightnessContrast = {
  name: 'brightnessContrast',
  uniformTypes: {
    brightness: 'f32',
    contrast: 'f32'
  },
  uniformPropTypes: {
    brightness: {
      format: 'f32',
      value: 0,
      min: -1,
      max: 1
    },
    contrast: {
      format: 'f32',
      value: 0,
      min: -1,
      max: 1
    }
  },
  fs,
  passes: [{
    filter: true
  }]
};
//# sourceMappingURL=brightnesscontrast.js.map