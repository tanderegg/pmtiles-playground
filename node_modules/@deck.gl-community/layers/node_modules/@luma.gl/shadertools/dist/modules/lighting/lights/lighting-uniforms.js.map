{"version":3,"file":"lighting-uniforms.js","names":["lightingUniforms","MAX_LIGHTS","COLOR_FACTOR","LIGHT_TYPE","lighting","name","vs","fs","getUniforms","props","prevUniforms","defines","uniformTypes","enabled","ambientLightColor","numberOfLights","lightType","lightColor","lightPosition","lightDirection","lightAttenuation","defaultUniforms","POINT","arguments","length","undefined","lights","extractLightTypes","ambientLight","pointLights","directionalLights","hasLights","uniforms","getLightSourceUniforms","_ref","lightSourceUniforms","convertColor","currentLight","pointLight","position","attenuation","directionalLight","DIRECTIONAL","direction","_lightSources$directi","_lightSources$pointLi","lightSources","light","type","push","colorDef","color","intensity","map","component"],"sources":["../../../../src/modules/lighting/lights/lighting-uniforms.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {NumberArray} from '@math.gl/types';\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\nimport {lightingUniforms} from './lighting-uniforms.glsl';\n\n/** Max number of supported lights (in addition to ambient light */\nconst MAX_LIGHTS = 5;\n\n/** Whether to divide */\nconst COLOR_FACTOR = 255.0;\n\n/** Shader type field for lights */\nenum LIGHT_TYPE {\n  POINT = 0,\n  DIRECTIONAL = 1\n}\n\n/** Lighting helper types */\n\nexport type Light = AmbientLight | PointLight | DirectionalLight;\n\nexport type AmbientLight = {\n  type: 'ambient';\n  color?: Readonly<NumberArray>;\n  intensity?: number;\n}\n\nexport type PointLight = {\n  type: 'point';\n  position: Readonly<NumberArray>;\n  color?: Readonly<NumberArray>;\n  intensity?: number;\n  attenuation?: number;\n}\n\nexport type DirectionalLight = {\n  type: 'directional';\n  position: Readonly<NumberArray>;\n  direction: Readonly<NumberArray>;\n  color?: Readonly<NumberArray>;\n  intensity?: number;\n}\n\nexport type LightingProps = {\n  enabled?: boolean;\n  lights?: Light[];\n  /** @deprecated */\n  ambientLight?: AmbientLight;\n  /** @deprecated */\n  pointLights?: PointLight[];\n  /** @deprecated */\n  directionalLights?: DirectionalLight[];\n};\n\nexport type LightingUniforms = {\n  enabled: number;\n  ambientLightColor: Readonly<NumberArray>;\n  numberOfLights: number;\n  lightType: number; // [];\n  lightColor: Readonly<NumberArray>; // [];\n  lightPosition: Readonly<NumberArray>; // [];\n  lightDirection: Readonly<NumberArray>; // [];\n  lightAttenuation: Readonly<NumberArray>; // [];\n};\n\n/** UBO ready lighting module */\nexport const lighting: ShaderModule<LightingProps, LightingUniforms> = {\n  name: 'lighting',\n  vs: lightingUniforms,\n  fs: lightingUniforms,\n\n  getUniforms(props?: LightingProps, prevUniforms?: LightingUniforms): LightingUniforms {\n    return getUniforms(props);\n  },\n\n  defines: {\n    MAX_LIGHTS\n  },\n\n  uniformTypes: {\n    enabled: 'i32',\n    ambientLightColor: 'vec3<f32>',\n    numberOfLights: 'i32', // , array: MAX_LIGHTS,\n    lightType: 'i32', // , array: MAX_LIGHTS,\n    lightColor: 'vec3<f32>', // , array: MAX_LIGHTS,\n    lightPosition: 'vec3<f32>', // , array: MAX_LIGHTS,\n    // TODO - could combine direction and attenuation\n    lightDirection: 'vec3<f32>', // , array: MAX_LIGHTS,\n    lightAttenuation: 'vec3<f32>' // , array: MAX_LIGHTS},\n  },\n\n  defaultUniforms: { \n    enabled: 1,\n    ambientLightColor: [0.1, 0.1, 0.1],\n    numberOfLights: 0,\n    lightType: LIGHT_TYPE.POINT,\n    lightColor: [1, 1, 1],\n    lightPosition: [1, 1, 2],\n    // TODO - could combine direction and attenuation\n    lightDirection: [1, 1, 1],\n    lightAttenuation: [1, 1, 1],\n  }\n};\n\nfunction getUniforms(props?: LightingProps, prevUniforms: Partial<LightingUniforms> = {}): LightingUniforms {\n  // Copy props so we can modify \n  props = props ? {...props} : props;\n\n  // TODO legacy\n  if (!props) {\n    return {...lighting.defaultUniforms};\n  }\n  // Support for array of lights. Type of light is detected by type field\n  if (props.lights) {\n    props = {...props, ...extractLightTypes(props.lights), lights: undefined};\n  }\n\n  // Specify lights separately\n  const {ambientLight, pointLights, directionalLights} = props || {};\n  const hasLights =\n    ambientLight ||\n    (pointLights && pointLights.length > 0) ||\n    (directionalLights && directionalLights.length > 0);\n\n  // TODO - this may not be the correct decision\n  if (!hasLights) {\n    return {...lighting.defaultUniforms, enabled: 0};\n  }\n\n  const uniforms = {\n    ...lighting.defaultUniforms,\n    ...prevUniforms,\n    ...getLightSourceUniforms({ambientLight, pointLights, directionalLights}),\n  };\n\n  if (props.enabled !== undefined) {\n    uniforms.enabled = props.enabled ? 1 : 0;\n  }\n\n  return uniforms;\n}\n\nfunction getLightSourceUniforms({\n  ambientLight,\n  pointLights = [],\n  directionalLights = []\n}: LightingProps): Partial<LightingUniforms> {\n  const lightSourceUniforms: Partial<LightingUniforms> = {\n    // lightType: new Array(MAX_LIGHTS).fill(0),\n    // lightColor: new Array(MAX_LIGHTS).fill([0, 0, 0]),\n    // lightPosition: new Array(MAX_LIGHTS).fill([0, 0, 0]),\n    // lightDirection: new Array(MAX_LIGHTS).fill([0, 0, 0]),\n    // lightAttenuation: new Array(MAX_LIGHTS).fill([0, 0, 0])\n  };\n\n  lightSourceUniforms.ambientLightColor = convertColor(ambientLight);\n\n  let currentLight = 0;\n\n  for (const pointLight of pointLights) {\n    // lightSourceUniforms.lightType[currentLight] = LIGHT_TYPE.POINT;\n    // lightSourceUniforms.lightColor[currentLight] = convertColor(pointLight);\n    // lightSourceUniforms.lightPosition[currentLight] = pointLight.position;\n    // lightSourceUniforms.lightAttenuation[currentLight] = [pointLight.attenuation || 1, 0, 0];\n    lightSourceUniforms.lightType = LIGHT_TYPE.POINT;\n    lightSourceUniforms.lightColor = convertColor(pointLight);\n    lightSourceUniforms.lightPosition = pointLight.position;\n    lightSourceUniforms.lightAttenuation = [pointLight.attenuation || 1, 0, 0];\n    currentLight++;\n  }\n\n  for (const directionalLight of directionalLights) {\n    // lightSourceUniforms.lightType[currentLight] = LIGHT_TYPE.DIRECTIONAL;\n    // lightSourceUniforms.lightColor[currentLight] = convertColor(directionalLight);\n    // lightSourceUniforms.lightPosition[currentLight] = directionalLight.position;\n    // lightSourceUniforms.lightDirection[currentLight] = directionalLight.direction;\n    lightSourceUniforms.lightType = LIGHT_TYPE.DIRECTIONAL;\n    lightSourceUniforms.lightColor = convertColor(directionalLight);\n    lightSourceUniforms.lightPosition = directionalLight.position;\n    lightSourceUniforms.lightDirection = directionalLight.direction;\n    currentLight++;\n  }\n\n  lightSourceUniforms.numberOfLights = currentLight;\n\n  return lightSourceUniforms;\n}\n\nfunction extractLightTypes(lights: Light[]): LightingProps {\n  const lightSources: LightingProps = {pointLights: [], directionalLights: []};\n  for (const light of lights || []) {\n    switch (light.type) {\n      case 'ambient':\n        // Note: Only uses last ambient light\n        // TODO - add ambient light sources on CPU?\n        lightSources.ambientLight = light;\n        break;\n      case 'directional':\n        lightSources.directionalLights?.push(light);\n        break;\n      case 'point':\n        lightSources.pointLights?.push(light);\n        break;\n      default:\n      // eslint-disable-next-line\n      // console.warn(light.type);\n    }\n  }\n  return lightSources;\n}\n\n/** Take color 0-255 and intensity as input and output 0.0-1.0 range */\nfunction convertColor(colorDef: {color?: Readonly<NumberArray>, intensity?: number} = {}): NumberArray {\n  const {color = [0, 0, 0], intensity = 1.0} = colorDef;\n  return color.map((component) => (component * intensity) / COLOR_FACTOR);\n}\n"],"mappings":"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"}