import { glsl } from "../../../lib/glsl-utils/highlight.js";
const fs = glsl`\
uniform denoiseUniforms {
  float strength;
} noise;

vec4 denoise_sampleColor(sampler2D source, vec2 texSize, vec2 texCoord) {
  float adjustedExponent = 3. + 200. * pow(1. - noise.strength, 4.);

  vec4 center = texture(source, texCoord);
  vec4 color = vec4(0.0);
  float total = 0.0;
  for (float x = -4.0; x <= 4.0; x += 1.0) {
    for (float y = -4.0; y <= 4.0; y += 1.0) {
      vec4 offsetColor = texture(source, texCoord + vec2(x, y) / texSize);
      float weight = 1.0 - abs(dot(offsetColor.rgb - center.rgb, vec3(0.25)));
      weight = pow(weight, adjustedExponent);
      color += offsetColor * weight;
      total += weight;
    }
  }

  return color / total;
}
`;
export const denoise = {
  name: 'denoise',
  uniformTypes: {
    strength: 'f32'
  },
  uniformPropTypes: {
    strength: {
      format: 'f32',
      value: 0.5,
      min: 0,
      max: 1
    }
  },
  fs,
  passes: [{
    sampler: true
  }, {
    sampler: true
  }]
};
//# sourceMappingURL=denoise.js.map