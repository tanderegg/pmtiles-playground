{"version":3,"file":"shader-pass.js","names":[],"sources":["../../../src/lib/shader-module/shader-pass.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule, UniformValue} from './shader-module';\n\n/**\n * A shaderpass is a shader module with additional information\n * on how to run \n */\nexport type ShaderPass<PropsT extends Record<string, unknown> = Record<string, unknown>, UniformsT extends Record<string, UniformValue> = Record<string, UniformValue>> = ShaderModule<PropsT, UniformsT> & {\n  passes: ShaderPassData[];\n};\n\ntype ShaderPassData = {\n  sampler?: boolean;\n  filter?: boolean;\n  uniforms?: Record<string, UniformValue>;\n}\n"],"mappings":""}