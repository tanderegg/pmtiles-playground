{"version":3,"file":"resolve-modules.js","names":["ShaderModuleInstance","resolveModules","modules","instances","instantiateModules","getShaderDependencies","moduleMap","moduleDepth","getDependencyGraph","level","Object","keys","sort","a","b","map","name","options","Error","module","undefined","dependencies","TEST_EXPORTS"],"sources":["../../../src/lib/shader-assembly/resolve-modules.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {ShaderModule} from '../shader-module/shader-module';\nimport {ShaderModuleInstance} from '../shader-module/shader-module-instance';\n\n/** \n * Instantiate shader modules and esolve any dependencies\n */ \nexport function resolveModules(modules: (ShaderModule | ShaderModuleInstance)[]): ShaderModuleInstance[] {\n  const instances = ShaderModuleInstance.instantiateModules(modules);\n  return getShaderDependencies(instances);\n}\n\n/**\n * Takes a list of shader module names and returns a new list of\n * shader module names that includes all dependencies, sorted so\n * that modules that are dependencies of other modules come first.\n *\n * If the shader glsl code from the returned modules is concatenated\n * in the reverse order, it is guaranteed that all functions be resolved and\n * that all function and variable definitions come before use.\n *\n * @param modules - Array of modules (inline modules or module names)\n * @return - Array of modules\n */\nfunction getShaderDependencies(modules: ShaderModuleInstance[]): ShaderModuleInstance[] {\n  const moduleMap: Record<string, ShaderModuleInstance> = {};\n  const moduleDepth: Record<string, number> = {};\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\n\n  // Return a reverse sort so that dependencies come before the modules that use them\n  return Object.keys(moduleDepth)\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\n    .map((name) => moduleMap[name]);\n}\n\n/**\n * Recursively checks module dependencies to calculate dependency level of each module.\n *\n * @param options.modules - Array of modules\n * @param options.level - Current level\n * @param options.moduleMap -\n * @param options.moduleDepth - Current level\n * @return - Map of module name to its level\n */\n// Adds another level of dependencies to the result map\nexport function getDependencyGraph(options: {\n  modules: ShaderModuleInstance[],\n  level: number,\n  moduleMap: Record<string, ShaderModuleInstance>;\n  moduleDepth: Record<string, number>;\n}) {\n  const {modules, level, moduleMap, moduleDepth} = options;\n  if (level >= 5) {\n    throw new Error('Possible loop in shader dependency graph');\n  }\n\n  // Update level on all current modules\n  for (const module of modules) {\n    moduleMap[module.name] = module;\n    if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\n      moduleDepth[module.name] = level;\n    }\n  }\n\n  // Recurse\n  for (const module of modules) {\n    if (module.dependencies) {\n      getDependencyGraph({modules: module.dependencies, level: level + 1, moduleMap, moduleDepth});\n    }\n  }\n}\n\nexport const TEST_EXPORTS = {\n  getShaderDependencies,\n  getDependencyGraph\n};\n"],"mappings":"SAIQA,oBAAoB;AAK5B,OAAO,SAASC,cAAcA,CAACC,OAAgD,EAA0B;EACvG,MAAMC,SAAS,GAAGH,oBAAoB,CAACI,kBAAkB,CAACF,OAAO,CAAC;EAClE,OAAOG,qBAAqB,CAACF,SAAS,CAAC;AACzC;AAcA,SAASE,qBAAqBA,CAACH,OAA+B,EAA0B;EACtF,MAAMI,SAA+C,GAAG,CAAC,CAAC;EAC1D,MAAMC,WAAmC,GAAG,CAAC,CAAC;EAC9CC,kBAAkB,CAAC;IAACN,OAAO;IAAEO,KAAK,EAAE,CAAC;IAAEH,SAAS;IAAEC;EAAW,CAAC,CAAC;EAG/D,OAAOG,MAAM,CAACC,IAAI,CAACJ,WAAW,CAAC,CAC5BK,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKP,WAAW,CAACO,CAAC,CAAC,GAAGP,WAAW,CAACM,CAAC,CAAC,CAAC,CAC/CE,GAAG,CAAEC,IAAI,IAAKV,SAAS,CAACU,IAAI,CAAC,CAAC;AACnC;AAYA,OAAO,SAASR,kBAAkBA,CAACS,OAKlC,EAAE;EACD,MAAM;IAACf,OAAO;IAAEO,KAAK;IAAEH,SAAS;IAAEC;EAAW,CAAC,GAAGU,OAAO;EACxD,IAAIR,KAAK,IAAI,CAAC,EAAE;IACd,MAAM,IAAIS,KAAK,CAAC,0CAA0C,CAAC;EAC7D;EAGA,KAAK,MAAMC,MAAM,IAAIjB,OAAO,EAAE;IAC5BI,SAAS,CAACa,MAAM,CAACH,IAAI,CAAC,GAAGG,MAAM;IAC/B,IAAIZ,WAAW,CAACY,MAAM,CAACH,IAAI,CAAC,KAAKI,SAAS,IAAIb,WAAW,CAACY,MAAM,CAACH,IAAI,CAAC,GAAGP,KAAK,EAAE;MAC9EF,WAAW,CAACY,MAAM,CAACH,IAAI,CAAC,GAAGP,KAAK;IAClC;EACF;EAGA,KAAK,MAAMU,MAAM,IAAIjB,OAAO,EAAE;IAC5B,IAAIiB,MAAM,CAACE,YAAY,EAAE;MACvBb,kBAAkB,CAAC;QAACN,OAAO,EAAEiB,MAAM,CAACE,YAAY;QAAEZ,KAAK,EAAEA,KAAK,GAAG,CAAC;QAAEH,SAAS;QAAEC;MAAW,CAAC,CAAC;IAC9F;EACF;AACF;AAEA,OAAO,MAAMe,YAAY,GAAG;EAC1BjB,qBAAqB;EACrBG;AACF,CAAC"}