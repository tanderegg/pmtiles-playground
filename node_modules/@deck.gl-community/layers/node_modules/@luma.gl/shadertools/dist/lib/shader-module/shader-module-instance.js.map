{"version":3,"file":"shader-module-instance.js","names":["assert","makePropValidators","getValidatedProperties","normalizeInjections","index","ShaderModuleInstance","instantiateModules","modules","map","module","JSON","stringify","name","console","warn","moduleObject","dependencies","constructor","props","vs","fs","getModuleUniforms","deprecations","defines","injections","uniforms","uniformTypes","uniformPropTypes","getUniforms","inject","_parseDeprecationDefinitions","getModuleSource","stage","moduleSource","moduleName","toUpperCase","replace","userProps","getDefines","checkDeprecations","shaderSource","log","forEach","def","_def$regex","regex","test","deprecated","old","new","removed","type","RegExp","_defaultGetUniforms","opts","arguments","length","undefined","propTypes","key","propDef","private","validate","value"],"sources":["../../../src/lib/shader-module/shader-module-instance.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {assert} from '../utils/assert';\nimport {makePropValidators, getValidatedProperties, PropValidator} from '../filters/prop-types';\nimport {ShaderModule, ShaderModuleDeprecation} from './shader-module';\nimport { ShaderInjection, normalizeInjections } from '../shader-assembly/shader-injections';\n\nlet index = 1;\n\n/** An initialized ShaderModule, ready to use with `assembleShaders()` */\nexport class ShaderModuleInstance {\n  name: string;\n  vs?: string;\n  fs?: string;\n  getModuleUniforms: Function;\n  dependencies: ShaderModuleInstance[];\n  deprecations: ShaderModuleDeprecation[];\n  defines: Record<string, string | number>;\n  injections: {\n    vertex: Record<string, ShaderInjection>;\n    fragment: Record<string, ShaderInjection>;\n  };\n  uniforms: Record<string, PropValidator> = {};\n  uniformTypes: Record<string, PropValidator> = {};\n\n  static instantiateModules(\n    modules: (ShaderModule | ShaderModuleInstance)[]\n  ): ShaderModuleInstance[] {\n    return modules.map((module: ShaderModule | ShaderModuleInstance) => {\n      if (module instanceof ShaderModuleInstance) {\n        return module;\n      }\n\n      assert(\n        typeof module !== 'string',\n        `Shader module use by name is deprecated. Import shader module '${JSON.stringify(module)}' and use it directly.`\n      );\n      if (!module.name) {\n        // eslint-disable-next-line no-console\n        console.warn('shader module has no name');\n        module.name = `shader-module-${index++}`;\n      }\n\n      const moduleObject = new ShaderModuleInstance(module);\n      moduleObject.dependencies = ShaderModuleInstance.instantiateModules(module.dependencies || []);\n\n      return moduleObject;\n    });\n  }\n\n  constructor(props: ShaderModule) {\n    const {\n      name,\n      vs,\n      fs,\n      dependencies = [],\n      uniformPropTypes = {},\n      getUniforms,\n      deprecations = [],\n      defines = {},\n      inject = {}\n    } = props;\n\n    assert(typeof name === 'string');\n    this.name = name;\n    this.vs = vs;\n    this.fs = fs;\n    this.getModuleUniforms = getUniforms;\n    this.dependencies = ShaderModuleInstance.instantiateModules(dependencies);\n    this.deprecations = this._parseDeprecationDefinitions(deprecations);\n    this.defines = defines;\n    this.injections = normalizeInjections(inject);\n\n    if (uniformPropTypes) {\n      this.uniforms = makePropValidators(uniformPropTypes);\n    }\n  }\n\n  // Extracts the source code chunk for the specified shader type from the named shader module\n  getModuleSource(stage: 'vertex' | 'fragment'): string {\n    let moduleSource;\n    switch (stage) {\n      case 'vertex':\n        moduleSource = this.vs || '';\n        break;\n      case 'fragment':\n        moduleSource = this.fs || '';\n        break;\n      default:\n        assert(false);\n    }\n\n    const moduleName = this.name.toUpperCase().replace(/[^0-9a-z]/gi, '_');\n    return `\\\n// ----- MODULE ${this.name} ---------------\n\n#define MODULE_${moduleName}\n${moduleSource}\\\n\n\n`;\n  }\n\n  getUniforms(userProps: Record<string, any>, uniforms: Record<string, any>): Record<string, any> {\n    if (this.getModuleUniforms) {\n      return this.getModuleUniforms(userProps, uniforms);\n    }\n    // Build uniforms from the uniforms array\n    return getValidatedProperties(userProps, this.uniforms, this.name);\n  }\n\n  getDefines(): Record<string, string | number> {\n    return this.defines;\n  }\n\n  // Warn about deprecated uniforms or functions\n  checkDeprecations(shaderSource: string, log: any): void {\n    this.deprecations.forEach(def => {\n      if (def.regex?.test(shaderSource)) {\n        if (def.deprecated) {\n          log.deprecated(def.old, def.new)();\n        } else {\n          log.removed(def.old, def.new)();\n        }\n      }\n    });\n  }\n\n  _parseDeprecationDefinitions(deprecations: ShaderModuleDeprecation[]) {\n    deprecations.forEach(def => {\n      switch (def.type) {\n        case 'function':\n          def.regex = new RegExp(`\\\\b${def.old}\\\\(`);\n          break;\n        default:\n          def.regex = new RegExp(`${def.type} ${def.old};`);\n      }\n    });\n\n    return deprecations;\n  }\n\n  _defaultGetUniforms(opts: Record<string, any> = {}): Record<string, any> {\n    const uniforms: Record<string, any> = {};\n    const propTypes = this.uniforms;\n\n    for (const key in propTypes) {\n      const propDef = propTypes[key];\n      if (key in opts && !propDef.private) {\n        if (propDef.validate) {\n          assert(propDef.validate(opts[key], propDef), `${this.name}: invalid ${key}`);\n        }\n        uniforms[key] = opts[key];\n      } else {\n        uniforms[key] = propDef.value;\n      }\n    }\n\n    return uniforms;\n  }\n}\n"],"mappings":"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"}