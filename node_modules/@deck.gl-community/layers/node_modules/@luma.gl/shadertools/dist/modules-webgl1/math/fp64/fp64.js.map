{"version":3,"file":"fp64.js","names":["fp64ify","fp64LowPart","fp64ifyMatrix4","fp64arithmeticShader","fp64functionShader","CONST_UNIFORMS","ONE","getUniforms","fp64arithmetic","name","vs","fp64","dependencies"],"sources":["../../../../src/modules-webgl1/math/fp64/fp64.ts"],"sourcesContent":["import {fp64ify, fp64LowPart, fp64ifyMatrix4} from './fp64-utils';\n\nimport {fp64arithmeticShader} from './fp64-arithmetic.glsl';\nimport {fp64functionShader} from './fp64-functions.glsl';\n\nconst CONST_UNIFORMS = {\n  // Used in LUMA_FP64_CODE_ELIMINATION_WORKAROUND\n  ONE: 1.0\n};\nexport {fp64ify, fp64LowPart, fp64ifyMatrix4};\n\nfunction getUniforms() {\n  return CONST_UNIFORMS;\n}\n\n/**\n * 64bit arithmetic: add, sub, mul, div (small subset of fp64 module)\n */\nexport const fp64arithmetic = {\n  name: 'fp64-arithmetic',\n  vs: fp64arithmeticShader,\n  getUniforms,\n  fp64ify,\n  fp64LowPart,\n  fp64ifyMatrix4\n};\n\n/**\n* Full 64 bit math library\n*/\nexport const fp64 = {\n  name: 'fp64',\n  vs: fp64functionShader,\n  dependencies: [fp64arithmetic],\n\n  // Additional Functions\n  fp64ify,\n  fp64LowPart,\n  fp64ifyMatrix4\n};\n"],"mappings":"SAAQA,OAAO,EAAEC,WAAW,EAAEC,cAAc;AAAA,SAEpCC,oBAAoB;AAAA,SACpBC,kBAAkB;AAE1B,MAAMC,cAAc,GAAG;EAErBC,GAAG,EAAE;AACP,CAAC;AACD,SAAQN,OAAO,EAAEC,WAAW,EAAEC,cAAc;AAE5C,SAASK,WAAWA,CAAA,EAAG;EACrB,OAAOF,cAAc;AACvB;AAKA,OAAO,MAAMG,cAAc,GAAG;EAC5BC,IAAI,EAAE,iBAAiB;EACvBC,EAAE,EAAEP,oBAAoB;EACxBI,WAAW;EACXP,OAAO;EACPC,WAAW;EACXC;AACF,CAAC;AAKD,OAAO,MAAMS,IAAI,GAAG;EAClBF,IAAI,EAAE,MAAM;EACZC,EAAE,EAAEN,kBAAkB;EACtBQ,YAAY,EAAE,CAACJ,cAAc,CAAC;EAG9BR,OAAO;EACPC,WAAW;EACXC;AACF,CAAC"}