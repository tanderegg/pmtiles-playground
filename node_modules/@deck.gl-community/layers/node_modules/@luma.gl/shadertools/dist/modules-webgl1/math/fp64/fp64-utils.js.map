{"version":3,"file":"fp64-utils.js","names":["fp64ify","a","out","arguments","length","undefined","startIndex","hiPart","Math","fround","loPart","fp64LowPart","fp64ifyMatrix4","matrix","matrixFP64","Float32Array","i","j","index"],"sources":["../../../../src/modules-webgl1/math/fp64/fp64-utils.ts"],"sourcesContent":["import type {NumberArray} from '@math.gl/types';\n\n/**\n * Calculate WebGL 64 bit float\n * @param a  - the input float number\n * @param out - the output array. If not supplied, a new array is created.\n * @param startIndex - the index in the output array to fill from. Default 0.\n * @returns - the fp64 representation of the input number\n */\nexport function fp64ify(a: number, out: NumberArray = [], startIndex: number = 0): NumberArray {\n  const hiPart = Math.fround(a);\n  const loPart = a - hiPart;\n  out[startIndex] = hiPart;\n  out[startIndex + 1] = loPart;\n  return out;\n}\n\n/**\n * Calculate the low part of a WebGL 64 bit float\n * @param a the input float number\n * @returns the lower 32 bit of the number\n */\nexport function fp64LowPart(a: number): number {\n  return a - Math.fround(a);\n}\n\n/**\n * Calculate WebGL 64 bit matrix (transposed \"Float64Array\")\n * @param matrix  the input matrix\n * @returns the fp64 representation of the input matrix\n */\nexport function fp64ifyMatrix4(matrix: NumberArray): Float32Array {\n  // Transpose the projection matrix to column major for GLSL.\n  const matrixFP64 = new Float32Array(32);\n  for (let i = 0; i < 4; ++i) {\n    for (let j = 0; j < 4; ++j) {\n      const index = i * 4 + j;\n      fp64ify(matrix[j * 4 + i]!, matrixFP64, index * 2);\n    }\n  }\n  return matrixFP64;\n}\n"],"mappings":"AASA,OAAO,SAASA,OAAOA,CAACC,CAAS,EAA8D;EAAA,IAA5DC,GAAgB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEG,UAAkB,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC9E,MAAMI,MAAM,GAAGC,IAAI,CAACC,MAAM,CAACR,CAAC,CAAC;EAC7B,MAAMS,MAAM,GAAGT,CAAC,GAAGM,MAAM;EACzBL,GAAG,CAACI,UAAU,CAAC,GAAGC,MAAM;EACxBL,GAAG,CAACI,UAAU,GAAG,CAAC,CAAC,GAAGI,MAAM;EAC5B,OAAOR,GAAG;AACZ;AAOA,OAAO,SAASS,WAAWA,CAACV,CAAS,EAAU;EAC7C,OAAOA,CAAC,GAAGO,IAAI,CAACC,MAAM,CAACR,CAAC,CAAC;AAC3B;AAOA,OAAO,SAASW,cAAcA,CAACC,MAAmB,EAAgB;EAEhE,MAAMC,UAAU,GAAG,IAAIC,YAAY,CAAC,EAAE,CAAC;EACvC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IAC1B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC1B,MAAMC,KAAK,GAAGF,CAAC,GAAG,CAAC,GAAGC,CAAC;MACvBjB,OAAO,CAACa,MAAM,CAACI,CAAC,GAAG,CAAC,GAAGD,CAAC,CAAC,EAAGF,UAAU,EAAEI,KAAK,GAAG,CAAC,CAAC;IACpD;EACF;EACA,OAAOJ,UAAU;AACnB"}