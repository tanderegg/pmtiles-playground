import { Resource, ResourceProps } from './resource';
import { BindingDeclaration } from '../types/shader-layout';
import type { Device } from '../device';
import type { Shader } from './shader';
/**
 * Properties for a compute pipeline
 */
export type ComputePipelineProps = ResourceProps & {
    handle?: unknown;
    cs: Shader;
    csEntryPoint?: string;
    csConstants?: Record<string, number>;
    shaderLayout?: BindingDeclaration[];
};
/**
 * A compiled and linked shader program for compute
 */
export declare abstract class ComputePipeline extends Resource<ComputePipelineProps> {
    static defaultProps: Required<ComputePipelineProps>;
    get [Symbol.toStringTag](): string;
    hash: string;
    constructor(device: Device, props: ComputePipelineProps);
}
//# sourceMappingURL=compute-pipeline.d.ts.map