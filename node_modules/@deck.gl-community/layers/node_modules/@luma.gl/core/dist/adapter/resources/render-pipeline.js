let _Symbol$toStringTag;
import { Resource } from "./resource.js";
_Symbol$toStringTag = Symbol.toStringTag;
export class RenderPipeline extends Resource {
  get [_Symbol$toStringTag]() {
    return 'RenderPipeline';
  }
  constructor(device, props) {
    super(device, props, RenderPipeline.defaultProps);
    this.hash = '';
    this.vs = void 0;
    this.fs = void 0;
    this.shaderLayout = void 0;
    this.bufferLayout = void 0;
    this.shaderLayout = this.props.shaderLayout;
    this.bufferLayout = this.props.bufferLayout || [];
  }
}
RenderPipeline.defaultProps = {
  ...Resource.defaultProps,
  vs: null,
  vsEntryPoint: '',
  vsConstants: {},
  fs: null,
  fsEntryPoint: '',
  fsConstants: {},
  shaderLayout: null,
  bufferLayout: [],
  topology: 'triangle-list',
  parameters: {},
  vertexCount: 0,
  instanceCount: 0,
  bindings: {},
  uniforms: {}
};
//# sourceMappingURL=render-pipeline.js.map