{"version":3,"file":"command-buffer.js","names":["Resource","_Symbol$toStringTag","Symbol","toStringTag","CommandBuffer","constructor","device","props","defaultProps"],"sources":["../../../src/adapter/resources/command-buffer.ts"],"sourcesContent":["// luma.gl, MIT license\nimport { Device } from '../device';\nimport {Resource, ResourceProps} from './resource';\n\n// interface Queue {\n//   submit(commandBuffers);\n\n//   // onSubmittedWorkDone(): Promise<undefined>;\n\n//   writeBuffer(options: WriteBufferOptions): void;\n//   writeTexture(options: WriteTextureOptions): void;\n\n//   // copyExternalImageToTexture(\n//   //   GPUImageCopyExternalImage source,\n//   //   GPUImageCopyTextureTagged destination,\n//   //   GPUExtent3D copySize\n//   // ): void;\n// }\n\nexport type CommandBufferProps = ResourceProps & {\n};\n\n/**\n * Encodes commands to queue that can be executed later\n */\nexport abstract class CommandBuffer extends Resource<CommandBufferProps> {\n  static override defaultProps: Required<CommandBufferProps> = {\n    ...Resource.defaultProps\n  };\n  \n  override get [Symbol.toStringTag](): string {\n    return 'CommandBuffer';\n  }\n\n  constructor(device: Device, props: CommandBufferProps) {\n    super(device, props, CommandBuffer.defaultProps);\n  }\n}\n"],"mappings":";SAEQA,QAAQ;AAAAC,mBAAA,GA4BAC,MAAM,CAACC,WAAW;AALlC,OAAO,MAAeC,aAAa,SAASJ,QAAQ,CAAqB;EAKvE,KAAAC,mBAAA,IAA4C;IAC1C,OAAO,eAAe;EACxB;EAEAI,WAAWA,CAACC,MAAc,EAAEC,KAAyB,EAAE;IACrD,KAAK,CAACD,MAAM,EAAEC,KAAK,EAAEH,aAAa,CAACI,YAAY,CAAC;EAClD;AACF;AAZsBJ,aAAa,CACjBI,YAAY,GAAiC;EAC3D,GAAGR,QAAQ,CAACQ;AACd,CAAC"}