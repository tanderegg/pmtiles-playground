{"version":3,"file":"uniform-block.js","names":["arrayEqual","arrayCopy","UniformBlock","constructor","props","name","uniforms","modifiedUniforms","modified","bindingLayout","needsRedraw","shaderLayout","_props$shaderLayout$b","binding","bindings","find","type","Error","uniformBlock","uniform","setUniforms","key","value","Object","entries","_setUniform","setNeedsRedraw","reason","getAllUniforms"],"sources":["../../../src/lib/uniforms/uniform-block.ts"],"sourcesContent":["// luma.gl, MIT license\nimport type {ShaderUniformType} from '../../adapter/types/shader-types';\nimport type {UniformValue} from '../../adapter/types/types';\nimport {\n  ShaderLayout,\n  UniformInfo,\n  UniformBufferBindingLayout\n} from '../../adapter/types/shader-layout';\nimport {arrayEqual, arrayCopy} from '../../utils/array-equal';\n\n/**\n * A uniform block holds values of the of uniform values for one uniform block / buffer.\n * It also does some book keeping on what has changed, to minimize unnecessary writes to uniform buffers.\n * @todo - Track changes to individual uniforms (for WebGL1)\n */\nexport class UniformBlock<TUniforms extends Record<string, UniformValue> = Record<string, UniformValue>> {\n  name: string;\n\n  uniforms: Record<keyof TUniforms, UniformValue> = {} as Record<keyof TUniforms, UniformValue>;\n  modifiedUniforms: Record<keyof TUniforms, boolean> = {} as Record<keyof TUniforms, boolean>;\n  modified: boolean = true;\n\n  readonly bindingLayout: Record<string, UniformInfo> = {};\n  needsRedraw: string | false = 'initialized';\n\n  constructor(props?: {\n    name?: string;\n    shaderLayout?: ShaderLayout;\n    uniformTypes?: Record<keyof TUniforms, Record<string, ShaderUniformType>>;\n  }) {\n    this.name = props?.name;\n\n    // TODO - Extract uniform layout from the shaderLayout object\n    if (props?.name && props?.shaderLayout) {\n      const binding = props?.shaderLayout.bindings?.find(\n        binding => binding.type === 'uniform' && binding.name === props?.name\n      );\n      if (!binding) {\n        throw new Error(props?.name);\n      }\n\n      const uniformBlock = binding as UniformBufferBindingLayout;\n      for (const uniform of uniformBlock.uniforms || []) {\n        this.bindingLayout[uniform.name] = uniform;\n      }\n    }\n  }\n\n  /** Set a map of uniforms */\n  setUniforms(uniforms: Partial<TUniforms>): void {\n    for (const [key, value] of Object.entries(uniforms)) {\n      this._setUniform(key, value);\n      if (!this.needsRedraw) {\n        this.setNeedsRedraw(`${this.name}.${key}=${value}`);\n      }\n    }\n  }\n\n  setNeedsRedraw(reason: string): void {\n    this.needsRedraw = this.needsRedraw || reason;\n  }\n\n  /** Returns all uniforms */\n  getAllUniforms(): Record<string, UniformValue> {\n    // @ts-expect-error\n    this.modifiedUniforms = {};\n    this.needsRedraw = false;\n    return (this.uniforms || {}) as Record<string, UniformValue>;\n  }\n\n  /** Set a single uniform */\n  private _setUniform(key: keyof TUniforms, value: UniformValue) {\n    if (arrayEqual(this.uniforms[key], value)) {\n      return;\n    }\n    this.uniforms[key] = arrayCopy(value);\n    this.modifiedUniforms[key] = true;\n    this.modified = true;\n  }\n}\n"],"mappings":"SAQQA,UAAU,EAAEC,SAAS;AAO7B,OAAO,MAAMC,YAAY,CAAgF;EAUvGC,WAAWA,CAACC,KAIX,EAAE;IAAA,KAbHC,IAAI;IAAA,KAEJC,QAAQ,GAA0C,CAAC,CAAC;IAAA,KACpDC,gBAAgB,GAAqC,CAAC,CAAC;IAAA,KACvDC,QAAQ,GAAY,IAAI;IAAA,KAEfC,aAAa,GAAgC,CAAC,CAAC;IAAA,KACxDC,WAAW,GAAmB,aAAa;IAOzC,IAAI,CAACL,IAAI,GAAGD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI;IAGvB,IAAID,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEC,IAAI,IAAID,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEO,YAAY,EAAE;MAAA,IAAAC,qBAAA;MACtC,MAAMC,OAAO,GAAGT,KAAK,aAALA,KAAK,gBAAAQ,qBAAA,GAALR,KAAK,CAAEO,YAAY,CAACG,QAAQ,cAAAF,qBAAA,uBAA5BA,qBAAA,CAA8BG,IAAI,CAChDF,OAAO,IAAIA,OAAO,CAACG,IAAI,KAAK,SAAS,IAAIH,OAAO,CAACR,IAAI,MAAKD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,CACvE,CAAC;MACD,IAAI,CAACQ,OAAO,EAAE;QACZ,MAAM,IAAII,KAAK,CAACb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,IAAI,CAAC;MAC9B;MAEA,MAAMa,YAAY,GAAGL,OAAqC;MAC1D,KAAK,MAAMM,OAAO,IAAID,YAAY,CAACZ,QAAQ,IAAI,EAAE,EAAE;QACjD,IAAI,CAACG,aAAa,CAACU,OAAO,CAACd,IAAI,CAAC,GAAGc,OAAO;MAC5C;IACF;EACF;EAGAC,WAAWA,CAACd,QAA4B,EAAQ;IAC9C,KAAK,MAAM,CAACe,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAClB,QAAQ,CAAC,EAAE;MACnD,IAAI,CAACmB,WAAW,CAACJ,GAAG,EAAEC,KAAK,CAAC;MAC5B,IAAI,CAAC,IAAI,CAACZ,WAAW,EAAE;QACrB,IAAI,CAACgB,cAAc,CAAE,GAAE,IAAI,CAACrB,IAAK,IAAGgB,GAAI,IAAGC,KAAM,EAAC,CAAC;MACrD;IACF;EACF;EAEAI,cAAcA,CAACC,MAAc,EAAQ;IACnC,IAAI,CAACjB,WAAW,GAAG,IAAI,CAACA,WAAW,IAAIiB,MAAM;EAC/C;EAGAC,cAAcA,CAAA,EAAiC;IAE7C,IAAI,CAACrB,gBAAgB,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACG,WAAW,GAAG,KAAK;IACxB,OAAQ,IAAI,CAACJ,QAAQ,IAAI,CAAC,CAAC;EAC7B;EAGQmB,WAAWA,CAACJ,GAAoB,EAAEC,KAAmB,EAAE;IAC7D,IAAItB,UAAU,CAAC,IAAI,CAACM,QAAQ,CAACe,GAAG,CAAC,EAAEC,KAAK,CAAC,EAAE;MACzC;IACF;IACA,IAAI,CAAChB,QAAQ,CAACe,GAAG,CAAC,GAAGpB,SAAS,CAACqB,KAAK,CAAC;IACrC,IAAI,CAACf,gBAAgB,CAACc,GAAG,CAAC,GAAG,IAAI;IACjC,IAAI,CAACb,QAAQ,GAAG,IAAI;EACtB;AACF"}