import type { ShaderModule } from '@luma.gl/shadertools';
import type { DataFilterExtensionProps } from "./data-filter-extension.js";
export type Defines = {
    /**
     * Primitive type of parameter used for category filtering. If undefined, category filtering disabled.
     */
    DATACATEGORY_TYPE?: 'float' | 'vec2' | 'vec3' | 'vec4';
    /**
     * Number of category filtering channels. Must match dimension of `DATACATEGORY_TYPE`
     */
    DATACATEGORY_CHANNELS?: 1 | 2 | 3 | 4;
    /**
     * Primitive type of parameter used for numeric filtering. If undefined, numeric filtering disabled.
     */
    DATAFILTER_TYPE?: 'float' | 'vec2' | 'vec3' | 'vec4';
    /**
     * Enable 64-bit precision in numeric filter.
     */
    DATAFILTER_DOUBLE?: boolean;
    /**
     * Numeric filter attribute
     */
    DATAFILTER_ATTRIB?: 'filterValues' | 'instanceFilterValues';
    /**
     * Numeric filter attribute (low bits). Only used when `DATAFILTER_DOUBLE = true`
     */
    DATAFILTER_ATTRIB_64LOW?: 'filterValues64Low' | 'instanceFilterValues64Low';
    /**
     * Category filter attribute
     */
    DATACATEGORY_ATTRIB?: 'filterCategoryValues' | 'instanceFilterCategoryValues';
};
type DataFilterModuleSettings = {
    extensions: any[];
} & DataFilterExtensionProps;
export declare const shaderModule: ShaderModule<DataFilterModuleSettings>;
export declare const shaderModule64: ShaderModule<DataFilterModuleSettings>;
export {};
//# sourceMappingURL=shader-module.d.ts.map