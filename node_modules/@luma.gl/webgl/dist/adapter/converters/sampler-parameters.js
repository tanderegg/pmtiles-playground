import { convertCompareFunction } from "./device-parameters.js";
export function convertSamplerParametersToWebGL(props) {
  const params = {};
  if (props.addressModeU) {
    params[10242] = convertAddressMode(props.addressModeU);
  }
  if (props.addressModeV) {
    params[10243] = convertAddressMode(props.addressModeV);
  }
  if (props.addressModeW) {
    params[32882] = convertAddressMode(props.addressModeW);
  }
  if (props.magFilter) {
    params[10240] = convertMaxFilterMode(props.magFilter);
  }
  if (props.minFilter || props.mipmapFilter) {
    params[10241] = convertMinFilterMode(props.minFilter || 'linear', props.mipmapFilter);
  }
  if (props.lodMinClamp !== undefined) {
    params[33082] = props.lodMinClamp;
  }
  if (props.lodMaxClamp !== undefined) {
    params[33083] = props.lodMaxClamp;
  }
  if (props.type === 'comparison-sampler') {
    params[34892] = 34894;
  }
  if (props.compare) {
    params[34893] = convertCompareFunction('compare', props.compare);
  }
  if (props.maxAnisotropy) {
    params[34046] = props.maxAnisotropy;
  }
  return params;
}
export function updateSamplerParametersForNPOT(parameters) {
  const newParameters = {
    ...parameters
  };
  if (parameters[10241] !== 9728) {
    newParameters[10241] = 9729;
  }
  newParameters[10242] = 33071;
  newParameters[10243] = 33071;
  return newParameters;
}
function convertAddressMode(addressMode) {
  switch (addressMode) {
    case 'clamp-to-edge':
      return 33071;
    case 'repeat':
      return 10497;
    case 'mirror-repeat':
      return 33648;
  }
}
function convertMaxFilterMode(maxFilter) {
  switch (maxFilter) {
    case 'nearest':
      return 9728;
    case 'linear':
      return 9729;
  }
}
function convertMinFilterMode(minFilter, mipmapFilter) {
  if (!mipmapFilter) {
    return convertMaxFilterMode(minFilter);
  }
  switch (minFilter) {
    case 'nearest':
      return mipmapFilter === 'nearest' ? 9984 : 9986;
    case 'linear':
      return mipmapFilter === 'nearest' ? 9985 : 9987;
  }
}
//# sourceMappingURL=sampler-parameters.js.map