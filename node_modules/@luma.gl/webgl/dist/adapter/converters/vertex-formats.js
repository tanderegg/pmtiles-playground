export function getVertexFormatFromGL(type, components) {
  const base = getVertexTypeFromGL(type);
  switch (components) {
    case 1:
      return base;
    case 2:
      return `${base}x2`;
    case 3:
      return `${base}x3`;
    case 4:
      return `${base}x4`;
  }
  throw new Error(String(components));
}
export function getVertexTypeFromGL(type) {
  let normalized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  switch (type) {
    case 5124:
      return normalized ? 'sint32' : 'sint32';
    case 5125:
      return normalized ? 'uint32' : 'uint32';
    case 5122:
      return normalized ? 'sint16' : 'unorm16';
    case 5123:
      return normalized ? 'uint16' : 'unorm16';
    case 5120:
      return normalized ? 'sint8' : 'snorm16';
    case 5121:
      return normalized ? 'uint8' : 'unorm8';
    case 5126:
      return 'float32';
    case 5131:
      return 'float16';
  }
  throw new Error(String(type));
}
export function getGLFromVertexType(dataType) {
  switch (dataType) {
    case 'uint8':
      return 5121;
    case 'sint8':
      return 5120;
    case 'unorm8':
      return 5121;
    case 'snorm8':
      return 5120;
    case 'uint16':
      return 5123;
    case 'sint16':
      return 5122;
    case 'unorm16':
      return 5123;
    case 'snorm16':
      return 5122;
    case 'uint32':
      return 5125;
    case 'sint32':
      return 5124;
    case 'float16':
      return 5131;
    case 'float32':
      return 5126;
  }
  throw new Error(String(dataType));
}
//# sourceMappingURL=vertex-formats.js.map