{"version":3,"file":"texture-formats.js","names":["decodeTextureFormat","isWebGL2","getGLFromVertexType","texture_compression_bc","texture_compression_astc","texture_compression_etc2","texture_compression_etc1_webgl","texture_compression_pvrtc_webgl","texture_compression_atc_webgl","X_S3TC","X_S3TC_SRGB","X_RGTC","X_BPTC","X_ETC2","X_ASTC","X_ETC1","X_PVRTC","X_ATC","EXT_SRGB","EXT_TEXTURE_NORM16","EXT_FLOAT_WEBGL1","EXT_FLOAT_RENDER_WEBGL2","checkExtension","gl","extension","getExtension","checkExtensions","extensions","every","TEXTURE_FEATURE_CHECKS","checkTextureFeature","feature","_TEXTURE_FEATURE_CHEC","call","checkTextureFeatures","features","getTextureFeatures","textureFeatures","Object","keys","filter","TEXTURE_FORMATS","gl1","b","c","bpp","dataFormat","types","renderbuffer","render","f","x","wgpu","gl1ext","p","gl2ext","attachment","depthTexture","DATA_FORMAT_CHANNELS","TYPE_SIZES","isTextureFormatSupported","formatOrGL","format","convertGLToTextureFormat","info","undefined","Boolean","isRenderbufferFormatSupported","_TEXTURE_FORMATS$form","entry","entries","find","_ref","Error","convertTextureFormatToGL","formatInfo","webglFormat","getTextureFormatSupport","supported","renderable","filterable","blendable","storable","isTextureFormatFilterable","decoded","signed","endsWith","isTextureFormatRenderable","getWebGLTextureParameters","getWebGLPixelDataFormat","integer","normalized","type","dataType","compressed","getDepthStencilAttachmentWebGL","_checkFloat32ColorAttachment","internalFormat","arguments","length","srcFormat","srcType","texture","framebuffer","createTexture","bindTexture","level","width","height","border","pixel","Uint8Array","texImage2D","createFramebuffer","bindFramebuffer","framebufferTexture2D","status","checkFramebufferStatus","deleteTexture","deleteFramebuffer","getTextureFormatBytesPerPixel","params","channels","channelSize"],"sources":["../../../src/adapter/converters/texture-formats.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {TextureFormat, DeviceFeature} from '@luma.gl/core';\nimport {decodeTextureFormat} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {isWebGL2} from '../../context/context/webgl-checks';\nimport { getGLFromVertexType } from './vertex-formats';\n\n/* eslint-disable camelcase */\n\n// TEXTURE FEATURES\n\n// Define local device feature strings to optimize minification\nconst texture_compression_bc: DeviceFeature = 'texture-compression-bc';\nconst texture_compression_astc: DeviceFeature = 'texture-compression-astc';\nconst texture_compression_etc2: DeviceFeature = 'texture-compression-etc2';\nconst texture_compression_etc1_webgl: DeviceFeature = 'texture-compression-etc1-webgl';\nconst texture_compression_pvrtc_webgl: DeviceFeature = 'texture-compression-pvrtc-webgl';\nconst texture_compression_atc_webgl: DeviceFeature = 'texture-compression-atc-webgl';\n\n// Define local webgl extension strings to optimize minification\nconst X_S3TC = 'WEBGL_compressed_texture_s3tc'; // BC1, BC2, BC3\nconst X_S3TC_SRGB = 'WEBGL_compressed_texture_s3tc_srgb'; // BC1, BC2, BC3\nconst X_RGTC = 'EXT_texture_compression_rgtc'; // BC4, BC5\nconst X_BPTC = 'EXT_texture_compression_bptc'; // BC6, BC7\nconst X_ETC2 = 'WEBGL_compressed_texture_etc'; // Renamed from 'WEBGL_compressed_texture_es3'\nconst X_ASTC = 'WEBGL_compressed_texture_astc';\nconst X_ETC1 = 'WEBGL_compressed_texture_etc1';\nconst X_PVRTC = 'WEBGL_compressed_texture_pvrtc';\nconst X_ATC = 'WEBGL_compressed_texture_atc';\n\n// Define local webgl extension strings to optimize minification\nconst EXT_SRGB = 'EXT_sRGB'; // https://developer.mozilla.org/en-US/docs/Web/API/EXT_sRGB\nconst EXT_TEXTURE_NORM16 = 'EXT_texture_norm16';\nconst EXT_FLOAT_WEBGL1 = 'WEBGL_color_buffer_float';\nconst EXT_FLOAT_RENDER_WEBGL2 = 'EXT_color_buffer_float';\n// const EXT_HALF_FLOAT_WEBGL1 = 'EXT_color_buffer_half_float';\n// const DEPTH = 'WEBGL_depth_texture';\n\nconst checkExtension = (gl: WebGLRenderingContext, extension: string): boolean =>\n  gl.getExtension(extension);\nconst checkExtensions = (gl: WebGLRenderingContext, extensions: string[]): boolean =>\n  extensions.every(extension => gl.getExtension(extension));\n\n// prettier-ignore\nconst TEXTURE_FEATURE_CHECKS: Partial<Record<DeviceFeature, (gl: WebGLRenderingContext) => boolean> > = {\n  'texture-blend-float-webgl1': (gl) => isWebGL2(gl) ? true : checkExtension(gl, 'EXT_float_blend'),\n  'texture-formats-srgb-webgl1': (gl) => (isWebGL2(gl) ? true : checkExtension(gl, EXT_SRGB)),\n  'texture-formats-depth-webgl1': (gl) => isWebGL2(gl) ? true : checkExtension(gl, 'WEBGL_depth_texture'),\n  'texture-formats-float32-webgl1': (gl) => isWebGL2(gl) ? true : checkExtension(gl, 'OES_texture_float'),\n  'texture-formats-float16-webgl1': (gl) => isWebGL2(gl) ? true : checkExtension(gl, 'OES_texture_half_float'),\n  'texture-formats-norm16-webgl': (gl) => isWebGL2(gl) ? checkExtension(gl, EXT_TEXTURE_NORM16) : false,\n  'texture-filter-linear-float32-webgl': (gl) => checkExtension(gl, 'OES_texture_float_linear'),\n  'texture-filter-linear-float16-webgl': (gl) => checkExtension(gl, 'OES_texture_half_float_linear'),\n  'texture-filter-anisotropic-webgl': (gl) => checkExtension(gl, 'EXT_texture_filter_anisotropic'),\n  'texture-renderable-float32-webgl': (gl) => checkExtension(gl, 'EXT_color_buffer_float'), // [false, 'EXT_color_buffer_float'],\n  'texture-renderable-float16-webgl': (gl) => checkExtension(gl, 'EXT_color_buffer_half_float'),\n\n  'texture-compression-bc': (gl) => checkExtensions(gl, [X_S3TC, X_S3TC_SRGB, X_RGTC, X_BPTC]),\n  'texture-compression-bc5-webgl': (gl) => checkExtensions(gl, [X_RGTC]),\n  // 'texture-compression-bc7-webgl': gl => checkExtensions(gl, [X_BPTC]),\n  // 'texture-compression-bc3-srgb-webgl': gl => checkExtensions(gl, [X_S3TC_SRGB]),\n  // 'texture-compression-bc3-webgl': gl => checkExtensions(gl, [X_S3TC]),\n  'texture-compression-etc2': (gl) => checkExtensions(gl, [X_ETC2]),\n  'texture-compression-astc': (gl) => checkExtensions(gl, [X_ASTC]),\n  'texture-compression-etc1-webgl': (gl) => checkExtensions(gl, [X_ETC1]),\n  'texture-compression-pvrtc-webgl': (gl) => checkExtensions(gl, [X_PVRTC]),\n  'texture-compression-atc-webgl': (gl) => checkExtensions(gl, [X_ATC])\n};\n\nexport function checkTextureFeature(gl: WebGLRenderingContext, feature: DeviceFeature): boolean {\n  return TEXTURE_FEATURE_CHECKS[feature]?.(gl) || false;\n}\n\nconst checkTextureFeatures = (gl: WebGLRenderingContext, features: DeviceFeature[]): boolean =>\n  features.every(feature => checkTextureFeature(gl, feature));\n\n/** Return a list of texture feature strings (for Device.features). Mainly compressed texture support */\nexport function getTextureFeatures(gl: WebGLRenderingContext): DeviceFeature[] {\n  const textureFeatures = Object.keys(TEXTURE_FEATURE_CHECKS) as DeviceFeature[];\n  return textureFeatures.filter(feature => checkTextureFeature(gl, feature));\n}\n\n// TEXTURE FORMATS\n\n/** Map a format to webgl and constants */\ntype Format = {\n  gl?: GL;\n  /** If a different unsized format is needed in WebGL1 */\n  gl1?: GL;\n  gl1ext?: string;\n  /** format requires WebGL2, when using a WebGL 1 context, color renderbuffer formats are limited */\n  gl2ext?: string;\n\n  /** (bytes per pixel), for memory usage calculations. */\n  b?: number;\n  /** channels */\n  c?: number;\n  bpp?: number;\n  /** packed */\n  p?: number;\n  /** compressed */\n  x?: string;\n  /** for compressed texture formats */\n  f?: DeviceFeature;\n  /** renderable if feature is present */\n  render?: DeviceFeature;\n  /** filterable if feature is present */\n  filter?: DeviceFeature;\n\n  /** If not supported on WebGPU */\n  wgpu?: false;\n\n  types?: number[];\n\n  dataFormat?: GL;\n  /** Depth and stencil format attachment points. If set, needs to be a Renderbuffer unless depthTexture is set  */\n  attachment?: GL.DEPTH_ATTACHMENT | GL.STENCIL_ATTACHMENT | GL.DEPTH_STENCIL_ATTACHMENT;\n  /** if depthTexture is set this is a depth/stencil format that can be set to a texture  */\n  depthTexture?: boolean;\n\n  renderbuffer?: boolean\n};\n\n// TABLES\n\n/** \n * Texture format data -\n * Exported but can change without notice\n */\n// prettier-ignore\nexport const TEXTURE_FORMATS: Record<TextureFormat, Format> = {\n  // Unsized formats that leave the precision up to the driver.\n  // TODO - Fix bpp constants\n  // 'r8unorm-unsized': {gl: GL.LUMINANCE, b: 4, c: 2, bpp: 4},\n  'rgb8unorm-unsized': {gl: GL.RGB, gl1: GL.RGB, b: 4, c: 2, bpp: 4,\n    dataFormat: GL.RGB, types: [GL.UNSIGNED_BYTE, GL.UNSIGNED_SHORT_5_6_5]},\n  'rgba8unorm-unsized': {gl: GL.RGBA, gl1: GL.RGBA, b: 4, c: 2, bpp: 4,\n    dataFormat: GL.RGBA, types: [GL.UNSIGNED_BYTE, GL.UNSIGNED_SHORT_4_4_4_4, GL.UNSIGNED_SHORT_5_5_5_1]},\n  // 'rgb8unorm-srgb-unsized': {gl: GL.SRGB_EXT, b: 4, c: 2, bpp: 4, gl1Ext: SRGB},\n  // 'rgba8unorm-srgb-unsized': {gl: GL.SRGB_ALPHA_EXT, b: 4, c: 2, bpp: 4, gl1Ext: SRGB},\n\n  // 8-bit formats\n  'r8unorm': {gl: GL.R8, b: 1, c: 1, renderbuffer: true},\n  'r8snorm': {gl: GL.R8_SNORM, b: 1, c: 1},\n  'r8uint': {gl: GL.R8UI, b: 1, c: 1, renderbuffer: true},\n  'r8sint': {gl: GL.R8I, b: 1, c: 1, renderbuffer: true},\n\n  // 16-bit formats\n  'rg8unorm': {gl: GL.RG8, b: 2, c: 2, renderbuffer: true},\n  'rg8snorm': {gl: GL.RG8_SNORM, b: 2, c: 2},\n  'rg8uint': {gl: GL.RG8UI, b: 2, c: 2, renderbuffer: true},\n  'rg8sint': {gl: GL.RG8I, b: 2, c: 2, renderbuffer: true},\n\n  'r16uint': {gl: GL.R16UI, b: 2, c: 1, renderbuffer: true},\n  'r16sint': {gl: GL.R16I, b: 2, c: 1, renderbuffer: true},\n  'r16float': {gl: GL.R16F, b: 2, c: 1, render: 'texture-renderable-float16-webgl', filter: 'texture-filter-linear-float16-webgl', renderbuffer: true},\n  'r16unorm-webgl': {gl: GL.R16_EXT, b:2, c:1, f: 'texture-formats-norm16-webgl', renderbuffer: true, x: EXT_TEXTURE_NORM16},\n  'r16snorm-webgl': {gl: GL.R16_SNORM_EXT, b:2, c:1, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {gl: GL.RGBA4, b: 2, c: 4, wgpu: false, renderbuffer: true},\n  'rgb565unorm-webgl': {gl: GL.RGB565, b: 2, c: 4, wgpu: false, renderbuffer: true},\n  'rgb5a1unorm-webgl': {gl: GL.RGB5_A1, b: 2, c: 4, wgpu: false, renderbuffer: true},\n\n  // 24-bit formats\n  'rgb8unorm-webgl': {gl: GL.RGB8, b: 3, c: 3, wgpu: false},\n  'rgb8snorm-webgl': {gl: GL.RGB8_SNORM, b: 3, c: 3, wgpu: false},\n\n  // 32-bit formats  \n  'rgba8unorm': {gl: GL.RGBA8, gl1: GL.RGBA, b: 4, c: 2, bpp: 4},\n  'rgba8unorm-srgb': {gl: GL.SRGB8_ALPHA8, gl1: GL.SRGB_ALPHA_EXT, b: 4, c: 4, gl1ext: EXT_SRGB, bpp: 4},\n  'rgba8snorm': {gl: GL.RGBA8_SNORM, b: 4, c: 4},\n  'rgba8uint': {gl: GL.RGBA8UI, b: 4, c: 4, bpp: 4},\n  'rgba8sint': {gl: GL.RGBA8I, b: 4, c: 4, bpp: 4},\n  // reverse colors, webgpu only\n  'bgra8unorm': {b: 4, c: 4},\n  'bgra8unorm-srgb': {b: 4, c: 4},\n\n  'rg16uint': {gl: GL.RG16UI, b: 4, c: 1, bpp: 4},\n  'rg16sint': {gl: GL.RG16I, b: 4, c: 2, bpp: 4},\n  // When using a WebGL 2 context and the EXT_color_buffer_float WebGL2 extension\n  'rg16float': {gl: GL.RG16F, bpp: 4, b: 4, c: 2, render: 'texture-renderable-float16-webgl', filter: 'texture-filter-linear-float16-webgl', renderbuffer: true},\n  'rg16unorm-webgl': {gl: GL.RG16_EXT, b:2, c:2, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n  'rg16snorm-webgl': {gl: GL.RG16_SNORM_EXT, b:2, c:2, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n\n  'r32uint': {gl: GL.R32UI, b: 4, c: 1, bpp: 4, renderbuffer: true},\n  'r32sint': {gl: GL.R32I, b: 4, c: 1, bpp: 4, renderbuffer: true},\n  'r32float': {gl: GL.R32F, bpp: 4, b: 4, c: 1, render: 'texture-renderable-float32-webgl', filter: 'texture-filter-linear-float32-webgl'},\n\n  // Packed 32-bit formats\n  'rgb9e5ufloat': {gl: GL.RGB9_E5, b: 4, c: 3, p: 1, render: 'texture-renderable-float16-webgl', filter: 'texture-filter-linear-float16-webgl'},\n  'rg11b10ufloat': {gl: GL.R11F_G11F_B10F, b: 4, c: 3, p: 1,render: 'texture-renderable-float32-webgl', renderbuffer: true},\n  'rgb10a2unorm': {gl: GL.RGB10_A2, b: 4, c: 4, p: 1, renderbuffer: true},\n  // webgl2 only\n  'rgb10a2unorm-webgl': {b: 4, c: 4, gl: GL.RGB10_A2UI, p: 1, wgpu: false, bpp: 4, renderbuffer: true},\n\n  // 48-bit formats\n  'rgb16unorm-webgl': {gl: GL.RGB16_EXT, b:2, c:3, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n  'rgb16snorm-webgl': {gl: GL.RGB16_SNORM_EXT, b:2, c:3, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n\n  // 64-bit formats\n  'rg32uint': {gl: GL.RG32UI, b: 8, c: 2, renderbuffer: true},\n  'rg32sint': {gl: GL.RG32I, b: 8, c: 2, renderbuffer: true},\n  'rg32float': {gl: GL.RG32F, b: 8, c: 2, render: 'texture-renderable-float32-webgl', filter: 'texture-filter-linear-float32-webgl', renderbuffer: true},\n  'rgba16uint': {gl: GL.RGBA16UI, b: 8, c: 4, renderbuffer: true},\n  'rgba16sint': {gl: GL.RGBA16I, b: 8, c: 4, renderbuffer: true},\n  'rgba16float': {gl: GL.RGBA16F, gl1: GL.RGBA, b: 8, c: 4, render: 'texture-renderable-float16-webgl', filter: 'texture-filter-linear-float16-webgl'},\n  'rgba16unorm-webgl': {gl: GL.RGBA16_EXT, b:2, c:4, f: 'texture-formats-norm16-webgl', renderbuffer: true, x: EXT_TEXTURE_NORM16},\n  'rgba16snorm-webgl': {gl: GL.RGBA16_SNORM_EXT, b:2, c:4, f: 'texture-formats-norm16-webgl', x: EXT_TEXTURE_NORM16},\n\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {gl: GL.RGB32F, gl1: GL.RGB, render: 'texture-renderable-float32-webgl', filter: 'texture-filter-linear-float32-webgl',\n    gl2ext: EXT_FLOAT_RENDER_WEBGL2,  gl1ext: EXT_FLOAT_WEBGL1, // WebGL1 render buffers are supported with GL.RGB32F\n    dataFormat: GL.RGB, types: [GL.FLOAT]},\n  \n  // 128-bit formats\n  'rgba32uint': {gl: GL.RGBA32UI, b: 16, c: 4, renderbuffer: true},\n  'rgba32sint': {gl: GL.RGBA32I, b: 16, c: 4, renderbuffer: true},\n  'rgba32float': {gl: GL.RGBA32F, b: 16, c: 4, render: 'texture-renderable-float32-webgl', filter: 'texture-filter-linear-float32-webgl', renderbuffer: true},\n\n  // Depth and stencil formats\n  'stencil8': {gl: GL.STENCIL_INDEX8, gl1: GL.STENCIL_INDEX8, b: 1, c: 1, attachment: GL.STENCIL_ATTACHMENT, renderbuffer: true}, // 8 stencil bits\n\n  'depth16unorm': {gl: GL.DEPTH_COMPONENT16, gl1: GL.DEPTH_COMPONENT16, b: 2, c: 1, attachment: GL.DEPTH_ATTACHMENT, renderbuffer: true}, // 16 depth bits\n  'depth24plus': {gl: GL.DEPTH_COMPONENT24, b: 3, c: 1, attachment: GL.DEPTH_ATTACHMENT},\n  'depth32float': {gl: GL.DEPTH_COMPONENT32F, b: 4, c: 1, attachment: GL.DEPTH_ATTACHMENT, renderbuffer: true},\n\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {gl: GL.DEPTH_STENCIL, gl1: GL.DEPTH_STENCIL, b: 4, c: 2, p: 1, attachment: GL.DEPTH_STENCIL_ATTACHMENT, renderbuffer: true, depthTexture: true},\n  // \"depth24unorm-stencil8\" feature\n  'depth24unorm-stencil8': {gl: GL.DEPTH24_STENCIL8, b: 4, c: 2, p: 1, attachment: GL.DEPTH_STENCIL_ATTACHMENT, renderbuffer: true},\n  // \"depth32float-stencil8\" feature\n  'depth32float-stencil8': {gl: GL.DEPTH32F_STENCIL8, b: 5, c: 2, p: 1, attachment: GL.DEPTH_STENCIL_ATTACHMENT, renderbuffer: true},\n\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n\n  'bc1-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_S3TC_DXT1_EXT, x: X_S3TC, f: texture_compression_bc},\n  'bc1-rgb-unorm-srgb-webgl': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB, f: texture_compression_bc},\n\n  'bc1-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT, x: X_S3TC, f: texture_compression_bc},\n  'bc1-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB, f: texture_compression_bc},\n  'bc2-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT, x: X_S3TC, f: texture_compression_bc},\n  'bc2-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, x: X_S3TC_SRGB, f: texture_compression_bc},\n  'bc3-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT, x: X_S3TC, f: texture_compression_bc},\n  'bc3-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, x: X_S3TC_SRGB, f: texture_compression_bc},\n  'bc4-r-unorm': {gl: GL.COMPRESSED_RED_RGTC1_EXT, x: X_RGTC, f: texture_compression_bc},\n  'bc4-r-snorm': {gl: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT, x: X_RGTC, f: texture_compression_bc},\n  'bc5-rg-unorm': {gl: GL.COMPRESSED_RED_GREEN_RGTC2_EXT, x: X_RGTC, f: texture_compression_bc},\n  'bc5-rg-snorm': {gl: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, x: X_RGTC, f: texture_compression_bc},\n  'bc6h-rgb-ufloat': {gl: GL.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, x: X_BPTC, f: texture_compression_bc},\n  'bc6h-rgb-float': {gl: GL.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, x: X_BPTC, f: texture_compression_bc},\n  'bc7-rgba-unorm': {gl: GL.COMPRESSED_RGBA_BPTC_UNORM_EXT, x: X_BPTC, f: texture_compression_bc},\n  'bc7-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, x: X_BPTC, f: texture_compression_bc},\n\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n\n  'etc2-rgb8unorm': {gl: GL.COMPRESSED_RGB8_ETC2, f: texture_compression_etc2},\n  'etc2-rgb8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ETC2, f: texture_compression_etc2},\n  'etc2-rgb8a1unorm': {gl: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2, f: texture_compression_etc2},\n  'etc2-rgb8a1unorm-srgb': {gl: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2, f: texture_compression_etc2},\n  'etc2-rgba8unorm': {gl: GL.COMPRESSED_RGBA8_ETC2_EAC, f: texture_compression_etc2},\n  'etc2-rgba8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC, f: texture_compression_etc2},\n\n  'eac-r11unorm': {gl: GL.COMPRESSED_R11_EAC, f: texture_compression_etc2},\n  'eac-r11snorm': {gl: GL.COMPRESSED_SIGNED_R11_EAC, f: texture_compression_etc2},\n  'eac-rg11unorm': {gl: GL.COMPRESSED_RG11_EAC, f: texture_compression_etc2},\n  'eac-rg11snorm': {gl: GL.COMPRESSED_SIGNED_RG11_EAC, f: texture_compression_etc2},\n\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n\n  'astc-4x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_4x4_KHR, f: texture_compression_astc},\n  'astc-4x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR, f: texture_compression_astc},\n  'astc-5x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x4_KHR, f: texture_compression_astc},\n  'astc-5x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR, f: texture_compression_astc},\n  'astc-5x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x5_KHR, f: texture_compression_astc},\n  'astc-5x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR, f: texture_compression_astc},\n  'astc-6x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x5_KHR, f: texture_compression_astc},\n  'astc-6x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR, f: texture_compression_astc},\n  'astc-6x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x6_KHR, f: texture_compression_astc},\n  'astc-6x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR, f: texture_compression_astc},\n  'astc-8x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x5_KHR, f: texture_compression_astc},\n  'astc-8x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR, f: texture_compression_astc},\n  'astc-8x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x6_KHR, f: texture_compression_astc},\n  'astc-8x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR, f: texture_compression_astc},\n  'astc-8x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x8_KHR, f: texture_compression_astc},\n  'astc-8x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR, f: texture_compression_astc},\n  'astc-10x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR, f: texture_compression_astc},\n  'astc-10x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, f: texture_compression_astc},\n  'astc-10x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x6_KHR, f: texture_compression_astc},\n  'astc-10x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR, f: texture_compression_astc},\n  'astc-10x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x8_KHR, f: texture_compression_astc},\n  'astc-10x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR, f: texture_compression_astc},\n  'astc-10x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR, f: texture_compression_astc},\n  'astc-10x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR, f: texture_compression_astc},\n  'astc-12x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x10_KHR, f: texture_compression_astc},\n  'astc-12x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR, f: texture_compression_astc},\n  'astc-12x12-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x12_KHR, f: texture_compression_astc},\n  'astc-12x12-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR, f: texture_compression_astc},\n\n  // WEBGL_compressed_texture_pvrtc\n\n  'pvrtc-rgb4unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG, f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba4unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG, f: texture_compression_pvrtc_webgl},\n  'pvrtc-rbg2unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG, f: texture_compression_pvrtc_webgl},\n  'pvrtc-rgba2unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG, f: texture_compression_pvrtc_webgl},\n\n  // WEBGL_compressed_texture_etc1\n\n  'etc1-rbg-unorm-webgl': {gl: GL.COMPRESSED_RGB_ETC1_WEBGL, f: texture_compression_etc1_webgl},\n\n  // WEBGL_compressed_texture_atc\n\n  'atc-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_ATC_WEBGL, f: texture_compression_atc_webgl},\n  'atc-rgba-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL, f: texture_compression_atc_webgl},\n  'atc-rgbai-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL, f: texture_compression_atc_webgl}\n};\n\n/** Legal combinations for internalFormat, format and type *\n// [GL.DEPTH_COMPONENT]: {types: [GL.UNSIGNED_SHORT, GL.UNSIGNED_INT, GL.UNSIGNED_INT_24_8], gl1ext: DEPTH},\n// [GL.DEPTH_STENCIL]: {gl1ext: DEPTH},\n// Sized texture format\n// R\n[GL.R8]: {dataFormat: GL.RED, types: [GL.UNSIGNED_BYTE], gl2: true},\n[GL.R16F]: {dataFormat: GL.RED, types: [GL.HALF_FLOAT, GL.FLOAT], gl2: true},\n[GL.R8UI]: {dataFormat: GL.RED_INTEGER, types: [GL.UNSIGNED_BYTE], gl2: true},\n// // RG\n[GL.RG8]: {dataFormat: GL.RG, types: [GL.UNSIGNED_BYTE], gl2: true},\n[GL.RG16F]: {dataFormat: GL.RG, types: [GL.HALF_FLOAT, GL.FLOAT], gl2: true},\n[GL.RG8UI]: {dataFormat: GL.RG_INTEGER, types: [GL.UNSIGNED_BYTE], gl2: true},\n// // RGB\n[GL.RGB8]: {dataFormat: GL.RGB, types: [GL.UNSIGNED_BYTE], gl2: true},\n[GL.SRGB8]: {dataFormat: GL.RGB, types: [GL.UNSIGNED_BYTE], gl2: true, gl1ext: EXT_SRGB},\n[GL.RGB16F]: {dataFormat: GL.RGB, types: [GL.HALF_FLOAT, GL.FLOAT], gl2: true, gl1ext: EXT_HALF_FLOAT_WEBGL1},\n[GL.RGB8UI]: {dataFormat: GL.RGB_INTEGER, types: [GL.UNSIGNED_BYTE], gl2: true},\n// // RGBA\n\n[GL.RGB565]: {dataFormat: GL.RGB, types: [GL.UNSIGNED_BYTE, GL.UNSIGNED_SHORT_5_6_5], gl2: true},\n[GL.R11F_G11F_B10F]: {dataFormat: GL.RGB, types: [GL.UNSIGNED_INT_10F_11F_11F_REV, GL.HALF_FLOAT, GL.FLOAT], gl2: true},\n[GL.RGB9_E5]: {dataFormat: GL.RGB, types: [GL.HALF_FLOAT, GL.FLOAT], gl2: true, gl1ext: EXT_HALF_FLOAT_WEBGL1},\n[GL.RGBA8]: {dataFormat: GL.RGBA, types: [GL.UNSIGNED_BYTE], gl2: true},\n[GL.SRGB8_ALPHA8]: {dataFormat: GL.RGBA, types: [GL.UNSIGNED_BYTE], gl2: true, gl1ext: EXT_SRGB},\n[GL.RGB5_A1]: {dataFormat: GL.RGBA, types: [GL.UNSIGNED_BYTE, GL.UNSIGNED_SHORT_5_5_5_1], gl2: true},\n[GL.RGBA4]: {dataFormat: GL.RGBA, types: [GL.UNSIGNED_BYTE, GL.UNSIGNED_SHORT_4_4_4_4], gl2: true},\n[GL.RGBA16F]: {dataFormat: GL.RGBA, types: [GL.HALF_FLOAT, GL.FLOAT], gl2: true, gl1ext: EXT_HALF_FLOAT_WEBGL1},\n[GL.RGBA8UI]: {dataFormat: GL.RGBA_INTEGER, types: [GL.UNSIGNED_BYTE], gl2: true}\n*/\n\n/* This table is now baked into the above table\ntype RenderbufferFormat = {\n  bpp: number;\n  gl2?: boolean;\n  ext?: string;\n};\n\nexport const RENDERBUFFER_FORMATS: Record<string, RenderbufferFormat> = {\n  [GL.DEPTH_COMPONENT16]: {bpp: 2}, // 16 depth bits.\n  // TODO - Not clear which webgpu value to map this to.\n  // [GL.DEPTH_COMPONENT24]: {gl2: true, bpp: 3},\n  [GL.DEPTH_COMPONENT32F]: {gl2: true, bpp: 4},\n\n  [GL.STENCIL_INDEX8]: {bpp: 1}, // 8 stencil bits.\n\n  [GL.DEPTH_STENCIL]: {bpp: 4},\n  [GL.DEPTH24_STENCIL8]: {gl2: true, bpp: 4},\n  [GL.DEPTH32F_STENCIL8]: {gl2: true, bpp: 5},\n\n  // When using a WebGL 1 context, color renderbuffer formats are limited\n  [GL.RGBA4]: {gl2: true, bpp: 2},\n  [GL.RGB565]: {gl2: true, bpp: 2},\n  [GL.RGB5_A1]: {gl2: true, bpp: 2},\n\n  // When using a WebGL 2 context, the following values are available additionally:\n  [GL.R8]: {gl2: true, bpp: 1},\n  [GL.R8UI]: {gl2: true, bpp: 1},\n  [GL.R8I]: {gl2: true, bpp: 1},\n  [GL.R16UI]: {gl2: true, bpp: 2},\n  [GL.R16I]: {gl2: true, bpp: 2},\n  [GL.R32UI]: {gl2: true, bpp: 4},\n  [GL.R32I]: {gl2: true, bpp: 4},\n  [GL.RG8]: {gl2: true, bpp: 2},\n  [GL.RG8UI]: {gl2: true, bpp: 2},\n  [GL.RG8I]: {gl2: true, bpp: 2},\n  [GL.RG16UI]: {gl2: true, bpp: 4},\n  [GL.RG16I]: {gl2: true, bpp: 4},\n  [GL.RG32UI]: {gl2: true, bpp: 8},\n  [GL.RG32I]: {gl2: true, bpp: 8},\n  [GL.RGB8]: {gl2: true, bpp: 3},\n  [GL.RGBA8]: {gl2: true, bpp: 4},\n  // [GL.SRGB8_ALPHA8]: {gl2: true, gl1: SRGB}, // When using the EXT_sRGB WebGL1 extension\n  [GL.RGB10_A2]: {gl2: true, bpp: 4},\n  [GL.RGBA8UI]: {gl2: true, bpp: 4},\n  [GL.RGBA8I]: {gl2: true, bpp: 4},\n  [GL.RGB10_A2UI]: {gl2: true, bpp: 4},\n  [GL.RGBA16UI]: {gl2: true, bpp: 8},\n  [GL.RGBA16I]: {gl2: true, bpp: 8},\n  [GL.RGBA32I]: {gl2: true, bpp: 16},\n  [GL.RGBA32UI]: {gl2: true, bpp: 16},\n\n  // When using a WebGL 2 context and the EXT_color_buffer_float WebGL2 extension\n  [GL.R16F]: {ext: EXT_FLOAT_WEBGL2, bpp: 2},\n  [GL.RG16F]: {ext: EXT_FLOAT_WEBGL2, bpp: 4},\n  [GL.RGBA16F]: {ext: EXT_FLOAT_WEBGL2, bpp: 8},\n  [GL.R32F]: {ext: EXT_FLOAT_WEBGL2, bpp: 4},\n  [GL.RG32F]: {ext: EXT_FLOAT_WEBGL2, bpp: 8},\n  // TODO - can't get WEBGL_color_buffer_float to work on renderbuffers\n  [GL.RGBA32F]: {ext: EXT_FLOAT_WEBGL2, bpp: 16},\n  // [GL.RGBA32F]: {ext: EXT_FLOAT_WEBGL2, gl1: EXT_FLOAT_WEBGL1},\n  [GL.R11F_G11F_B10F]: {ext: EXT_FLOAT_WEBGL2, bpp: 4}\n};\n*/\n\n/** @deprecated should be removed */\nconst DATA_FORMAT_CHANNELS = {\n  [GL.RED]: 1,\n  [GL.RED_INTEGER]: 1,\n  [GL.RG]: 2,\n  [GL.RG_INTEGER]: 2,\n  [GL.RGB]: 3,\n  [GL.RGB_INTEGER]: 3,\n  [GL.RGBA]: 4,\n  [GL.RGBA_INTEGER]: 4,\n  [GL.DEPTH_COMPONENT]: 1,\n  [GL.DEPTH_STENCIL]: 1,\n  [GL.ALPHA]: 1,\n  [GL.LUMINANCE]: 1,\n  [GL.LUMINANCE_ALPHA]: 2\n};\n\n/** @deprecated should be removed */\nconst TYPE_SIZES = {\n  [GL.FLOAT]: 4,\n  [GL.UNSIGNED_INT]: 4,\n  [GL.INT]: 4,\n  [GL.UNSIGNED_SHORT]: 2,\n  [GL.SHORT]: 2,\n  [GL.HALF_FLOAT]: 2,\n  [GL.BYTE]: 1,\n  [GL.UNSIGNED_BYTE]: 1\n};\n\n// FUNCTIONS\n\n/** Checks if a texture format is supported */\nexport function isTextureFormatSupported(\n  gl: WebGLRenderingContext,\n  formatOrGL: TextureFormat | GL\n): boolean {\n  const format = convertGLToTextureFormat(formatOrGL);\n  const info = TEXTURE_FORMATS[format];\n  if (!info) {\n    return false;\n  }\n  // Check that we have a GL constant\n  if (isWebGL2(gl) ? info.gl === undefined : info.gl1 === undefined) {\n    return false;\n  }\n  // Check extensions\n  const extension = info.x || (isWebGL2(gl) ? info.gl2ext || info.gl1ext : info.gl1ext);\n  if (extension) {\n    return Boolean(gl.getExtension(extension));\n  }\n  // if (info.gl1 === undefined && info.gl2 === undefined) {\n  //   // No info - always supported\n  // }\n  return true;\n}\n\nexport function isRenderbufferFormatSupported(gl: WebGLRenderingContext, format: TextureFormat): boolean {\n  // Note: Order is important since the function call initializes extensions.\n  return isTextureFormatSupported(gl, format) && TEXTURE_FORMATS[format]?.renderbuffer;\n}\n\n/**\n * Map WebGL texture formats (GL constants) to WebGPU-style TextureFormat strings\n */\nexport function convertGLToTextureFormat(format: GL | TextureFormat): TextureFormat {\n  if (typeof format === 'string') {\n    return format;\n  }\n  const entry = Object.entries(TEXTURE_FORMATS).find(\n    ([, entry]) => entry.gl === format || entry.gl1 === format\n  );\n  if (!entry) {\n    throw new Error(`Unknown texture format ${format}`);\n  }\n  return entry[0] as TextureFormat;\n}\n\n/**\n * Map WebGPU style texture format strings to GL constants\n */\nexport function convertTextureFormatToGL(format: TextureFormat, isWebGL2: boolean): GL | undefined {\n  const formatInfo = TEXTURE_FORMATS[format];\n  const webglFormat = isWebGL2 ? formatInfo?.gl : formatInfo?.gl1;\n  if (webglFormat === undefined) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return webglFormat;\n}\n\n/** Checks if a texture format is supported */\nexport function getTextureFormatSupport(\n  gl: WebGLRenderingContext,\n  formatOrGL: TextureFormat | GL\n): {\n  supported: boolean;\n  filterable?: boolean;\n  renderable?: boolean;\n  blendable?: boolean;\n  storable?: boolean;\n} {\n  const format = convertGLToTextureFormat(formatOrGL);\n  const info = TEXTURE_FORMATS[format];\n  if (!info) {\n    return {supported: false};\n  }\n  // let decoded;\n  // try {\n  //   decoded = decodeTextureFormat(format);\n  // } catch {}\n\n  // Support Check that we have a GL constant\n  let supported = isWebGL2(gl) ? info.gl === undefined : info.gl1 === undefined;\n  supported = supported && checkTextureFeatures(gl, [info.f]);\n\n  // Filtering\n  // const filterable = info.filter\n  //   ? checkTextureFeatures(gl, [info.filter])\n  //   : decoded && !decoded.signed;\n  // const renderable = info.filter\n  //   ? checkTextureFeatures(gl, [info.render])\n  //   : decoded && !decoded.signed;\n\n  return {\n    supported,\n    renderable: supported && checkTextureFeatures(gl, [info.render]),\n    filterable: supported && checkTextureFeatures(gl, [info.filter]),\n    blendable: false, // tod,\n    storable: false\n  };\n}\n\n/** Checks whether linear filtering (interpolated sampling) is available for floating point textures */\nexport function isTextureFormatFilterable(\n  gl: WebGLRenderingContext,\n  formatOrGL: TextureFormat | GL\n): boolean {\n  const format = convertGLToTextureFormat(formatOrGL);\n  if (!isTextureFormatSupported(gl, format)) {\n    return false;\n  }\n  try {\n    const decoded = decodeTextureFormat(format);\n    if (decoded.signed) {\n      return false;\n    }\n  } catch {\n    return false;\n  }\n  if (format.endsWith('32float')) {\n    return Boolean(gl.getExtension('OES_texture_float_linear'));\n  }\n  if (format.endsWith('16float')) {\n    return Boolean(gl.getExtension('OES_texture_half_float_linear'));\n  }\n  // if (typeof format === 'string') {\n  //   if (format === 'rgba32float') {\n  //     return gl.device.features.has('texture-renderable-rgba32float-webgl');\n  //   }\n  //   if (format.endsWith('32float')) {\n  //     return gl.device.features.has('texture-renderable-float32-webgl');\n  //   }\n  //   if (format.endsWith('16float')) {\n  //     return gl.device.features.has('texture-renderable-float16-webgl');\n  //   }\n  // }\n  return true;\n}\n\nexport function isTextureFormatRenderable(\n  gl: WebGLRenderingContext,\n  formatOrGL: TextureFormat | GL\n): boolean {\n  const format = convertGLToTextureFormat(formatOrGL);\n  if (!isTextureFormatSupported(gl, format)) {\n    return false;\n  }\n  if (typeof format === 'number') {\n    return false; // isTextureFormatFilterableWebGL(gl, format);\n  }\n  // TODO depends on device...\n  return true;\n}\n\nexport function getWebGLTextureParameters(formatOrGL: TextureFormat | GL, isWebGL2: boolean) {\n  const format = convertGLToTextureFormat(formatOrGL);\n  const webglFormat = convertTextureFormatToGL(format, isWebGL2);\n  const decoded = decodeTextureFormat(format);\n  return {\n    format: webglFormat,\n    dataFormat: getWebGLPixelDataFormat(\n      decoded.format,\n      decoded.integer,\n      decoded.normalized,\n      webglFormat\n    ),\n    // depth formats don't have a type\n    type: decoded.dataType ? getGLFromVertexType(decoded.dataType) : GL.UNSIGNED_BYTE,\n    // @ts-expect-error\n    compressed: decoded.compressed\n  };\n}\n\nexport function getDepthStencilAttachmentWebGL(\n  format: TextureFormat\n): GL.DEPTH_ATTACHMENT | GL.STENCIL_ATTACHMENT | GL.DEPTH_STENCIL_ATTACHMENT {\n  const info = TEXTURE_FORMATS[format];\n  if (!info?.attachment) {\n    throw new Error(`${format} is not a depth stencil format`);\n  }\n  return info.attachment;\n}\n\n/**\n * function to test if Float 32 bit format texture can be bound as color attachment\n * @todo Generalize to check arbitrary formats?\n */\nexport function _checkFloat32ColorAttachment(\n  gl: WebGLRenderingContext,\n  internalFormat = gl.RGBA,\n  srcFormat = GL.RGBA,\n  srcType = GL.UNSIGNED_BYTE\n) {\n  let texture: WebGLTexture | null = null;\n  let framebuffer: WebGLFramebuffer | null = null;\n  try {\n    texture = gl.createTexture();\n    gl.bindTexture(GL.TEXTURE_2D, texture);\n\n    const level = 0;\n    const width = 1;\n    const height = 1;\n    const border = 0;\n    const pixel = new Uint8Array([0, 0, 255, 255]); // opaque blue\n    gl.texImage2D(\n      gl.TEXTURE_2D,\n      level,\n      internalFormat,\n      width,\n      height,\n      border,\n      srcFormat,\n      srcType,\n      pixel\n    );\n\n    framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(GL.FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(GL.FRAMEBUFFER, GL.COLOR_ATTACHMENT0, GL.TEXTURE_2D, texture, 0);\n    const status = gl.checkFramebufferStatus(GL.FRAMEBUFFER) as GL === GL.FRAMEBUFFER_COMPLETE;\n\n    gl.bindTexture(GL.TEXTURE_2D, null);\n    return status;\n  } finally {\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(framebuffer);\n  }\n}\n\n/** TODO - VERY roundabout legacy way of calculating bytes per pixel */\nexport function getTextureFormatBytesPerPixel(\n  formatOrGL: TextureFormat | GL,\n  isWebGL2: boolean\n): number {\n  const format = convertGLToTextureFormat(formatOrGL);\n  const params = getWebGLTextureParameters(format, isWebGL2);\n  // NOTE(Tarek): Default to RGBA bytes\n  const channels = DATA_FORMAT_CHANNELS[params.dataFormat] || 4;\n  const channelSize = TYPE_SIZES[params.type] || 1;\n  return channels * channelSize;\n}\n\n// DATA TYPE HELPERS\n\nfunction getWebGLPixelDataFormat(\n  dataFormat: string,\n  integer: boolean,\n  normalized: boolean,\n  format: GL\n): GL {\n  // WebGL1 formats use same internalFormat\n  if (format === GL.RGBA || format === GL.RGB) {\n    return format;\n  }\n  // prettier-ignore\n  switch (dataFormat) {\n    case 'r': return integer && !normalized ? GL.RED_INTEGER : GL.RED;\n    case 'rg': return integer && !normalized ? GL.RG_INTEGER : GL.RG;\n    case 'rgb': return integer && !normalized ? GL.RGB_INTEGER : GL.RGB;\n    case 'rgba': return integer && !normalized ? GL.RGBA_INTEGER : GL.RGBA;\n    default: return GL.RGBA;\n  }\n}\n"],"mappings":"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"}