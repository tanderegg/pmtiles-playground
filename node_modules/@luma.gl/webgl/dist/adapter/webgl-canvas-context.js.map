{"version":3,"file":"webgl-canvas-context.js","names":["CanvasContext","WEBGLFramebuffer","WebGLCanvasContext","constructor","device","props","presentationSize","_framebuffer","_setAutoCreatedCanvasId","id","update","getCurrentFramebuffer","handle","size","getPixelSize","sizeChanged","resize","options","gl","canvas","devicePixelRatio","getDevicePixelRatio","useDevicePixels","setDevicePixelRatio","ext","getExtension","width","height","commit"],"sources":["../../src/adapter/webgl-canvas-context.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {CanvasContextProps} from '@luma.gl/core';\nimport {CanvasContext} from '@luma.gl/core';\nimport {WebGLDevice} from './webgl-device';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\n\n/** \n * A WebGL Canvas Context which manages the canvas and handles drawing buffer resizing etc \n */\nexport class WebGLCanvasContext extends CanvasContext {\n  readonly device: WebGLDevice;\n  presentationSize: [number, number];\n  private _framebuffer: WEBGLFramebuffer | null = null;\n\n  constructor(device: WebGLDevice, props: CanvasContextProps) {\n    // Note: Base class creates / looks up the canvas (unless under Node.js)\n    super(props);\n    this.device = device;\n    this.presentationSize = [-1, -1];\n    this._setAutoCreatedCanvasId(`${this.device.id}-canvas`);\n    this.update();\n  }\n\n  getCurrentFramebuffer(): WEBGLFramebuffer {\n    this.update();\n    // Setting handle to null returns a reference to the default framebuffer\n    this._framebuffer = this._framebuffer || new WEBGLFramebuffer(this.device, {handle: null});\n    return this._framebuffer;\n  }\n\n  /** Resizes and updates render targets if necessary */\n  update() {\n    const size = this.getPixelSize();\n    const sizeChanged = size[0] !== this.presentationSize[0] || size[1] !== this.presentationSize[1];\n    if (sizeChanged) {\n      this.presentationSize = size;\n      this.resize();\n    }\n  }\n\n  /**\n   * Resize the canvas' drawing buffer.\n   *\n   * Can match the canvas CSS size, and optionally also consider devicePixelRatio\n   * Can be called every frame\n   *\n   * Regardless of size, the drawing buffer will always be scaled to the viewport, but\n   * for best visual results, usually set to either:\n   *  canvas CSS width x canvas CSS height\n   *  canvas CSS width * devicePixelRatio x canvas CSS height * devicePixelRatio\n   * See http://webgl2fundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n   */\n  resize(options?: {width?: number; height?: number; useDevicePixels?: boolean | number}): void {\n    if (!this.device.gl) return;\n\n    // Resize browser context .\n    if (this.canvas) {\n      const devicePixelRatio = this.getDevicePixelRatio(options?.useDevicePixels);\n      this.setDevicePixelRatio(devicePixelRatio, options);\n      return;\n    }\n\n    // Resize headless gl context\n    const ext = this.device.gl.getExtension('STACKGL_resize_drawingbuffer');\n    if (ext && options && 'width' in options && 'height' in options) {\n      ext.resize(options.width, options.height);\n    }\n  }\n\n  commit() {\n    // gl.commit was ultimately removed from the WebGL standard??\n    // if (this.offScreen && this.gl.commit) {\n    //   // @ts-expect-error gl.commit is not officially part of WebGLRenderingContext\n    //   this.gl.commit();\n    // }\n  }\n}\n"],"mappings":"AAIA,SAAQA,aAAa,QAAO,eAAe;AAAC,SAEpCC,gBAAgB;AAKxB,OAAO,MAAMC,kBAAkB,SAASF,aAAa,CAAC;EAKpDG,WAAWA,CAACC,MAAmB,EAAEC,KAAyB,EAAE;IAE1D,KAAK,CAACA,KAAK,CAAC;IAAC,KANND,MAAM;IAAA,KACfE,gBAAgB;IAAA,KACRC,YAAY,GAA4B,IAAI;IAKlD,IAAI,CAACH,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACE,gBAAgB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,IAAI,CAACE,uBAAuB,CAAE,GAAE,IAAI,CAACJ,MAAM,CAACK,EAAG,SAAQ,CAAC;IACxD,IAAI,CAACC,MAAM,CAAC,CAAC;EACf;EAEAC,qBAAqBA,CAAA,EAAqB;IACxC,IAAI,CAACD,MAAM,CAAC,CAAC;IAEb,IAAI,CAACH,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI,IAAIN,gBAAgB,CAAC,IAAI,CAACG,MAAM,EAAE;MAACQ,MAAM,EAAE;IAAI,CAAC,CAAC;IAC1F,OAAO,IAAI,CAACL,YAAY;EAC1B;EAGAG,MAAMA,CAAA,EAAG;IACP,MAAMG,IAAI,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;IAChC,MAAMC,WAAW,GAAGF,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAACP,gBAAgB,CAAC,CAAC,CAAC,IAAIO,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAACP,gBAAgB,CAAC,CAAC,CAAC;IAChG,IAAIS,WAAW,EAAE;MACf,IAAI,CAACT,gBAAgB,GAAGO,IAAI;MAC5B,IAAI,CAACG,MAAM,CAAC,CAAC;IACf;EACF;EAcAA,MAAMA,CAACC,OAA+E,EAAQ;IAC5F,IAAI,CAAC,IAAI,CAACb,MAAM,CAACc,EAAE,EAAE;IAGrB,IAAI,IAAI,CAACC,MAAM,EAAE;MACf,MAAMC,gBAAgB,GAAG,IAAI,CAACC,mBAAmB,CAACJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEK,eAAe,CAAC;MAC3E,IAAI,CAACC,mBAAmB,CAACH,gBAAgB,EAAEH,OAAO,CAAC;MACnD;IACF;IAGA,MAAMO,GAAG,GAAG,IAAI,CAACpB,MAAM,CAACc,EAAE,CAACO,YAAY,CAAC,8BAA8B,CAAC;IACvE,IAAID,GAAG,IAAIP,OAAO,IAAI,OAAO,IAAIA,OAAO,IAAI,QAAQ,IAAIA,OAAO,EAAE;MAC/DO,GAAG,CAACR,MAAM,CAACC,OAAO,CAACS,KAAK,EAAET,OAAO,CAACU,MAAM,CAAC;IAC3C;EACF;EAEAC,MAAMA,CAAA,EAAG,CAMT;AACF"}