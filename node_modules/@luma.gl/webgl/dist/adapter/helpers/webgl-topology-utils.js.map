{"version":3,"file":"webgl-topology-utils.js","names":["getPrimitiveDrawMode","drawMode","Error","getPrimitiveCount","options","vertexCount","getVertexCount","primitiveCount","getGLDrawMode","topology","getGLPrimitive"],"sources":["../../../src/adapter/helpers/webgl-topology-utils.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {GL, GLPrimitiveTopology, GLPrimitive} from '@luma.gl/constants';\nimport {PrimitiveTopology} from '@luma.gl/core';\n\n// Counts the number of complete primitives given a number of vertices and a drawMode\nexport function getPrimitiveDrawMode(drawMode: GLPrimitiveTopology): GLPrimitive {\n  switch (drawMode) {\n    case GL.POINTS:\n      return GL.POINTS;\n    case GL.LINES:\n      return GL.LINES;\n    case GL.LINE_STRIP:\n      return GL.LINES;\n    case GL.LINE_LOOP:\n      return GL.LINES;\n    case GL.TRIANGLES:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_STRIP:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_FAN:\n      return GL.TRIANGLES;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of complete \"primitives\" given a number of vertices and a drawMode\nexport function getPrimitiveCount(options: {drawMode: GLPrimitiveTopology, vertexCount: number}): number {\n  const {drawMode, vertexCount} = options;\n  switch (drawMode) {\n    case GL.POINTS:\n    case GL.LINE_LOOP:\n      return vertexCount;\n    case GL.LINES:\n      return vertexCount / 2;\n    case GL.LINE_STRIP:\n      return vertexCount - 1;\n    case GL.TRIANGLES:\n      return vertexCount / 3;\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN:\n      return vertexCount - 2;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of vertices after splitting the vertex stream into separate \"primitives\"\nexport function getVertexCount(options: {drawMode: GLPrimitiveTopology, vertexCount: number}): number {\n  const {drawMode, vertexCount} = options;\n  const primitiveCount = getPrimitiveCount({drawMode, vertexCount});\n  switch (getPrimitiveDrawMode(drawMode)) {\n    case GL.POINTS:\n      return primitiveCount;\n    case GL.LINES:\n      return primitiveCount * 2;\n    case GL.TRIANGLES:\n      return primitiveCount * 3;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n/** Get the primitive type for draw */\nexport function getGLDrawMode(\n  topology: PrimitiveTopology\n):\n  | GL.POINTS\n  | GL.LINES\n  | GL.LINE_STRIP\n  | GL.LINE_LOOP\n  | GL.TRIANGLES\n  | GL.TRIANGLE_STRIP\n  | GL.TRIANGLE_FAN {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINE_STRIP;\n    case 'line-loop-webgl': return GL.LINE_LOOP;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLE_STRIP;\n    case 'triangle-fan-webgl': return GL.TRIANGLE_FAN;\n    default: throw new Error(topology);\n  }\n}\n\n/** Get the primitive type for transform feedback */\nexport function getGLPrimitive(topology: PrimitiveTopology): GL.POINTS | GL.LINES | GL.TRIANGLES {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINES;\n    case 'line-loop-webgl': return GL.LINES;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLES;\n    case 'triangle-fan-webgl': return GL.TRIANGLES;\n    default: throw new Error(topology);\n  }\n}\n"],"mappings":"AAOA,OAAO,SAASA,oBAAoBA,CAACC,QAA6B,EAAe;EAC/E,QAAQA,QAAQ;IACd;MACE;IACF;MACE;IACF;MACE;IACF;MACE;IACF;MACE;IACF;MACE;IACF;MACE;IACF;MACE,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;EAC/B;AACF;AAGA,OAAO,SAASC,iBAAiBA,CAACC,OAA6D,EAAU;EACvG,MAAM;IAACH,QAAQ;IAAEI;EAAW,CAAC,GAAGD,OAAO;EACvC,QAAQH,QAAQ;IACd;IACA;MACE,OAAOI,WAAW;IACpB;MACE,OAAOA,WAAW,GAAG,CAAC;IACxB;MACE,OAAOA,WAAW,GAAG,CAAC;IACxB;MACE,OAAOA,WAAW,GAAG,CAAC;IACxB;IACA;MACE,OAAOA,WAAW,GAAG,CAAC;IACxB;MACE,MAAM,IAAIH,KAAK,CAAC,UAAU,CAAC;EAC/B;AACF;AAGA,OAAO,SAASI,cAAcA,CAACF,OAA6D,EAAU;EACpG,MAAM;IAACH,QAAQ;IAAEI;EAAW,CAAC,GAAGD,OAAO;EACvC,MAAMG,cAAc,GAAGJ,iBAAiB,CAAC;IAACF,QAAQ;IAAEI;EAAW,CAAC,CAAC;EACjE,QAAQL,oBAAoB,CAACC,QAAQ,CAAC;IACpC;MACE,OAAOM,cAAc;IACvB;MACE,OAAOA,cAAc,GAAG,CAAC;IAC3B;MACE,OAAOA,cAAc,GAAG,CAAC;IAC3B;MACE,MAAM,IAAIL,KAAK,CAAC,UAAU,CAAC;EAC/B;AACF;AAGA,OAAO,SAASM,aAAaA,CAC3BC,QAA2B,EAQT;EAElB,QAAQA,QAAQ;IACd,KAAK,YAAY;MAAE;IACnB,KAAK,WAAW;MAAE;IAClB,KAAK,YAAY;MAAE;IACnB,KAAK,iBAAiB;MAAE;IACxB,KAAK,eAAe;MAAE;IACtB,KAAK,gBAAgB;MAAE;IACvB,KAAK,oBAAoB;MAAE;IAC3B;MAAS,MAAM,IAAIP,KAAK,CAACO,QAAQ,CAAC;EACpC;AACF;AAGA,OAAO,SAASC,cAAcA,CAACD,QAA2B,EAAuC;EAE/F,QAAQA,QAAQ;IACd,KAAK,YAAY;MAAE;IACnB,KAAK,WAAW;MAAE;IAClB,KAAK,YAAY;MAAE;IACnB,KAAK,iBAAiB;MAAE;IACxB,KAAK,eAAe;MAAE;IACtB,KAAK,gBAAgB;MAAE;IACvB,KAAK,oBAAoB;MAAE;IAC3B;MAAS,MAAM,IAAIP,KAAK,CAACO,QAAQ,CAAC;EACpC;AACF"}