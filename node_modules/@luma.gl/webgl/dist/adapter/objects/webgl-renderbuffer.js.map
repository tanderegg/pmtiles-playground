{"version":3,"file":"webgl-renderbuffer.js","names":["assert","WebGLResource","isRenderbufferFormatSupported","convertTextureFormatToGL","getTextureFormatBytesPerPixel","_Symbol$toStringTag","Symbol","toStringTag","WEBGLRenderbuffer","width","props","height","format","samples","attachment","isTextureFormatSupported","device","gl","constructor","Error","defaultProps","glFormat","isWebGL2","_initialize","resize","size","Object","assign","trackDeallocatedMemory","bindRenderbuffer","handle","gl2","renderbufferStorageMultisample","renderbufferStorage","trackAllocatedMemory","_createHandle","createRenderbuffer","_deleteHandle","deleteRenderbuffer","_bindHandle","id","undefined","userData"],"sources":["../../../src/adapter/objects/webgl-renderbuffer.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {assert, ResourceProps, TextureFormat} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WebGLResource} from './webgl-resource';\nimport {isRenderbufferFormatSupported} from '../converters/texture-formats';\nimport {convertTextureFormatToGL, getTextureFormatBytesPerPixel} from '../converters/texture-formats';\n\nexport type RenderbufferProps = ResourceProps & {\n  format: TextureFormat;\n  width?: number;\n  height?: number;\n  samples?: number;\n};\n\n/**\n * Renderbuffers are GPU objects that contain images.\n * In contrast to Textures they are optimized for use as render targets, with Framebuffers.\n * while Textures may not be, and are the logical choice when\n * you do not need to sample (i.e. in a post-pass shader)\n * from the produced image. If you need to resample\n * (such as when reading depth back in a second shader pass),\n * use Textures instead.\n * Renderbuffer objects also natively accommodate Multisampling (MSAA).\n */\nexport class WEBGLRenderbuffer extends WebGLResource<RenderbufferProps> {\n  static override readonly defaultProps: Required<RenderbufferProps> = {\n    id: undefined,\n    handle: undefined,\n    userData: undefined,\n    format: undefined, // 'depth16unorm'\n    width: 1,\n    height: 1, \n    samples: 0\n  };  \n\n  override get [Symbol.toStringTag](): string { return 'Renderbuffer'; }\n\n  get width(): number { return this.props.width; }\n  get height(): number { return this.props.height; }\n  get format(): TextureFormat { return this.props.format; }\n  get samples(): number { return this.props.samples; }\n  get attachment() { return  }\n\n  /** WebGL format constant */\n  glFormat: GL;\n\n  static isTextureFormatSupported(device: WebGLDevice, format: TextureFormat): boolean {\n    return isRenderbufferFormatSupported(device.gl, format);\n  }\n\n  constructor(device: WebGLDevice, props: RenderbufferProps) {\n    // TODO - remove temporary sanity check\n    if (typeof props.format === 'number') {\n      throw new Error('Renderbuffer');\n    }\n    super(device, props, WEBGLRenderbuffer.defaultProps);\n    this.glFormat = convertTextureFormatToGL(this.props.format, device.isWebGL2);\n    this._initialize(this.props);\n  }\n\n  resize(size: {width: number, height: number}): void {\n    // Don't resize if width/height haven't changed\n    if (size.width !== this.width || size.height !== this.height) {\n      Object.assign(this.props, {...size, format: this.format, samples: this.samples});\n      this._initialize(this.props);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Creates and initializes a renderbuffer object's data store */\n  protected _initialize(props: Required<RenderbufferProps>): void {\n    const {format, width, height, samples} = props;\n    assert(format, 'Needs format');\n\n    this.trackDeallocatedMemory();\n\n    this.gl.bindRenderbuffer(GL.RENDERBUFFER, this.handle);\n\n    if (samples !== 0 && this.device.isWebGL2) {\n      this.gl2.renderbufferStorageMultisample(GL.RENDERBUFFER, samples, this.glFormat, width, height);\n    } else {\n      this.gl.renderbufferStorage(GL.RENDERBUFFER, this.glFormat, width, height);\n    }\n\n    this.gl.bindRenderbuffer(GL.RENDERBUFFER, null);\n\n    this.trackAllocatedMemory(\n      width * height * (samples || 1) * getTextureFormatBytesPerPixel(this.glFormat, this.device.isWebGL2)\n    );\n  }\n\n  // RESOURCE IMPLEMENTATION\n\n  override _createHandle() {\n    return this.gl.createRenderbuffer();\n  }\n\n  override _deleteHandle(): void {\n    this.gl.deleteRenderbuffer(this.handle);\n    this.trackDeallocatedMemory();\n  }\n\n  override _bindHandle(handle: WEBGLRenderbuffer): void {\n    this.gl.bindRenderbuffer(GL.RENDERBUFFER, handle);\n  }\n}\n"],"mappings":"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"}