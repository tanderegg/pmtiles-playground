{"version":3,"file":"webgl-device.js","names":["Device","CanvasContext","log","uid","assert","isBrowser","polyfillContext","popContextState","pushContextState","trackContextState","createBrowserContext","createHeadlessContext","isHeadlessGLRegistered","getDeviceInfo","getDeviceFeatures","getDeviceLimits","getWebGLLimits","WebGLCanvasContext","loadSpectorJS","initializeSpectorJS","loadWebGLDeveloperTools","makeDebugContext","isTextureFormatSupported","isTextureFormatRenderable","isTextureFormatFilterable","WEBGLBuffer","WEBGLShader","WEBGLSampler","WEBGLTexture","WEBGLFramebuffer","WEBGLRenderPass","WEBGLRenderPipeline","WEBGLCommandEncoder","WEBGLVertexArray","WEBGLTransformFeedback","readPixelsToArray","readPixelsToBuffer","setGLParameters","getGLParameters","withGLParameters","clear","LOG_LEVEL","WebGLDevice","isSupported","WebGLRenderingContext","features","_features","gl","limits","_limits","attach","device","isWebGL","Error","create","props","arguments","length","undefined","groupCollapsed","canvas","pageLoaded","get","debug","spector","probe","message","info","type","vendor","renderer","canvasContext","id","table","groupEnd","constructor","_props$gl","_props$gl2","handle","lost","_resolveContextLost","renderPass","gl2","isWebGL1","isWebGL2","_canvasSizeInfo","clientWidth","clientHeight","devicePixelRatio","_extensions","_polyfilled","_webglLimits","_constants","Promise","resolve","onContextLost","event","_this$_resolveContext","call","reason","resize","_version","enable","copyState","_len","args","Array","_key","webgl2","throwOnError","level","Math","max","warn","destroy","ext","getExtension","isLost","isContextLost","getSize","drawingBufferWidth","drawingBufferHeight","format","assertWebGL2","createCanvasContext","createBuffer","newProps","_getBufferProps","_createTexture","createExternalTexture","createSampler","createShader","createFramebuffer","createRenderPipeline","createVertexArray","beginRenderPass","createComputePipeline","beginComputePass","createTransformFeedback","getDefaultRenderPass","framebuffer","getCurrentFramebuffer","createCommandEncoder","submit","_this$renderPass","end","readPixelsToArrayWebGL","source","options","readPixelsToBufferWebGL","setParametersWebGL","parameters","getParametersWebGL","withParametersWebGL","func","clearWebGL","webglLimits","loseDevice","_this$_resolveContext2","deviceLossTriggered","loseContext","pushState","popState","setSpectorMetadata","__SPECTOR_Metadata","getGLKey","value","number","Number","key","String","setConstantAttribute","location","constant","maxVertexAttributes","fill","currentConstant","compareConstantArrayValues","Float32Array","setConstantFloatArray","Int32Array","setConstantIntArray","Uint32Array","setConstantUintArray","WebGL2RenderingContext","Boolean","isFinite","array","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","_device$gl","vertexAttribI4iv","_device$gl2","vertexAttribI4uiv","v1","v2","i"],"sources":["../../src/adapter/webgl-device.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {\n  DeviceProps,\n  DeviceInfo,\n  DeviceLimits,\n  DeviceFeature,\n  CanvasContextProps,\n  TextureFormat,\n  VertexArray,\n  VertexArrayProps,\n  Framebuffer,\n  Buffer,\n  Texture,\n  TypedArray\n} from '@luma.gl/core';\nimport {Device, CanvasContext, log, uid, assert} from '@luma.gl/core';\nimport {isBrowser} from '@probe.gl/env';\nimport {polyfillContext} from '../context/polyfill/polyfill-context';\nimport {\n  popContextState,\n  pushContextState,\n  trackContextState\n} from '../context/state-tracker/track-context-state';\nimport {createBrowserContext} from '../context/context/create-browser-context';\nimport {\n  createHeadlessContext,\n  isHeadlessGLRegistered\n} from '../context/context/create-headless-context';\n\nimport {getDeviceInfo} from './device-helpers/get-device-info';\nimport {getDeviceFeatures} from './device-helpers/device-features';\nimport {getDeviceLimits, getWebGLLimits, WebGLLimits} from './device-helpers/device-limits';\nimport {WebGLCanvasContext} from './webgl-canvas-context';\nimport {loadSpectorJS, initializeSpectorJS} from '../context/debug/spector';\nimport {loadWebGLDeveloperTools, makeDebugContext} from '../context/debug/webgl-developer-tools';\nimport {\n  isTextureFormatSupported,\n  isTextureFormatRenderable,\n  isTextureFormatFilterable\n} from './converters/texture-formats';\n\n// WebGL classes\nimport type {\n  BufferProps,\n  ShaderProps,\n  // Sampler,\n  SamplerProps,\n  TextureProps,\n  ExternalTexture,\n  ExternalTextureProps,\n  FramebufferProps,\n  // RenderPipeline,\n  RenderPipelineProps,\n  ComputePipeline,\n  ComputePipelineProps,\n  // RenderPass,\n  RenderPassProps,\n  ComputePass,\n  ComputePassProps,\n  // CommandEncoder,\n  CommandEncoderProps,\n  TransformFeedbackProps\n} from '@luma.gl/core';\n\nimport {WEBGLBuffer} from './resources/webgl-buffer';\nimport {WEBGLShader} from './resources/webgl-shader';\nimport {WEBGLSampler} from './resources/webgl-sampler';\nimport {WEBGLTexture} from './resources/webgl-texture';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\nimport {WEBGLRenderPass} from './resources/webgl-render-pass';\nimport {WEBGLRenderPipeline} from './resources/webgl-render-pipeline';\nimport {WEBGLCommandEncoder} from './resources/webgl-command-encoder';\nimport {WEBGLVertexArray} from './resources/webgl-vertex-array';\nimport {WEBGLTransformFeedback} from './resources/webgl-transform-feedback';\n\nimport {readPixelsToArray, readPixelsToBuffer} from '../classic/copy-and-blit';\nimport {setGLParameters, getGLParameters} from '../context/parameters/unified-parameter-api';\nimport {withGLParameters} from '../context/state-tracker/with-parameters';\nimport {clear} from '../classic/clear';\n\nconst LOG_LEVEL = 1;\n\n/** WebGPU style Device API for a WebGL context */\nexport class WebGLDevice extends Device {\n  //\n  // Public `Device` API\n  //\n\n  static type: string = 'webgl';\n\n  static isSupported(): boolean {\n    return typeof WebGLRenderingContext !== 'undefined' || isHeadlessGLRegistered();\n  }\n\n  readonly info: DeviceInfo;\n  readonly canvasContext: WebGLCanvasContext;\n\n  readonly handle: WebGLRenderingContext;\n\n  get features(): Set<DeviceFeature> {\n    this._features = this._features || getDeviceFeatures(this.gl);\n    return this._features;\n  }\n\n  get limits(): DeviceLimits {\n    this._limits = this._limits || getDeviceLimits(this.gl);\n    return this._limits;\n  }\n\n  readonly lost: Promise<{reason: 'destroyed'; message: string}>;\n\n  private _resolveContextLost?: (value: {reason: 'destroyed'; message: string}) => void;\n  private _features?: Set<DeviceFeature>;\n  private _limits?: DeviceLimits;\n\n  //\n  // Static methods, expected to be present by `luma.createDevice()`\n  //\n\n  /**\n   * Get a device instance from a GL context\n   * Creates and instruments the device if not already created\n   * @param gl\n   * @returns\n   */\n  static attach(gl: Device | WebGLRenderingContext | WebGL2RenderingContext): WebGLDevice {\n    if (gl instanceof WebGLDevice) {\n      return gl;\n    }\n    // @ts-expect-error\n    if (gl?.device instanceof Device) {\n      // @ts-expect-error\n      return gl.device as WebGLDevice;\n    }\n    if (!isWebGL(gl)) {\n      throw new Error('Invalid WebGLRenderingContext');\n    }\n    return new WebGLDevice({gl: gl as WebGLRenderingContext});\n  }\n\n  static async create(props: DeviceProps = {}): Promise<WebGLDevice> {\n    log.groupCollapsed(LOG_LEVEL, 'WebGLDevice created')();\n\n    // Wait for page to load. Only wait when props. canvas is string\n    // to avoid setting page onload callback unless necessary\n    if (typeof props.canvas === 'string') {\n      await CanvasContext.pageLoaded;\n    }\n\n    // Load webgl and spector debug scripts from CDN if requested\n    if (log.get('debug') || props.debug) {\n      await loadWebGLDeveloperTools();\n    }\n\n    // @ts-expect-error spector not on props\n    const {spector} = props;\n    if (log.get('spector') || spector) {\n      await loadSpectorJS();\n    }\n\n    log.probe(LOG_LEVEL + 1, 'DOM is loaded')();\n\n    // @ts-expect-error\n    if (props.gl && props.gl.device) {\n      return WebGLDevice.attach(props.gl);\n    }\n\n    const device = new WebGLDevice(props);\n\n    // Log some debug info about the newly created context\n    const message = `\\\nCreated ${device.info.type}${device.debug ? ' debug' : ''} context: \\\n${device.info.vendor}, ${device.info.renderer} for canvas: ${device.canvasContext.id}`;\n    log.probe(LOG_LEVEL, message)();\n    log.table(LOG_LEVEL, device.info)();\n\n    log.groupEnd(LOG_LEVEL)();\n\n    return device;\n  }\n\n  //\n  // Public API\n  //\n\n  constructor(props: DeviceProps) {\n    super({...props, id: props.id || uid('webgl-device')});\n\n    // If attaching to an already attached context, return the attached device\n    // @ts-expect-error device is attached to context\n    const device: WebGLDevice | undefined = props.gl?.device;\n    if (device) {\n      throw new Error(`WebGL context already attached to device ${device.id}`);\n    }\n\n    // Create and instrument context\n    const canvas = props.canvas || props.gl?.canvas;\n    this.canvasContext = new WebGLCanvasContext(this, {...props, canvas});\n\n    this.lost = new Promise<{reason: 'destroyed'; message: string}>(resolve => {\n      this._resolveContextLost = resolve;\n    });\n\n    const onContextLost = (event: Event) =>\n      this._resolveContextLost?.({\n        reason: 'destroyed',\n        message: 'Computer entered sleep mode, or too many apps or browser tabs are using the GPU.'\n      });\n\n    let gl: WebGLRenderingContext | WebGL2RenderingContext | null = props.gl || null;\n    gl =\n      gl ||\n      (isBrowser()\n        ? createBrowserContext(this.canvasContext.canvas, {...props, onContextLost})\n        : null);\n    gl = gl || (!isBrowser() ? createHeadlessContext({...props, onContextLost}) : null);\n\n    if (!gl) {\n      throw new Error('WebGL context creation failed');\n    }\n\n    this.handle = gl;\n    this.gl = this.handle;\n    this.gl2 = this.gl as WebGL2RenderingContext;\n    this.isWebGL2 = isWebGL2(this.gl);\n    this.isWebGL1 = !this.isWebGL2;\n    this.canvasContext.resize();\n\n    // luma Device fields\n    this.info = getDeviceInfo(this.gl);\n\n    // @ts-expect-error Link webgl context back to device\n    this.gl.device = this;\n    // @ts-expect-error Annotate webgl context to handle\n    this.gl._version = this.isWebGL2 ? 2 : 1;\n\n    // Add subset of WebGL2 methods to WebGL1 context\n    polyfillContext(this.gl);\n\n    // Install context state tracking\n    // @ts-expect-error - hidden parameters\n    const {enable = true, copyState = false} = props;\n    trackContextState(this.gl, {\n      enable,\n      copyState,\n      log: (...args: any[]) => log.log(1, ...args)()\n    });\n\n    // DEBUG contexts: Add debug instrumentation to the context, force log level to at least 1\n    if (isBrowser() && props.debug) {\n      this.gl = makeDebugContext(this.gl, {...props, webgl2: this.isWebGL2, throwOnError: true});\n      this.gl2 = this.gl as WebGL2RenderingContext;\n      this.debug = true;\n      log.level = Math.max(log.level, 1);\n      log.warn('WebGL debug mode activated. Performance reduced.')();\n    }\n\n    // @ts-expect-error spector not on props\n    if (isBrowser() && props.spector) {\n      const canvas = this.handle.canvas || (props.canvas as HTMLCanvasElement);\n      this.spector = initializeSpectorJS({...this.props, canvas});\n    }\n  }\n\n  /**\n   * Destroys the context\n   * @note Has no effect for browser contexts, there is no browser API for destroying contexts\n   */\n  destroy(): void {\n    const ext = this.gl.getExtension('STACKGL_destroy_context');\n    if (ext) {\n      ext.destroy();\n    }\n  }\n\n  get isLost(): boolean {\n    return this.gl.isContextLost();\n  }\n\n  getSize(): [number, number] {\n    return [this.gl.drawingBufferWidth, this.gl.drawingBufferHeight];\n  }\n\n  isTextureFormatSupported(format: TextureFormat): boolean {\n    return isTextureFormatSupported(this.gl, format);\n  }\n\n  isTextureFormatFilterable(format: TextureFormat): boolean {\n    return isTextureFormatFilterable(this.gl, format);\n  }\n\n  isTextureFormatRenderable(format: TextureFormat): boolean {\n    return isTextureFormatRenderable(this.gl, format);\n  }\n\n  // WEBGL SPECIFIC METHODS\n\n  /** Returns a WebGL2RenderingContext or throws an error */\n  assertWebGL2(): WebGL2RenderingContext {\n    if (!this.gl2) {\n      throw new Error('Requires WebGL2');\n    }\n    return this.gl2;\n  }\n\n  // IMPLEMENTATION OF ABSTRACT DEVICE\n\n  createCanvasContext(props?: CanvasContextProps): CanvasContext {\n    throw new Error('WebGL only supports a single canvas');\n  }\n\n  createBuffer(props: BufferProps | ArrayBuffer | ArrayBufferView): WEBGLBuffer {\n    const newProps = this._getBufferProps(props);\n    return new WEBGLBuffer(this, newProps);\n  }\n\n  _createTexture(props: TextureProps): WEBGLTexture {\n    return new WEBGLTexture(this, props);\n  }\n\n  createExternalTexture(props: ExternalTextureProps): ExternalTexture {\n    throw new Error('createExternalTexture() not implemented'); // return new Program(props);\n  }\n\n  createSampler(props: SamplerProps): WEBGLSampler {\n    return new WEBGLSampler(this, props);\n  }\n\n  createShader(props: ShaderProps): WEBGLShader {\n    return new WEBGLShader(this, props);\n  }\n\n  createFramebuffer(props: FramebufferProps): WEBGLFramebuffer {\n    return new WEBGLFramebuffer(this, props);\n  }\n\n  createRenderPipeline(props: RenderPipelineProps): WEBGLRenderPipeline {\n    return new WEBGLRenderPipeline(this, props);\n  }\n\n  override createVertexArray(props: VertexArrayProps): VertexArray {\n    return new WEBGLVertexArray(this, props);\n  }\n\n  beginRenderPass(props: RenderPassProps): WEBGLRenderPass {\n    return new WEBGLRenderPass(this, props);\n  }\n\n  createComputePipeline(props?: ComputePipelineProps): ComputePipeline {\n    throw new Error('ComputePipeline not supported in WebGL');\n  }\n\n  beginComputePass(props: ComputePassProps): ComputePass {\n    throw new Error('ComputePass not supported in WebGL');\n  }\n\n  createTransformFeedback(props: TransformFeedbackProps): WEBGLTransformFeedback {\n    return new WEBGLTransformFeedback(this, props);\n  }\n\n  private renderPass: WEBGLRenderPass | null = null;\n\n  getDefaultRenderPass(): WEBGLRenderPass {\n    this.renderPass =\n      this.renderPass ||\n      this.beginRenderPass({\n        framebuffer: this.canvasContext.getCurrentFramebuffer()\n      });\n    return this.renderPass;\n  }\n\n  override createCommandEncoder(props?: CommandEncoderProps): WEBGLCommandEncoder {\n    return new WEBGLCommandEncoder(this, props);\n  }\n\n  /**\n   * Offscreen Canvas Support: Commit the frame\n   * https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/commit\n   * Chrome's offscreen canvas does not require gl.commit\n   */\n  submit(): void {\n    this.renderPass?.end();\n    this.renderPass = null;\n    // this.canvasContext.commit();\n  }\n\n  //\n  // TEMPORARY HACKS - will be removed in v9.1\n  // \n\n  /** @deprecated - should use command encoder */\n  override readPixelsToArrayWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      sourceAttachment?: number;\n      target?: Uint8Array | Uint16Array | Float32Array;\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Uint8Array | Uint16Array | Float32Array {\n    return readPixelsToArray(source, options);\n  }\n\n  /** @deprecated - should use command encoder */\n  override readPixelsToBufferWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      target?: Buffer; // A new Buffer object is created when not provided.\n      targetByteOffset?: number; // byte offset in buffer object\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Buffer {\n    return readPixelsToBuffer(source, options);\n  }\n\n  override setParametersWebGL(parameters: any): void {\n    setGLParameters(this, parameters);\n  }\n\n  override getParametersWebGL(parameters: any): any {\n    return getGLParameters(this, parameters);\n  }\n\n  override withParametersWebGL(parameters: any, func: any): any {\n    withGLParameters(this, parameters, func);\n  }\n\n  override clearWebGL(options?: {framebuffer?: Framebuffer; color?: any; depth?: any; stencil?: any}): void {\n    clear(this, options);\n  }\n  \n  //\n  // WebGL-only API (not part of `Device` API)\n  //\n\n  /** WebGL1 typed context. Can always be used. */\n  readonly gl: WebGLRenderingContext;\n  /** WebGL2 typed context. Need to check isWebGL2 or isWebGL1 before using. */\n  readonly gl2: WebGL2RenderingContext | null = null;\n  readonly debug: boolean = false;\n\n  /** `true` if this is a WebGL1 context. @note `false` if WebGL2 */\n  readonly isWebGL1: boolean;\n  /** `true` if this is a WebGL2 context. @note `false` if WebGL1 */\n  readonly isWebGL2: boolean;\n\n  /** State used by luma.gl classes: TODO - move to canvasContext*/\n  readonly _canvasSizeInfo = {clientWidth: 0, clientHeight: 0, devicePixelRatio: 1};\n\n  /** State used by luma.gl classes - TODO - not used? */\n  readonly _extensions: Record<string, any> = {};\n  _polyfilled: boolean = false;\n\n  /** Instance of Spector.js (if initialized) */\n  spector;\n\n  private _webglLimits?: WebGLLimits;\n\n  /** Return WebGL specific limits */\n  get webglLimits(): WebGLLimits {\n    this._webglLimits = this._webglLimits || getWebGLLimits(this.gl);\n    return this._webglLimits;\n  }\n\n  /**\n   * Triggers device (or WebGL context) loss.\n   * @note primarily intended for testing how application reacts to device loss\n   */\n  override loseDevice(): boolean {\n    let deviceLossTriggered = false;\n    const ext = this.gl.getExtension('WEBGL_lose_context');\n    if (ext) {\n      deviceLossTriggered = true;\n      ext.loseContext();\n      // ext.loseContext should trigger context loss callback but the platform may not do this, so do it explicitly\n    }\n    this._resolveContextLost?.({\n      reason: 'destroyed',\n      message: 'Application triggered context loss'\n    });\n    return deviceLossTriggered;\n  }\n\n  /** Save current WebGL context state onto an internal stack */\n  pushState(): void {\n    pushContextState(this.gl);\n  }\n\n  /** Restores previously saved context state */\n  popState(): void {\n    popContextState(this.gl);\n  }\n\n  /**\n   * Storing data on a special field on WebGLObjects makes that data visible in SPECTOR chrome debug extension\n   * luma.gl ids and props can be inspected\n   */\n  setSpectorMetadata(handle: unknown, props: Record<string, unknown>) {\n    // @ts-expect-error\n    // eslint-disable-next-line camelcase\n    handle.__SPECTOR_Metadata = props;\n  }\n\n  /**\n   * Returns the GL.<KEY> constant that corresponds to a numeric value of a GL constant\n   * Be aware that there are some duplicates especially for constants that are 0,\n   * so this isn't guaranteed to return the right key in all cases.\n   */\n  getGLKey(value: unknown, gl?: WebGLRenderingContext): string {\n    // @ts-ignore expect-error depends on settings\n    gl = gl || this.gl2 || this.gl;\n    const number = Number(value);\n    for (const key in gl) {\n      // @ts-ignore expect-error depends on settings\n      if (gl[key] === number) {\n        return `GL.${key}`;\n      }\n    }\n    // No constant found. Stringify the value and return it.\n    return String(value);\n  }\n\n  /** Store constants */\n  _constants: (TypedArray | null)[];\n\n  /**\n   * Set a constant value for a location. Disabled attributes at that location will read from this value\n   * @note WebGL constants are stored globally on the WebGL context, not the VertexArray\n   * so they need to be updated before every render\n   * @todo - remember/cache values to avoid setting them unnecessarily?\n   */\n  setConstantAttribute(location: number, constant: TypedArray): void {\n    this._constants = this._constants || new Array(this.limits.maxVertexAttributes).fill(null);\n    const currentConstant = this._constants[location];\n    if (currentConstant && compareConstantArrayValues(currentConstant, constant)) {\n      log.info(1, `setConstantAttribute(${location}) could have been skipped, value unchanged`)();\n    }\n    this._constants[location] = constant;\n\n    switch (constant.constructor) {\n      case Float32Array:\n        setConstantFloatArray(this, location, constant as Float32Array);\n        break;\n      case Int32Array:\n        setConstantIntArray(this, location, constant as Int32Array);\n        break;\n      case Uint32Array:\n        setConstantUintArray(this, location, constant as Uint32Array);\n        break;\n      default:\n        assert(false);\n    }\n  }\n}\n\n/** Check if supplied parameter is a WebGLRenderingContext */\nfunction isWebGL(gl: any): boolean {\n  if (typeof WebGLRenderingContext !== 'undefined' && gl instanceof WebGLRenderingContext) {\n    return true;\n  }\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  // Look for debug contexts, headless gl etc\n  return Boolean(gl && Number.isFinite(gl._version));\n}\n\n/** Check if supplied parameter is a WebGL2RenderingContext */\nfunction isWebGL2(gl: any): boolean {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  // Look for debug contexts, headless gl etc\n  return Boolean(gl && gl._version === 2);\n}\n\n/** Set constant float array attribute */\nfunction setConstantFloatArray(device: WebGLDevice, location: number, array: Float32Array): void {\n  switch (array.length) {\n    case 1:\n      device.gl.vertexAttrib1fv(location, array);\n      break;\n    case 2:\n      device.gl.vertexAttrib2fv(location, array);\n      break;\n    case 3:\n      device.gl.vertexAttrib3fv(location, array);\n      break;\n    case 4:\n      device.gl.vertexAttrib4fv(location, array);\n      break;\n    default:\n      assert(false);\n  }\n}\n\n/** Set constant signed int array attribute */\nfunction setConstantIntArray(device: WebGLDevice, location: number, array: Int32Array): void {\n  device.assertWebGL2();\n  device.gl2?.vertexAttribI4iv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1iv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2iv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3iv(location, array);\n  //     break;\n  //   case 4:\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/** Set constant unsigned int array attribute */\nfunction setConstantUintArray(device: WebGLDevice, location: number, array: Uint32Array) {\n  device.assertWebGL2();\n  device.gl2?.vertexAttribI4uiv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1uiv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2uiv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3uiv(location, array);\n  //     break;\n  //   case 4:\n  //     gl.vertexAttribI4uiv(location, array);\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/**\n * Compares contents of two typed arrays\n * @todo max length?\n */\nfunction compareConstantArrayValues(v1: TypedArray, v2: TypedArray): boolean {\n  if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n    return false;\n  }\n  for (let i = 0; i < v1.length; ++i) {\n    if (v1[i] !== v2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"mappings":"AAiBA,SAAQA,MAAM,EAAEC,aAAa,EAAEC,GAAG,EAAEC,GAAG,EAAEC,MAAM,QAAO,eAAe;AACrE,SAAQC,SAAS,QAAO,eAAe;AAAC,SAChCC,eAAe;AAAA,SAErBC,eAAe,EACfC,gBAAgB,EAChBC,iBAAiB;AAAA,SAEXC,oBAAoB;AAAA,SAE1BC,qBAAqB,EACrBC,sBAAsB;AAAA,SAGhBC,aAAa;AAAA,SACbC,iBAAiB;AAAA,SACjBC,eAAe,EAAEC,cAAc;AAAA,SAC/BC,kBAAkB;AAAA,SAClBC,aAAa,EAAEC,mBAAmB;AAAA,SAClCC,uBAAuB,EAAEC,gBAAgB;AAAA,SAE/CC,wBAAwB,EACxBC,yBAAyB,EACzBC,yBAAyB;AAAA,SA0BnBC,WAAW;AAAA,SACXC,WAAW;AAAA,SACXC,YAAY;AAAA,SACZC,YAAY;AAAA,SACZC,gBAAgB;AAAA,SAChBC,eAAe;AAAA,SACfC,mBAAmB;AAAA,SACnBC,mBAAmB;AAAA,SACnBC,gBAAgB;AAAA,SAChBC,sBAAsB;AAAA,SAEtBC,iBAAiB,EAAEC,kBAAkB;AAAA,SACrCC,eAAe,EAAEC,eAAe;AAAA,SAChCC,gBAAgB;AAAA,SAChBC,KAAK;AAEb,MAAMC,SAAS,GAAG,CAAC;AAGnB,OAAO,MAAMC,WAAW,SAAS1C,MAAM,CAAC;EAOtC,OAAO2C,WAAWA,CAAA,EAAY;IAC5B,OAAO,OAAOC,qBAAqB,KAAK,WAAW,IAAIhC,sBAAsB,CAAC,CAAC;EACjF;EAOA,IAAIiC,QAAQA,CAAA,EAAuB;IACjC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,IAAIhC,iBAAiB,CAAC,IAAI,CAACiC,EAAE,CAAC;IAC7D,OAAO,IAAI,CAACD,SAAS;EACvB;EAEA,IAAIE,MAAMA,CAAA,EAAiB;IACzB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACA,OAAO,IAAIlC,eAAe,CAAC,IAAI,CAACgC,EAAE,CAAC;IACvD,OAAO,IAAI,CAACE,OAAO;EACrB;EAkBA,OAAOC,MAAMA,CAACH,EAA2D,EAAe;IACtF,IAAIA,EAAE,YAAYL,WAAW,EAAE;MAC7B,OAAOK,EAAE;IACX;IAEA,IAAI,CAAAA,EAAE,aAAFA,EAAE,uBAAFA,EAAE,CAAEI,MAAM,aAAYnD,MAAM,EAAE;MAEhC,OAAO+C,EAAE,CAACI,MAAM;IAClB;IACA,IAAI,CAACC,OAAO,CAACL,EAAE,CAAC,EAAE;MAChB,MAAM,IAAIM,KAAK,CAAC,+BAA+B,CAAC;IAClD;IACA,OAAO,IAAIX,WAAW,CAAC;MAACK,EAAE,EAAEA;IAA2B,CAAC,CAAC;EAC3D;EAEA,aAAaO,MAAMA,CAAA,EAAgD;IAAA,IAA/CC,KAAkB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzCtD,GAAG,CAACyD,cAAc,CAAClB,SAAS,EAAE,qBAAqB,CAAC,CAAC,CAAC;IAItD,IAAI,OAAOc,KAAK,CAACK,MAAM,KAAK,QAAQ,EAAE;MACpC,MAAM3D,aAAa,CAAC4D,UAAU;IAChC;IAGA,IAAI3D,GAAG,CAAC4D,GAAG,CAAC,OAAO,CAAC,IAAIP,KAAK,CAACQ,KAAK,EAAE;MACnC,MAAM3C,uBAAuB,CAAC,CAAC;IACjC;IAGA,MAAM;MAAC4C;IAAO,CAAC,GAAGT,KAAK;IACvB,IAAIrD,GAAG,CAAC4D,GAAG,CAAC,SAAS,CAAC,IAAIE,OAAO,EAAE;MACjC,MAAM9C,aAAa,CAAC,CAAC;IACvB;IAEAhB,GAAG,CAAC+D,KAAK,CAACxB,SAAS,GAAG,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;IAG3C,IAAIc,KAAK,CAACR,EAAE,IAAIQ,KAAK,CAACR,EAAE,CAACI,MAAM,EAAE;MAC/B,OAAOT,WAAW,CAACQ,MAAM,CAACK,KAAK,CAACR,EAAE,CAAC;IACrC;IAEA,MAAMI,MAAM,GAAG,IAAIT,WAAW,CAACa,KAAK,CAAC;IAGrC,MAAMW,OAAO,GAAI;AACrB,UAAUf,MAAM,CAACgB,IAAI,CAACC,IAAK,GAAEjB,MAAM,CAACY,KAAK,GAAG,QAAQ,GAAG,EAAG;AAC1D,EAAEZ,MAAM,CAACgB,IAAI,CAACE,MAAO,KAAIlB,MAAM,CAACgB,IAAI,CAACG,QAAS,gBAAenB,MAAM,CAACoB,aAAa,CAACC,EAAG,EAAC;IAClFtE,GAAG,CAAC+D,KAAK,CAACxB,SAAS,EAAEyB,OAAO,CAAC,CAAC,CAAC;IAC/BhE,GAAG,CAACuE,KAAK,CAAChC,SAAS,EAAEU,MAAM,CAACgB,IAAI,CAAC,CAAC,CAAC;IAEnCjE,GAAG,CAACwE,QAAQ,CAACjC,SAAS,CAAC,CAAC,CAAC;IAEzB,OAAOU,MAAM;EACf;EAMAwB,WAAWA,CAACpB,KAAkB,EAAE;IAAA,IAAAqB,SAAA,EAAAC,UAAA;IAC9B,KAAK,CAAC;MAAC,GAAGtB,KAAK;MAAEiB,EAAE,EAAEjB,KAAK,CAACiB,EAAE,IAAIrE,GAAG,CAAC,cAAc;IAAC,CAAC,CAAC;IAAC,KA5FhDgE,IAAI;IAAA,KACJI,aAAa;IAAA,KAEbO,MAAM;IAAA,KAYNC,IAAI;IAAA,KAELC,mBAAmB;IAAA,KACnBlC,SAAS;IAAA,KACTG,OAAO;IAAA,KAuPPgC,UAAU,GAA2B,IAAI;IAAA,KAuFxClC,EAAE;IAAA,KAEFmC,GAAG,GAAkC,IAAI;IAAA,KACzCnB,KAAK,GAAY,KAAK;IAAA,KAGtBoB,QAAQ;IAAA,KAERC,QAAQ;IAAA,KAGRC,eAAe,GAAG;MAACC,WAAW,EAAE,CAAC;MAAEC,YAAY,EAAE,CAAC;MAAEC,gBAAgB,EAAE;IAAC,CAAC;IAAA,KAGxEC,WAAW,GAAwB,CAAC,CAAC;IAAA,KAC9CC,WAAW,GAAY,KAAK;IAAA,KAG5B1B,OAAO;IAAA,KAEC2B,YAAY;IAAA,KAmEpBC,UAAU;IAxVR,MAAMzC,MAA+B,IAAAyB,SAAA,GAAGrB,KAAK,CAACR,EAAE,cAAA6B,SAAA,uBAARA,SAAA,CAAUzB,MAAM;IACxD,IAAIA,MAAM,EAAE;MACV,MAAM,IAAIE,KAAK,CAAE,4CAA2CF,MAAM,CAACqB,EAAG,EAAC,CAAC;IAC1E;IAGA,MAAMZ,MAAM,GAAGL,KAAK,CAACK,MAAM,MAAAiB,UAAA,GAAItB,KAAK,CAACR,EAAE,cAAA8B,UAAA,uBAARA,UAAA,CAAUjB,MAAM;IAC/C,IAAI,CAACW,aAAa,GAAG,IAAItD,kBAAkB,CAAC,IAAI,EAAE;MAAC,GAAGsC,KAAK;MAAEK;IAAM,CAAC,CAAC;IAErE,IAAI,CAACmB,IAAI,GAAG,IAAIc,OAAO,CAAyCC,OAAO,IAAI;MACzE,IAAI,CAACd,mBAAmB,GAAGc,OAAO;IACpC,CAAC,CAAC;IAEF,MAAMC,aAAa,GAAIC,KAAY;MAAA,IAAAC,qBAAA;MAAA,QAAAA,qBAAA,GACjC,IAAI,CAACjB,mBAAmB,cAAAiB,qBAAA,uBAAxBA,qBAAA,CAAAC,IAAA,KAAI,EAAuB;QACzBC,MAAM,EAAE,WAAW;QACnBjC,OAAO,EAAE;MACX,CAAC,CAAC;IAAA;IAEJ,IAAInB,EAAyD,GAAGQ,KAAK,CAACR,EAAE,IAAI,IAAI;IAChFA,EAAE,GACAA,EAAE,KACD1C,SAAS,CAAC,CAAC,GACRK,oBAAoB,CAAC,IAAI,CAAC6D,aAAa,CAACX,MAAM,EAAE;MAAC,GAAGL,KAAK;MAAEwC;IAAa,CAAC,CAAC,GAC1E,IAAI,CAAC;IACXhD,EAAE,GAAGA,EAAE,KAAK,CAAC1C,SAAS,CAAC,CAAC,GAAGM,qBAAqB,CAAC;MAAC,GAAG4C,KAAK;MAAEwC;IAAa,CAAC,CAAC,GAAG,IAAI,CAAC;IAEnF,IAAI,CAAChD,EAAE,EAAE;MACP,MAAM,IAAIM,KAAK,CAAC,+BAA+B,CAAC;IAClD;IAEA,IAAI,CAACyB,MAAM,GAAG/B,EAAE;IAChB,IAAI,CAACA,EAAE,GAAG,IAAI,CAAC+B,MAAM;IACrB,IAAI,CAACI,GAAG,GAAG,IAAI,CAACnC,EAA4B;IAC5C,IAAI,CAACqC,QAAQ,GAAGA,QAAQ,CAAC,IAAI,CAACrC,EAAE,CAAC;IACjC,IAAI,CAACoC,QAAQ,GAAG,CAAC,IAAI,CAACC,QAAQ;IAC9B,IAAI,CAACb,aAAa,CAAC6B,MAAM,CAAC,CAAC;IAG3B,IAAI,CAACjC,IAAI,GAAGtD,aAAa,CAAC,IAAI,CAACkC,EAAE,CAAC;IAGlC,IAAI,CAACA,EAAE,CAACI,MAAM,GAAG,IAAI;IAErB,IAAI,CAACJ,EAAE,CAACsD,QAAQ,GAAG,IAAI,CAACjB,QAAQ,GAAG,CAAC,GAAG,CAAC;IAGxC9E,eAAe,CAAC,IAAI,CAACyC,EAAE,CAAC;IAIxB,MAAM;MAACuD,MAAM,GAAG,IAAI;MAAEC,SAAS,GAAG;IAAK,CAAC,GAAGhD,KAAK;IAChD9C,iBAAiB,CAAC,IAAI,CAACsC,EAAE,EAAE;MACzBuD,MAAM;MACNC,SAAS;MACTrG,GAAG,EAAE,SAAAA,CAAA;QAAA,SAAAsG,IAAA,GAAAhD,SAAA,CAAAC,MAAA,EAAIgD,IAAI,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;UAAJF,IAAI,CAAAE,IAAA,IAAAnD,SAAA,CAAAmD,IAAA;QAAA;QAAA,OAAYzG,GAAG,CAACA,GAAG,CAAC,CAAC,EAAE,GAAGuG,IAAI,CAAC,CAAC,CAAC;MAAA;IAChD,CAAC,CAAC;IAGF,IAAIpG,SAAS,CAAC,CAAC,IAAIkD,KAAK,CAACQ,KAAK,EAAE;MAC9B,IAAI,CAAChB,EAAE,GAAG1B,gBAAgB,CAAC,IAAI,CAAC0B,EAAE,EAAE;QAAC,GAAGQ,KAAK;QAAEqD,MAAM,EAAE,IAAI,CAACxB,QAAQ;QAAEyB,YAAY,EAAE;MAAI,CAAC,CAAC;MAC1F,IAAI,CAAC3B,GAAG,GAAG,IAAI,CAACnC,EAA4B;MAC5C,IAAI,CAACgB,KAAK,GAAG,IAAI;MACjB7D,GAAG,CAAC4G,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC9G,GAAG,CAAC4G,KAAK,EAAE,CAAC,CAAC;MAClC5G,GAAG,CAAC+G,IAAI,CAAC,kDAAkD,CAAC,CAAC,CAAC;IAChE;IAGA,IAAI5G,SAAS,CAAC,CAAC,IAAIkD,KAAK,CAACS,OAAO,EAAE;MAChC,MAAMJ,MAAM,GAAG,IAAI,CAACkB,MAAM,CAAClB,MAAM,IAAKL,KAAK,CAACK,MAA4B;MACxE,IAAI,CAACI,OAAO,GAAG7C,mBAAmB,CAAC;QAAC,GAAG,IAAI,CAACoC,KAAK;QAAEK;MAAM,CAAC,CAAC;IAC7D;EACF;EAMAsD,OAAOA,CAAA,EAAS;IACd,MAAMC,GAAG,GAAG,IAAI,CAACpE,EAAE,CAACqE,YAAY,CAAC,yBAAyB,CAAC;IAC3D,IAAID,GAAG,EAAE;MACPA,GAAG,CAACD,OAAO,CAAC,CAAC;IACf;EACF;EAEA,IAAIG,MAAMA,CAAA,EAAY;IACpB,OAAO,IAAI,CAACtE,EAAE,CAACuE,aAAa,CAAC,CAAC;EAChC;EAEAC,OAAOA,CAAA,EAAqB;IAC1B,OAAO,CAAC,IAAI,CAACxE,EAAE,CAACyE,kBAAkB,EAAE,IAAI,CAACzE,EAAE,CAAC0E,mBAAmB,CAAC;EAClE;EAEAnG,wBAAwBA,CAACoG,MAAqB,EAAW;IACvD,OAAOpG,wBAAwB,CAAC,IAAI,CAACyB,EAAE,EAAE2E,MAAM,CAAC;EAClD;EAEAlG,yBAAyBA,CAACkG,MAAqB,EAAW;IACxD,OAAOlG,yBAAyB,CAAC,IAAI,CAACuB,EAAE,EAAE2E,MAAM,CAAC;EACnD;EAEAnG,yBAAyBA,CAACmG,MAAqB,EAAW;IACxD,OAAOnG,yBAAyB,CAAC,IAAI,CAACwB,EAAE,EAAE2E,MAAM,CAAC;EACnD;EAKAC,YAAYA,CAAA,EAA2B;IACrC,IAAI,CAAC,IAAI,CAACzC,GAAG,EAAE;MACb,MAAM,IAAI7B,KAAK,CAAC,iBAAiB,CAAC;IACpC;IACA,OAAO,IAAI,CAAC6B,GAAG;EACjB;EAIA0C,mBAAmBA,CAACrE,KAA0B,EAAiB;IAC7D,MAAM,IAAIF,KAAK,CAAC,qCAAqC,CAAC;EACxD;EAEAwE,YAAYA,CAACtE,KAAkD,EAAe;IAC5E,MAAMuE,QAAQ,GAAG,IAAI,CAACC,eAAe,CAACxE,KAAK,CAAC;IAC5C,OAAO,IAAI9B,WAAW,CAAC,IAAI,EAAEqG,QAAQ,CAAC;EACxC;EAEAE,cAAcA,CAACzE,KAAmB,EAAgB;IAChD,OAAO,IAAI3B,YAAY,CAAC,IAAI,EAAE2B,KAAK,CAAC;EACtC;EAEA0E,qBAAqBA,CAAC1E,KAA2B,EAAmB;IAClE,MAAM,IAAIF,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA6E,aAAaA,CAAC3E,KAAmB,EAAgB;IAC/C,OAAO,IAAI5B,YAAY,CAAC,IAAI,EAAE4B,KAAK,CAAC;EACtC;EAEA4E,YAAYA,CAAC5E,KAAkB,EAAe;IAC5C,OAAO,IAAI7B,WAAW,CAAC,IAAI,EAAE6B,KAAK,CAAC;EACrC;EAEA6E,iBAAiBA,CAAC7E,KAAuB,EAAoB;IAC3D,OAAO,IAAI1B,gBAAgB,CAAC,IAAI,EAAE0B,KAAK,CAAC;EAC1C;EAEA8E,oBAAoBA,CAAC9E,KAA0B,EAAuB;IACpE,OAAO,IAAIxB,mBAAmB,CAAC,IAAI,EAAEwB,KAAK,CAAC;EAC7C;EAES+E,iBAAiBA,CAAC/E,KAAuB,EAAe;IAC/D,OAAO,IAAItB,gBAAgB,CAAC,IAAI,EAAEsB,KAAK,CAAC;EAC1C;EAEAgF,eAAeA,CAAChF,KAAsB,EAAmB;IACvD,OAAO,IAAIzB,eAAe,CAAC,IAAI,EAAEyB,KAAK,CAAC;EACzC;EAEAiF,qBAAqBA,CAACjF,KAA4B,EAAmB;IACnE,MAAM,IAAIF,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEAoF,gBAAgBA,CAAClF,KAAuB,EAAe;IACrD,MAAM,IAAIF,KAAK,CAAC,oCAAoC,CAAC;EACvD;EAEAqF,uBAAuBA,CAACnF,KAA6B,EAA0B;IAC7E,OAAO,IAAIrB,sBAAsB,CAAC,IAAI,EAAEqB,KAAK,CAAC;EAChD;EAIAoF,oBAAoBA,CAAA,EAAoB;IACtC,IAAI,CAAC1D,UAAU,GACb,IAAI,CAACA,UAAU,IACf,IAAI,CAACsD,eAAe,CAAC;MACnBK,WAAW,EAAE,IAAI,CAACrE,aAAa,CAACsE,qBAAqB,CAAC;IACxD,CAAC,CAAC;IACJ,OAAO,IAAI,CAAC5D,UAAU;EACxB;EAES6D,oBAAoBA,CAACvF,KAA2B,EAAuB;IAC9E,OAAO,IAAIvB,mBAAmB,CAAC,IAAI,EAAEuB,KAAK,CAAC;EAC7C;EAOAwF,MAAMA,CAAA,EAAS;IAAA,IAAAC,gBAAA;IACb,CAAAA,gBAAA,OAAI,CAAC/D,UAAU,cAAA+D,gBAAA,uBAAfA,gBAAA,CAAiBC,GAAG,CAAC,CAAC;IACtB,IAAI,CAAChE,UAAU,GAAG,IAAI;EAExB;EAOSiE,sBAAsBA,CAC7BC,MAA6B,EAC7BC,OAUC,EACwC;IACzC,OAAOjH,iBAAiB,CAACgH,MAAM,EAAEC,OAAO,CAAC;EAC3C;EAGSC,uBAAuBA,CAC9BF,MAA6B,EAC7BC,OAUC,EACO;IACR,OAAOhH,kBAAkB,CAAC+G,MAAM,EAAEC,OAAO,CAAC;EAC5C;EAESE,kBAAkBA,CAACC,UAAe,EAAQ;IACjDlH,eAAe,CAAC,IAAI,EAAEkH,UAAU,CAAC;EACnC;EAESC,kBAAkBA,CAACD,UAAe,EAAO;IAChD,OAAOjH,eAAe,CAAC,IAAI,EAAEiH,UAAU,CAAC;EAC1C;EAESE,mBAAmBA,CAACF,UAAe,EAAEG,IAAS,EAAO;IAC5DnH,gBAAgB,CAAC,IAAI,EAAEgH,UAAU,EAAEG,IAAI,CAAC;EAC1C;EAESC,UAAUA,CAACP,OAA8E,EAAQ;IACxG5G,KAAK,CAAC,IAAI,EAAE4G,OAAO,CAAC;EACtB;EA8BA,IAAIQ,WAAWA,CAAA,EAAgB;IAC7B,IAAI,CAACjE,YAAY,GAAG,IAAI,CAACA,YAAY,IAAI3E,cAAc,CAAC,IAAI,CAAC+B,EAAE,CAAC;IAChE,OAAO,IAAI,CAAC4C,YAAY;EAC1B;EAMSkE,UAAUA,CAAA,EAAY;IAAA,IAAAC,sBAAA;IAC7B,IAAIC,mBAAmB,GAAG,KAAK;IAC/B,MAAM5C,GAAG,GAAG,IAAI,CAACpE,EAAE,CAACqE,YAAY,CAAC,oBAAoB,CAAC;IACtD,IAAID,GAAG,EAAE;MACP4C,mBAAmB,GAAG,IAAI;MAC1B5C,GAAG,CAAC6C,WAAW,CAAC,CAAC;IAEnB;IACA,CAAAF,sBAAA,OAAI,CAAC9E,mBAAmB,cAAA8E,sBAAA,uBAAxBA,sBAAA,CAAA5D,IAAA,KAAI,EAAuB;MACzBC,MAAM,EAAE,WAAW;MACnBjC,OAAO,EAAE;IACX,CAAC,CAAC;IACF,OAAO6F,mBAAmB;EAC5B;EAGAE,SAASA,CAAA,EAAS;IAChBzJ,gBAAgB,CAAC,IAAI,CAACuC,EAAE,CAAC;EAC3B;EAGAmH,QAAQA,CAAA,EAAS;IACf3J,eAAe,CAAC,IAAI,CAACwC,EAAE,CAAC;EAC1B;EAMAoH,kBAAkBA,CAACrF,MAAe,EAAEvB,KAA8B,EAAE;IAGlEuB,MAAM,CAACsF,kBAAkB,GAAG7G,KAAK;EACnC;EAOA8G,QAAQA,CAACC,KAAc,EAAEvH,EAA0B,EAAU;IAE3DA,EAAE,GAAGA,EAAE,IAAI,IAAI,CAACmC,GAAG,IAAI,IAAI,CAACnC,EAAE;IAC9B,MAAMwH,MAAM,GAAGC,MAAM,CAACF,KAAK,CAAC;IAC5B,KAAK,MAAMG,GAAG,IAAI1H,EAAE,EAAE;MAEpB,IAAIA,EAAE,CAAC0H,GAAG,CAAC,KAAKF,MAAM,EAAE;QACtB,OAAQ,MAAKE,GAAI,EAAC;MACpB;IACF;IAEA,OAAOC,MAAM,CAACJ,KAAK,CAAC;EACtB;EAWAK,oBAAoBA,CAACC,QAAgB,EAAEC,QAAoB,EAAQ;IACjE,IAAI,CAACjF,UAAU,GAAG,IAAI,CAACA,UAAU,IAAI,IAAIc,KAAK,CAAC,IAAI,CAAC1D,MAAM,CAAC8H,mBAAmB,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC1F,MAAMC,eAAe,GAAG,IAAI,CAACpF,UAAU,CAACgF,QAAQ,CAAC;IACjD,IAAII,eAAe,IAAIC,0BAA0B,CAACD,eAAe,EAAEH,QAAQ,CAAC,EAAE;MAC5E3K,GAAG,CAACiE,IAAI,CAAC,CAAC,EAAG,wBAAuByG,QAAS,4CAA2C,CAAC,CAAC,CAAC;IAC7F;IACA,IAAI,CAAChF,UAAU,CAACgF,QAAQ,CAAC,GAAGC,QAAQ;IAEpC,QAAQA,QAAQ,CAAClG,WAAW;MAC1B,KAAKuG,YAAY;QACfC,qBAAqB,CAAC,IAAI,EAAEP,QAAQ,EAAEC,QAAwB,CAAC;QAC/D;MACF,KAAKO,UAAU;QACbC,mBAAmB,CAAC,IAAI,EAAET,QAAQ,EAAEC,QAAsB,CAAC;QAC3D;MACF,KAAKS,WAAW;QACdC,oBAAoB,CAAC,IAAI,EAAEX,QAAQ,EAAEC,QAAuB,CAAC;QAC7D;MACF;QACEzK,MAAM,CAAC,KAAK,CAAC;IACjB;EACF;AACF;AAjeasC,WAAW,CAKf0B,IAAI,GAAW,OAAO;AA+d/B,SAAShB,OAAOA,CAACL,EAAO,EAAW;EACjC,IAAI,OAAOH,qBAAqB,KAAK,WAAW,IAAIG,EAAE,YAAYH,qBAAqB,EAAE;IACvF,OAAO,IAAI;EACb;EACA,IAAI,OAAO4I,sBAAsB,KAAK,WAAW,IAAIzI,EAAE,YAAYyI,sBAAsB,EAAE;IACzF,OAAO,IAAI;EACb;EAEA,OAAOC,OAAO,CAAC1I,EAAE,IAAIyH,MAAM,CAACkB,QAAQ,CAAC3I,EAAE,CAACsD,QAAQ,CAAC,CAAC;AACpD;AAGA,SAASjB,QAAQA,CAACrC,EAAO,EAAW;EAClC,IAAI,OAAOyI,sBAAsB,KAAK,WAAW,IAAIzI,EAAE,YAAYyI,sBAAsB,EAAE;IACzF,OAAO,IAAI;EACb;EAEA,OAAOC,OAAO,CAAC1I,EAAE,IAAIA,EAAE,CAACsD,QAAQ,KAAK,CAAC,CAAC;AACzC;AAGA,SAAS8E,qBAAqBA,CAAChI,MAAmB,EAAEyH,QAAgB,EAAEe,KAAmB,EAAQ;EAC/F,QAAQA,KAAK,CAAClI,MAAM;IAClB,KAAK,CAAC;MACJN,MAAM,CAACJ,EAAE,CAAC6I,eAAe,CAAChB,QAAQ,EAAEe,KAAK,CAAC;MAC1C;IACF,KAAK,CAAC;MACJxI,MAAM,CAACJ,EAAE,CAAC8I,eAAe,CAACjB,QAAQ,EAAEe,KAAK,CAAC;MAC1C;IACF,KAAK,CAAC;MACJxI,MAAM,CAACJ,EAAE,CAAC+I,eAAe,CAAClB,QAAQ,EAAEe,KAAK,CAAC;MAC1C;IACF,KAAK,CAAC;MACJxI,MAAM,CAACJ,EAAE,CAACgJ,eAAe,CAACnB,QAAQ,EAAEe,KAAK,CAAC;MAC1C;IACF;MACEvL,MAAM,CAAC,KAAK,CAAC;EACjB;AACF;AAGA,SAASiL,mBAAmBA,CAAClI,MAAmB,EAAEyH,QAAgB,EAAEe,KAAiB,EAAQ;EAAA,IAAAK,UAAA;EAC3F7I,MAAM,CAACwE,YAAY,CAAC,CAAC;EACrB,CAAAqE,UAAA,GAAA7I,MAAM,CAAC+B,GAAG,cAAA8G,UAAA,uBAAVA,UAAA,CAAYC,gBAAgB,CAACrB,QAAQ,EAAEe,KAAK,CAAC;AAiB/C;AAGA,SAASJ,oBAAoBA,CAACpI,MAAmB,EAAEyH,QAAgB,EAAEe,KAAkB,EAAE;EAAA,IAAAO,WAAA;EACvF/I,MAAM,CAACwE,YAAY,CAAC,CAAC;EACrB,CAAAuE,WAAA,GAAA/I,MAAM,CAAC+B,GAAG,cAAAgH,WAAA,uBAAVA,WAAA,CAAYC,iBAAiB,CAACvB,QAAQ,EAAEe,KAAK,CAAC;AAkBhD;AAMA,SAASV,0BAA0BA,CAACmB,EAAc,EAAEC,EAAc,EAAW;EAC3E,IAAI,CAACD,EAAE,IAAI,CAACC,EAAE,IAAID,EAAE,CAAC3I,MAAM,KAAK4I,EAAE,CAAC5I,MAAM,IAAI2I,EAAE,CAACzH,WAAW,KAAK0H,EAAE,CAAC1H,WAAW,EAAE;IAC9E,OAAO,KAAK;EACd;EACA,KAAK,IAAI2H,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,EAAE,CAAC3I,MAAM,EAAE,EAAE6I,CAAC,EAAE;IAClC,IAAIF,EAAE,CAACE,CAAC,CAAC,KAAKD,EAAE,CAACC,CAAC,CAAC,EAAE;MACnB,OAAO,KAAK;IACd;EACF;EACA,OAAO,IAAI;AACb"}