{"version":3,"file":"webgl-shader.js","names":["Shader","parseShaderCompilerLog","WEBGLShader","constructor","device","props","handle","stage","gl","createShader","Error","_compile","source","destroy","removeStats","deleteShader","destroyed","getCompilationInfo","getCompilationInfoSync","log","getShaderInfoLog","addGLSLVersion","startsWith","shaderSource","compileShader","compilationStatus","getShaderParameter","debugShader","id"],"sources":["../../../src/adapter/resources/webgl-shader.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {Shader, ShaderProps, CompilerMessage} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {parseShaderCompilerLog} from '../helpers/parse-shader-compiler-log';\nimport {WebGLDevice} from '../webgl-device';\n\n/**\n * An immutable compiled shader program that execute portions of the GPU Pipeline\n */\nexport class WEBGLShader extends Shader {\n  readonly device: WebGLDevice;\n  readonly handle: WebGLShader;\n\n  constructor(device: WebGLDevice, props: ShaderProps) {\n    super(device, props);\n    this.device = device;\n    switch (this.props.stage) {\n      case 'vertex':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.VERTEX_SHADER);\n        break;\n      case 'fragment':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.FRAGMENT_SHADER);\n        break;\n      default:\n        throw new Error(this.props.stage);\n    }\n    this._compile(this.source);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.removeStats();\n      this.device.gl.deleteShader(this.handle);\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  override async getCompilationInfo(): Promise<readonly CompilerMessage[]> {\n    return this.getCompilationInfoSync();\n  }\n\n  override getCompilationInfoSync() {\n    const log = this.device.gl.getShaderInfoLog(this.handle);\n    return parseShaderCompilerLog(log);\n  }\n\n  // PRIVATE METHODS\n\n  _compile(source: string): void {\n    const addGLSLVersion = (source: string) =>\n      source.startsWith('#version ') ? source : `#version 100\\n${source}`;\n    source = addGLSLVersion(source);\n\n    const {gl} = this.device;\n    gl.shaderSource(this.handle, source);\n    gl.compileShader(this.handle);\n\n    // TODO - For performance reasons, avoid checking shader compilation errors on production?\n    // TODO - Load log even when no error reported, to catch warnings?\n    // https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n    this.compilationStatus = gl.getShaderParameter(this.handle, GL.COMPILE_STATUS) ? 'success' : 'error';\n\n    // The `Shader` base class will determine if debug window should be opened based on props\n    this.debugShader();\n\n    if (this.compilationStatus === 'error') {\n      throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`);\n    }\n  }\n}\n\n// TODO - Original code from luma.gl v8 - keep until new debug functionality has matured\n// if (!compilationSuccess) {\n//   const parsedLog = shaderLog ? parseShaderCompilerLog(shaderLog) : [];\n//   const messages = parsedLog.filter(message => message.type === 'error');\n//   const formattedLog = formatCompilerLog(messages, source, {showSourceCode: 'all', html: true});\n//   const shaderDescription = `${this.stage} shader ${shaderName}`;\n//   log.error(`GLSL compilation errors in ${shaderDescription}\\n${formattedLog}`)();\n//   displayShaderLog(parsedLog, source, shaderName);\n// }\n\n"],"mappings":"AAGA,SAAQA,MAAM,QAAqC,eAAe;AAAC,SAE3DC,sBAAsB;AAM9B,OAAO,MAAMC,WAAW,SAASF,MAAM,CAAC;EAItCG,WAAWA,CAACC,MAAmB,EAAEC,KAAkB,EAAE;IACnD,KAAK,CAACD,MAAM,EAAEC,KAAK,CAAC;IAAC,KAJdD,MAAM;IAAA,KACNE,MAAM;IAIb,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,QAAQ,IAAI,CAACC,KAAK,CAACE,KAAK;MACtB,KAAK,QAAQ;QACX,IAAI,CAACD,MAAM,GAAG,IAAI,CAACD,KAAK,CAACC,MAAM,IAAI,IAAI,CAACF,MAAM,CAACI,EAAE,CAACC,YAAY,MAAiB,CAAC;QAChF;MACF,KAAK,UAAU;QACb,IAAI,CAACH,MAAM,GAAG,IAAI,CAACD,KAAK,CAACC,MAAM,IAAI,IAAI,CAACF,MAAM,CAACI,EAAE,CAACC,YAAY,MAAmB,CAAC;QAClF;MACF;QACE,MAAM,IAAIC,KAAK,CAAC,IAAI,CAACL,KAAK,CAACE,KAAK,CAAC;IACrC;IACA,IAAI,CAACI,QAAQ,CAAC,IAAI,CAACC,MAAM,CAAC;EAC5B;EAESC,OAAOA,CAAA,EAAS;IACvB,IAAI,IAAI,CAACP,MAAM,EAAE;MACf,IAAI,CAACQ,WAAW,CAAC,CAAC;MAClB,IAAI,CAACV,MAAM,CAACI,EAAE,CAACO,YAAY,CAAC,IAAI,CAACT,MAAM,CAAC;MAExC,IAAI,CAACU,SAAS,GAAG,IAAI;IACvB;EACF;EAEA,MAAeC,kBAAkBA,CAAA,EAAwC;IACvE,OAAO,IAAI,CAACC,sBAAsB,CAAC,CAAC;EACtC;EAESA,sBAAsBA,CAAA,EAAG;IAChC,MAAMC,GAAG,GAAG,IAAI,CAACf,MAAM,CAACI,EAAE,CAACY,gBAAgB,CAAC,IAAI,CAACd,MAAM,CAAC;IACxD,OAAOL,sBAAsB,CAACkB,GAAG,CAAC;EACpC;EAIAR,QAAQA,CAACC,MAAc,EAAQ;IAC7B,MAAMS,cAAc,GAAIT,MAAc,IACpCA,MAAM,CAACU,UAAU,CAAC,WAAW,CAAC,GAAGV,MAAM,GAAI,iBAAgBA,MAAO,EAAC;IACrEA,MAAM,GAAGS,cAAc,CAACT,MAAM,CAAC;IAE/B,MAAM;MAACJ;IAAE,CAAC,GAAG,IAAI,CAACJ,MAAM;IACxBI,EAAE,CAACe,YAAY,CAAC,IAAI,CAACjB,MAAM,EAAEM,MAAM,CAAC;IACpCJ,EAAE,CAACgB,aAAa,CAAC,IAAI,CAAClB,MAAM,CAAC;IAK7B,IAAI,CAACmB,iBAAiB,GAAGjB,EAAE,CAACkB,kBAAkB,CAAC,IAAI,CAACpB,MAAM,OAAmB,CAAC,GAAG,SAAS,GAAG,OAAO;IAGpG,IAAI,CAACqB,WAAW,CAAC,CAAC;IAElB,IAAI,IAAI,CAACF,iBAAiB,KAAK,OAAO,EAAE;MACtC,MAAM,IAAIf,KAAK,CAAE,8BAA6B,IAAI,CAACL,KAAK,CAACE,KAAM,WAAU,IAAI,CAACF,KAAK,CAACuB,EAAG,EAAC,CAAC;IAC3F;EACF;AACF"}