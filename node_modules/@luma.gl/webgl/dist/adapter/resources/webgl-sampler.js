import { Sampler } from '@luma.gl/core';
import { convertSamplerParametersToWebGL } from "../converters/sampler-parameters.js";
export class WEBGLSampler extends Sampler {
  constructor(device, props) {
    super(device, props);
    this.device = void 0;
    this.handle = void 0;
    this.parameters = void 0;
    this.device = device;
    this.parameters = convertSamplerParametersToWebGL(props);
    if (this.device.isWebGL2) {
      this.handle = this.handle || this.device.gl2.createSampler();
      this._setSamplerParameters(this.parameters);
    }
  }
  destroy() {
    if (this.handle) {
      this.device.gl2.deleteSampler(this.handle);
      this.handle = undefined;
    }
  }
  toString() {
    return `Sampler(${this.id},${JSON.stringify(this.props)})`;
  }
  _setSamplerParameters(parameters) {
    for (const [pname, value] of Object.entries(parameters)) {
      const param = Number(pname);
      switch (param) {
        case 33082:
        case 33083:
          this.device.gl2.samplerParameterf(this.handle, param, value);
          break;
        default:
          this.device.gl2.samplerParameteri(this.handle, param, value);
          break;
      }
    }
  }
}
//# sourceMappingURL=webgl-sampler.js.map