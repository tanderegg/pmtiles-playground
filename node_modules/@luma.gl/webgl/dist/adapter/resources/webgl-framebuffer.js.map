{"version":3,"file":"webgl-framebuffer.js","names":["Framebuffer","assert","WEBGLTexture","WEBGLRenderbuffer","getDepthStencilAttachmentWebGL","WEBGLFramebuffer","texture","colorAttachments","constructor","device","props","gl","handle","isDefaultFramebuffer","createFramebuffer","setSpectorMetadata","id","autoCreateAttachmentTextures","bindFramebuffer","i","length","attachment","attachmentPoint","_attachOne","depthStencilAttachment","format","check","_checkStatus","destroy","destroyed","deleteFramebuffer","prevHandle","status","checkFramebufferStatus","Error","_getFrameBufferStatus","createDepthStencilTexture","width","height","resizeAttachments","drawingBufferWidth","drawingBufferHeight","undefined","colorAttachment","resize","_attachWEBGLRenderbuffer","Array","isArray","layer","level","_attachTexture","renderbuffer","framebufferRenderbuffer","gl2","bindTexture","target","assertWebGL2","framebufferTextureLayer","face","mapIndexToCubeMapFace","framebufferTexture2D"],"sources":["../../../src/adapter/resources/webgl-framebuffer.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport type {FramebufferProps, TextureFormat} from '@luma.gl/core';\nimport {Framebuffer, Texture, assert} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLRenderbuffer} from '../objects/webgl-renderbuffer';\nimport {getDepthStencilAttachmentWebGL} from '../converters/texture-formats';\n\nexport type TextureAttachment = [Texture, number?, number?];\nexport type Attachment = WEBGLTexture | WEBGLRenderbuffer | TextureAttachment;\n\n/** luma.gl Framebuffer, WebGL implementation  */\nexport class WEBGLFramebuffer extends Framebuffer {\n  device: WebGLDevice;\n  gl: WebGLRenderingContext;\n  handle: WebGLFramebuffer;\n\n  get texture() {\n    return this.colorAttachments[0];\n  }\n\n  constructor(device: WebGLDevice, props: FramebufferProps) {\n    super(device, props);\n\n    // WebGL default framebuffer handle is null\n    const isDefaultFramebuffer = props.handle === null;\n\n    this.device = device;\n    this.gl = device.gl;\n    this.handle =\n      this.props.handle || isDefaultFramebuffer ? this.props.handle : this.gl.createFramebuffer();\n\n    if (!isDefaultFramebuffer) {\n      // default framebuffer handle is null, so we can't set spector metadata...\n      device.setSpectorMetadata(this.handle, {id: this.props.id, props: this.props});\n\n      // Auto create textures for attachments if needed\n      this.autoCreateAttachmentTextures();\n\n      /** Attach from a map of attachments */\n      this.gl.bindFramebuffer(GL.FRAMEBUFFER, this.handle);\n\n      // Walk the attachments\n      for (let i = 0; i < this.colorAttachments.length; ++i) {\n        const attachment = this.colorAttachments[i];\n        const attachmentPoint = GL.COLOR_ATTACHMENT0 + i;\n        if (attachment) {\n          this._attachOne(attachmentPoint, attachment as WEBGLTexture);\n        }\n      }\n\n      if (this.depthStencilAttachment) {\n        this._attachOne(\n          getDepthStencilAttachmentWebGL(this.depthStencilAttachment.format),\n          this.depthStencilAttachment as WEBGLTexture\n        );\n      }\n\n      this.gl.bindFramebuffer(GL.FRAMEBUFFER, null);\n    }\n\n    // @ts-expect-error\n    if (props.check !== false) {\n      this._checkStatus();\n    }\n  }\n\n  /** destroys any auto created resources etc. */\n  override destroy(): void {\n    super.destroy(); // destroys owned resources etc.\n    if (!this.destroyed && this.handle !== null) {\n      this.gl.deleteFramebuffer(this.handle);\n      // this.handle = null;\n    }\n  }\n\n  // PRIVATE\n\n  /** Check the status */\n  protected _checkStatus(): void {\n    const {gl} = this;\n    // TODO - should we really rely on this trick? \n    const prevHandle = gl.bindFramebuffer(GL.FRAMEBUFFER, this.handle) as unknown as WebGLFramebuffer;\n    const status = gl.checkFramebufferStatus(GL.FRAMEBUFFER);\n    gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle || null);\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n      throw new Error(`Framebuffer ${_getFrameBufferStatus(status)}`);\n    }\n  }\n\n  /** In WebGL we must use renderbuffers for depth/stencil attachments (unless we have extensions) */\n  protected override createDepthStencilTexture(format: TextureFormat): Texture {\n    return new WEBGLRenderbuffer(this.device, {\n      id: `${this.id}-depth-stencil`, // TODO misleading if not depth and stencil?\n      format,\n      // dataFormat: GL.DEPTH_STENCIL,\n      // type: GL.UNSIGNED_INT_24_8,\n      width: this.width,\n      height: this.height\n    }) as unknown as WEBGLTexture;\n  }\n\n  /** \n   * Attachment resize is expected to be a noop if size is same \n   */\n  protected override resizeAttachments(width: number, height: number): this {\n    // for default framebuffer, just update the stored size\n    if (this.handle === null) {\n      // assert(width === undefined && height === undefined);\n      this.width = this.gl.drawingBufferWidth;\n      this.height = this.gl.drawingBufferHeight;\n      return this;\n    }\n\n    if (width === undefined) {\n      width = this.gl.drawingBufferWidth;\n    }\n    if (height === undefined) {\n      height = this.gl.drawingBufferHeight;\n    }\n\n    // TODO Not clear that this is better than default destroy/create implementation\n\n    for (const colorAttachment of this.colorAttachments) {\n      (colorAttachment as WEBGLTexture).resize({width, height});\n    }\n    if (this.depthStencilAttachment) {\n      (this.depthStencilAttachment as WEBGLTexture).resize({width, height});\n    }\n    return this;\n  }\n\n  /** Attach one attachment */\n  protected _attachOne(\n    attachmentPoint: GL,\n    attachment: Attachment\n  ): WEBGLTexture | WEBGLRenderbuffer {\n    if (attachment instanceof WEBGLRenderbuffer) {\n      this._attachWEBGLRenderbuffer(attachmentPoint, attachment);\n      return attachment;\n    } else if (Array.isArray(attachment)) {\n      const [texture, layer = 0, level = 0] = attachment;\n      this._attachTexture(attachmentPoint, texture as unknown as WEBGLTexture, layer, level);\n      return texture as unknown as WEBGLTexture;\n    } else if (attachment instanceof WEBGLTexture) {\n      this._attachTexture(attachmentPoint, attachment, 0, 0);\n      return attachment;\n    }\n    throw new Error('attach');\n  }\n\n  protected _attachWEBGLRenderbuffer(attachment: GL, renderbuffer: WEBGLRenderbuffer): void {\n    this.gl.framebufferRenderbuffer(\n      GL.FRAMEBUFFER,\n      attachment,\n      GL.RENDERBUFFER,\n      renderbuffer.handle\n    );\n  }\n\n  /**\n   * @param attachment\n   * @param texture\n   * @param layer = 0 - index into WEBGLTextureArray and Texture3D or face for `TextureCubeMap`\n   * @param level  = 0 - mipmapLevel (must be 0 in WebGL1)\n   */\n  protected _attachTexture(\n    attachment: GL,\n    texture: WEBGLTexture,\n    layer: number,\n    level: number\n  ): void {\n    const {gl, gl2} = this.device;\n    gl.bindTexture(texture.target, texture.handle);\n\n    switch (texture.target) {\n      case GL.TEXTURE_2D_ARRAY:\n      case GL.TEXTURE_3D:\n        this.device.assertWebGL2();\n        gl2?.framebufferTextureLayer(GL.FRAMEBUFFER, attachment, texture.target, level, layer);\n        break;\n\n      case GL.TEXTURE_CUBE_MAP:\n        // layer must be a cubemap face (or if index, converted to cube map face)\n        const face = mapIndexToCubeMapFace(layer);\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, face, texture.handle, level);\n        break;\n\n      case GL.TEXTURE_2D:\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, GL.TEXTURE_2D, texture.handle, level);\n        break;\n\n      default:\n        assert(false, 'Illegal texture type');\n    }\n\n    gl.bindTexture(texture.target, null);\n  }\n}\n\n// Helper functions\n\n// Map an index to a cube map face constant\nfunction mapIndexToCubeMapFace(layer: number | GL): GL {\n  // TEXTURE_CUBE_MAP_POSITIVE_X is a big value (0x8515)\n  // if smaller assume layer is index, otherwise assume it is already a cube map face constant\n  return layer < (GL.TEXTURE_CUBE_MAP_POSITIVE_X as number) ? layer + GL.TEXTURE_CUBE_MAP_POSITIVE_X : layer;\n}\n\n// Helper METHODS\n// Get a string describing the framebuffer error if installed\nfunction _getFrameBufferStatus(status: GL) {\n  switch (status) {\n    case GL.FRAMEBUFFER_COMPLETE:\n      return 'success';\n    case GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return 'Mismatched attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return 'No attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return 'Height/width mismatch';\n    case GL.FRAMEBUFFER_UNSUPPORTED:\n      return 'Unsupported or split attachments';\n    // WebGL2\n    case GL.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n      return 'Samples mismatch';\n    // OVR_multiview2 extension\n    // case GL.FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: return 'baseViewIndex mismatch';\n    default:\n      return `${status}`;\n  }\n}\n"],"mappings":"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"}