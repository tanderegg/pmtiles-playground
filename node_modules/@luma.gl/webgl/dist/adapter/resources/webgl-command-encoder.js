import { CommandEncoder } from '@luma.gl/core';
import { WEBGLCommandBuffer } from "./webgl-command-buffer.js";
export class WEBGLCommandEncoder extends CommandEncoder {
  constructor(device, props) {
    super(device, props);
    this.device = void 0;
    this.commandBuffer = void 0;
    this.device = device;
    this.commandBuffer = new WEBGLCommandBuffer(device);
  }
  destroy() {}
  finish() {
    this.commandBuffer.submitCommands();
  }
  copyBufferToBuffer(options) {
    this.commandBuffer.commands.push({
      name: 'copy-buffer-to-buffer',
      options
    });
  }
  copyBufferToTexture(options) {
    this.commandBuffer.commands.push({
      name: 'copy-buffer-to-texture',
      options
    });
  }
  copyTextureToBuffer(options) {
    this.commandBuffer.commands.push({
      name: 'copy-texture-to-buffer',
      options
    });
  }
  copyTextureToTexture(options) {
    this.commandBuffer.commands.push({
      name: 'copy-texture-to-texture',
      options
    });
  }
  pushDebugGroup(groupLabel) {}
  popDebugGroup() {}
  insertDebugMarker(markerLabel) {}
}
//# sourceMappingURL=webgl-command-encoder.js.map