{"version":3,"file":"spector.js","names":["log","loadScript","DEFAULT_SPECTOR_PROPS","spector","get","SPECTOR_CDN_URL","LOG_LEVEL","initialized","loadSpectorJS","props","globalThis","SPECTOR","error","warn","String","initializeSpectorJS","_props","_props2","probe","Spector","luma","_spector","_spector2","spyCanvases","onCaptureStarted","add","capture","info","onCapture","_spector3","_spector4","_spector5","getResultUI","resultView","display","addCapture","canvas","_spector6","_props3","id","startCapture","Promise","resolve","setTimeout","then","_","_spector7","stopCapture"],"sources":["../../../src/context/debug/spector.ts"],"sourcesContent":["// luma.gl, MIT license\n// Copyright (c) vis.gl contributors\n\nimport {log, loadScript} from '@luma.gl/core';\n\n/** Spector debug initialization options */\ntype SpectorProps = {\n  /** Canvas to monitor */\n  canvas?: HTMLCanvasElement | OffscreenCanvas;\n  /** Whether debug is enabled. Auto-detected if ommitted */\n  debug?: boolean;\n  /** Whether spector is disabled */\n  spector?: boolean | string | object;\n};\n\nconst DEFAULT_SPECTOR_PROPS: SpectorProps = {\n  spector: log.get('spector') || log.get('inspect')\n};\n\n// https://github.com/BabylonJS/Spector.js#basic-usage\nconst SPECTOR_CDN_URL = 'https://spectorcdn.babylonjs.com/spector.bundle.js';\nconst LOG_LEVEL = 1;\n\nlet spector: any = null;\nlet initialized: boolean = false;\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var SPECTOR: any;\n}\n\n/** Loads spector from CDN if not already installed */\nexport async function loadSpectorJS(props?: SpectorProps) {\n  if (!globalThis.SPECTOR) {\n    try {\n      await loadScript(SPECTOR_CDN_URL);\n    } catch(error) {\n      log.warn(String(error))\n    }\n  }\n}\n\nexport function initializeSpectorJS(props?: SpectorProps) {\n  props = {...DEFAULT_SPECTOR_PROPS, ...props};\n  if (!props?.spector) {\n    return null;\n  }\n\n  if (!spector && globalThis.SPECTOR) {\n    log.probe(LOG_LEVEL, 'SPECTOR found and initialized')();\n    spector = new globalThis.SPECTOR.Spector();\n    if (globalThis.luma) {\n      globalThis.luma.spector = spector;\n    }\n  }\n\n  if (!spector) {\n    return null;\n  }\n\n  if (!initialized) {\n    initialized = true;\n\n    // enables recording some extra information merged in the capture like texture memory sizes and formats\n    spector.spyCanvases();\n    // A callback when results are ready\n    spector?.onCaptureStarted.add((capture: unknown) => log.info('Spector capture started:', capture)());\n    spector?.onCapture.add((capture: unknown) => {\n      log.info('Spector capture complete:', capture)();\n      // Use undocumented Spector API to open the UI with our capture\n      // See https://github.com/BabylonJS/Spector.js/blob/767ad1195a25b85a85c381f400eb50a979239eca/src/spector.ts#L124\n      spector?.getResultUI()\n      spector?.resultView.display();\n      spector?.resultView.addCapture(capture)\n    });\n  }\n\n  if (props?.canvas) {\n    // @ts-expect-error If spector is specified as a canvas id, only monitor that canvas\n    if (typeof props.spector === 'string' && props.spector !== props.canvas.id) {\n      return spector;\n    }\n\n    // capture startup\n    // spector?.captureCanvas(props?.canvas);\n    spector?.startCapture(props?.canvas, 500); // 500 commands\n    new Promise(resolve => setTimeout(resolve, 2000)).then(_ => {\n      log.info('Spector capture stopped after 2 seconds')();\n      spector?.stopCapture();\n      // spector?.displayUI();\n    });\n  }\n\n  return spector;\n}\n"],"mappings":"AAGA,SAAQA,GAAG,EAAEC,UAAU,QAAO,eAAe;AAY7C,MAAMC,qBAAmC,GAAG;EAC1CC,OAAO,EAAEH,GAAG,CAACI,GAAG,CAAC,SAAS,CAAC,IAAIJ,GAAG,CAACI,GAAG,CAAC,SAAS;AAClD,CAAC;AAGD,MAAMC,eAAe,GAAG,oDAAoD;AAC5E,MAAMC,SAAS,GAAG,CAAC;AAEnB,IAAIH,OAAY,GAAG,IAAI;AACvB,IAAII,WAAoB,GAAG,KAAK;AAQhC,OAAO,eAAeC,aAAaA,CAACC,KAAoB,EAAE;EACxD,IAAI,CAACC,UAAU,CAACC,OAAO,EAAE;IACvB,IAAI;MACF,MAAMV,UAAU,CAACI,eAAe,CAAC;IACnC,CAAC,CAAC,OAAMO,KAAK,EAAE;MACbZ,GAAG,CAACa,IAAI,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC;IACzB;EACF;AACF;AAEA,OAAO,SAASG,mBAAmBA,CAACN,KAAoB,EAAE;EAAA,IAAAO,MAAA,EAAAC,OAAA;EACxDR,KAAK,GAAG;IAAC,GAAGP,qBAAqB;IAAE,GAAGO;EAAK,CAAC;EAC5C,IAAI,GAAAO,MAAA,GAACP,KAAK,cAAAO,MAAA,eAALA,MAAA,CAAOb,OAAO,GAAE;IACnB,OAAO,IAAI;EACb;EAEA,IAAI,CAACA,OAAO,IAAIO,UAAU,CAACC,OAAO,EAAE;IAClCX,GAAG,CAACkB,KAAK,CAACZ,SAAS,EAAE,+BAA+B,CAAC,CAAC,CAAC;IACvDH,OAAO,GAAG,IAAIO,UAAU,CAACC,OAAO,CAACQ,OAAO,CAAC,CAAC;IAC1C,IAAIT,UAAU,CAACU,IAAI,EAAE;MACnBV,UAAU,CAACU,IAAI,CAACjB,OAAO,GAAGA,OAAO;IACnC;EACF;EAEA,IAAI,CAACA,OAAO,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,IAAI,CAACI,WAAW,EAAE;IAAA,IAAAc,QAAA,EAAAC,SAAA;IAChBf,WAAW,GAAG,IAAI;IAGlBJ,OAAO,CAACoB,WAAW,CAAC,CAAC;IAErB,CAAAF,QAAA,GAAAlB,OAAO,cAAAkB,QAAA,uBAAPA,QAAA,CAASG,gBAAgB,CAACC,GAAG,CAAEC,OAAgB,IAAK1B,GAAG,CAAC2B,IAAI,CAAC,0BAA0B,EAAED,OAAO,CAAC,CAAC,CAAC,CAAC;IACpG,CAAAJ,SAAA,GAAAnB,OAAO,cAAAmB,SAAA,uBAAPA,SAAA,CAASM,SAAS,CAACH,GAAG,CAAEC,OAAgB,IAAK;MAAA,IAAAG,SAAA,EAAAC,SAAA,EAAAC,SAAA;MAC3C/B,GAAG,CAAC2B,IAAI,CAAC,2BAA2B,EAAED,OAAO,CAAC,CAAC,CAAC;MAGhD,CAAAG,SAAA,GAAA1B,OAAO,cAAA0B,SAAA,uBAAPA,SAAA,CAASG,WAAW,CAAC,CAAC;MACtB,CAAAF,SAAA,GAAA3B,OAAO,cAAA2B,SAAA,uBAAPA,SAAA,CAASG,UAAU,CAACC,OAAO,CAAC,CAAC;MAC7B,CAAAH,SAAA,GAAA5B,OAAO,cAAA4B,SAAA,uBAAPA,SAAA,CAASE,UAAU,CAACE,UAAU,CAACT,OAAO,CAAC;IACzC,CAAC,CAAC;EACJ;EAEA,KAAAT,OAAA,GAAIR,KAAK,cAAAQ,OAAA,eAALA,OAAA,CAAOmB,MAAM,EAAE;IAAA,IAAAC,SAAA,EAAAC,OAAA;IAEjB,IAAI,OAAO7B,KAAK,CAACN,OAAO,KAAK,QAAQ,IAAIM,KAAK,CAACN,OAAO,KAAKM,KAAK,CAAC2B,MAAM,CAACG,EAAE,EAAE;MAC1E,OAAOpC,OAAO;IAChB;IAIA,CAAAkC,SAAA,GAAAlC,OAAO,cAAAkC,SAAA,uBAAPA,SAAA,CAASG,YAAY,EAAAF,OAAA,GAAC7B,KAAK,cAAA6B,OAAA,uBAALA,OAAA,CAAOF,MAAM,EAAE,GAAG,CAAC;IACzC,IAAIK,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,IAAI,CAAC,CAAC,CAACE,IAAI,CAACC,CAAC,IAAI;MAAA,IAAAC,SAAA;MAC1D9C,GAAG,CAAC2B,IAAI,CAAC,yCAAyC,CAAC,CAAC,CAAC;MACrD,CAAAmB,SAAA,GAAA3C,OAAO,cAAA2C,SAAA,uBAAPA,SAAA,CAASC,WAAW,CAAC,CAAC;IAExB,CAAC,CAAC;EACJ;EAEA,OAAO5C,OAAO;AAChB"}