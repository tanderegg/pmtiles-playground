import type { Log } from '@probe.gl/log';
import type { DeviceProps } from '../adapter/device';
import { Device } from '../adapter/device';
import { StatsManager } from '../utils/stats-manager';
/**
 * Entry point to the luma.gl GPU abstraction
 * Register WebGPU and/or WebGL devices (controls application bundle size)
 * Run-time selection of the first available Device
 */
export declare class luma {
    /** Global stats for all devices */
    static stats: StatsManager;
    /** Global log */
    static log: Log;
    static registerDevices(deviceClasses: any[]): void;
    static getAvailableDevices(): string[];
    static getSupportedDevices(): string[];
    static setDefaultDeviceProps(props: DeviceProps): void;
    /** Creates a device. Asynchronously. */
    static createDevice(props?: DeviceProps): Promise<Device>;
}
//# sourceMappingURL=luma.d.ts.map